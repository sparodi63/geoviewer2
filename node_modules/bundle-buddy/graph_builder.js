"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sumLines(obj) {
    return Object.keys(obj).map(k => obj[k].count).reduce((p, c) => {
        return p + c;
    }, 0);
}
function buildLinks(groupedOutputFiles, logger) {
    logger.info("Building graph links between bundles.");
    const ret = [];
    for (const bundleName of groupedOutputFiles.keys()) {
        const sourceFiles = Object.keys(groupedOutputFiles.get(bundleName));
        for (const sourcePath of sourceFiles) {
            ret.push({
                source: sourcePath,
                target: bundleName,
                strength: groupedOutputFiles.get(bundleName)[sourcePath].count
            });
        }
    }
    return ret;
}
function buildGraph(groupedSourceFiles, groupedOutputFiles, sourceToBundles, logger) {
    const nodes = [];
    logger.info("Building graph between bundles.");
    // build input nodes
    for (const sourceFileName of groupedSourceFiles.keys()) {
        nodes.push({
            id: sourceFileName,
            type: "input",
            size: sumLines(groupedSourceFiles.get(sourceFileName)),
            inBundleFiles: Array.from(sourceToBundles[sourceFileName])
        });
    }
    // build output nodes
    for (const outputFileName of groupedOutputFiles.keys()) {
        nodes.push({
            id: outputFileName,
            type: "output",
            size: sumLines(groupedOutputFiles.get(outputFileName))
        });
    }
    return {
        nodes,
        links: buildLinks(groupedOutputFiles, logger)
    };
}
exports.buildGraph = buildGraph;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhfYnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdyYXBoX2J1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQSxrQkFBa0IsR0FBeUM7SUFDekQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDMUQsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDZixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDUixDQUFDO0FBRUQsb0JBQ0Usa0JBUUMsRUFDRCxNQUFjO0lBRWQsTUFBTSxDQUFDLElBQUksQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sR0FBRyxHQUEyRCxFQUFFLENBQUM7SUFFdkUsR0FBRyxDQUFDLENBQUMsTUFBTSxVQUFVLElBQUksa0JBQWtCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDcEUsR0FBRyxDQUFDLENBQUMsTUFBTSxVQUFVLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQztZQUNyQyxHQUFHLENBQUMsSUFBSSxDQUFDO2dCQUNQLE1BQU0sRUFBRSxVQUFVO2dCQUNsQixNQUFNLEVBQUUsVUFBVTtnQkFDbEIsUUFBUSxFQUFFLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUUsQ0FBQyxVQUFVLENBQUUsQ0FBQyxLQUFLO2FBQ2pFLENBQUMsQ0FBQztRQUNMLENBQUM7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxvQkFDRSxrQkFHQyxFQUNELGtCQVFDLEVBQ0QsZUFBc0QsRUFDdEQsTUFBYztJQUVkLE1BQU0sS0FBSyxHQUFXLEVBQUUsQ0FBQztJQUV6QixNQUFNLENBQUMsSUFBSSxDQUFDLGlDQUFpQyxDQUFDLENBQUM7SUFFL0Msb0JBQW9CO0lBQ3BCLEdBQUcsQ0FBQyxDQUFDLE1BQU0sY0FBYyxJQUFJLGtCQUFrQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN2RCxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ1QsRUFBRSxFQUFFLGNBQWM7WUFDbEIsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUUsUUFBUSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUUsQ0FBQztZQUN2RCxhQUFhLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFFLENBQUM7U0FDNUQsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELHFCQUFxQjtJQUNyQixHQUFHLENBQUMsQ0FBQyxNQUFNLGNBQWMsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdkQsS0FBSyxDQUFDLElBQUksQ0FBQztZQUNULEVBQUUsRUFBRSxjQUFjO1lBQ2xCLElBQUksRUFBRSxRQUFRO1lBQ2QsSUFBSSxFQUFFLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFFLENBQUM7U0FDeEQsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU0sQ0FBQztRQUNMLEtBQUs7UUFDTCxLQUFLLEVBQUUsVUFBVSxDQUFDLGtCQUFrQixFQUFFLE1BQU0sQ0FBQztLQUM5QyxDQUFDO0FBQ0osQ0FBQztBQTVDRCxnQ0E0Q0MifQ==
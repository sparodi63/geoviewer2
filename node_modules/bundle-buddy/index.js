"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const process_1 = require("./process");
const server_1 = require("./server");
const utils_1 = require("./utils");
const meow = require("meow");
const globby = require("globby");
const fs = require("fs");
const cli = meow(`
  Usage:
    bundle-buddy  <source_map_glob>

  Options:
    --verbose -v: Write verbose logging to stderr
    --stdout -o: Write analysis to stdout
    --demo: View a demo bundle

  Example:
    bundle-buddy my_app/dist/*.map
`, {
    alias: {
        o: "stdout",
        v: "verbose"
    },
    boolean: ["stdout", "verbose", "demo"]
});
if (cli.input.length === 0 && !cli.flags["demo"]) {
    cli.showHelp();
    process.exit(2);
}
if (cli.flags["demo"]) {
    server_1.launchServer("demo.json");
}
else {
    const bundleSourceMaps = globby.sync(cli.input);
    const processed = process_1.processSourceMaps(bundleSourceMaps, {
        logLevel: cli.flags["verbose"] || cli.flags["v"] ? "verbose" : "silent"
    });
    const stringifedData = utils_1.formatProcessedSourceMaps(processed);
    if (cli.flags["stdout"] || cli.flags["o"]) {
        console.log(stringifedData);
    }
    else {
        const dataPath = `data_${Date.now()}`;
        const writePath = utils_1.getWritePathForSerializedData(dataPath);
        fs.writeFileSync(writePath, stringifedData);
        server_1.launchServer(dataPath);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUE4QztBQUM5QyxxQ0FBd0M7QUFDeEMsbUNBR2lCO0FBQ2pCLDZCQUE2QjtBQUM3QixpQ0FBaUM7QUFDakMseUJBQXlCO0FBRXpCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FDZDs7Ozs7Ozs7Ozs7Q0FXRCxFQUNDO0lBQ0UsS0FBSyxFQUFFO1FBQ0wsQ0FBQyxFQUFFLFFBQVE7UUFDWCxDQUFDLEVBQUUsU0FBUztLQUNiO0lBQ0QsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUM7Q0FDdkMsQ0FDRixDQUFDO0FBRUYsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakQsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixDQUFDO0FBRUQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEIscUJBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBQUMsSUFBSSxDQUFDLENBQUM7SUFDTixNQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE1BQU0sU0FBUyxHQUFHLDJCQUFpQixDQUFDLGdCQUFnQixFQUFFO1FBQ3BELFFBQVEsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsU0FBUyxHQUFHLFFBQVE7S0FDeEUsQ0FBQyxDQUFDO0lBRUgsTUFBTSxjQUFjLEdBQUcsaUNBQXlCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFNUQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNOLE1BQU0sUUFBUSxHQUFHLFFBQVEsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7UUFDdEMsTUFBTSxTQUFTLEdBQUcscUNBQTZCLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFMUQsRUFBRSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFFNUMscUJBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QixDQUFDO0FBQ0gsQ0FBQyJ9
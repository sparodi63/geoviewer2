{"version":3,"sources":["webpack:///static/js/13.js","webpack:///./E:/node-prj/geoviewer2/src/leaflet/leaflet.draw-src.js?3a3b","webpack:///./E:/node-prj/geoviewer2/src/leaflet/leaflet.drawlocal.js?bd1b","webpack:///Measure.vue","webpack:///./E:/node-prj/geoviewer2/src/services/getElevation.js","webpack:///./src/components/Measure.vue?02fc","webpack:///./src/components/Measure.vue?ec8a","webpack:///./src/components/Measure.vue","webpack:///./src/components/Measure.vue?00da"],"names":["webpackJsonp","102","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_typeof2","_typeof3","window","document","undefined","_hasAncestor","el","cls","parentElement","classList","contains","L","drawVersion","Draw","Event","CREATED","EDITED","DELETED","DRAWSTART","DRAWSTOP","DRAWVERTEX","EDITSTART","EDITMOVE","EDITRESIZE","EDITVERTEX","EDITSTOP","DELETESTART","DELETESTOP","TOOLBAROPENED","TOOLBARCLOSED","MARKERCONTEXT","Feature","Handler","extend","initialize","map","options","this","_map","_container","_overlayPane","_panes","overlayPane","_popupPane","popupPane","shapeOptions","Util","setOptions","version","split","parseInt","include","Evented","prototype","Mixin","Events","enable","_enabled","call","fire","handler","type","layerType","disable","addHooks","DomUtil","disableTextSelection","getContainer","focus","_tooltip","Tooltip","DomEvent","on","_cancelDrawing","removeHooks","enableTextSelection","dispose","off","_fireCreatedEvent","layer","e","keyCode","Polyline","statics","TYPE","Poly","allowIntersection","repeatMode","drawError","color","timeout","icon","DivIcon","iconSize","Point","className","touchIcon","guidelineDistance","maxGuideLineLength","stroke","weight","opacity","fill","clickable","metric","feet","nautic","showLength","zIndexOffset","factor","maxPoints","Browser","touch","message","drawLocal","draw","handlers","polyline","error","_markers","_markerGroup","LayerGroup","addLayer","_poly","updateContent","_getTooltipText","_mouseMarker","marker","getCenter","divIcon","iconAnchor","_onMouseOut","_onMouseMove","_onMouseDown","_onMouseUp","addTo","_onZoomEnd","_onTouch","_clearHideErrorTimeout","_cleanUpShape","removeLayer","_clearGuides","deleteLastVertex","length","lastMarker","pop","poly","latlngs","getLatLngs","latlng","splice","setLatLngs","_vertexChanged","addVertex","markersLength","newLatLngIntersects","_showErrorTooltip","_errorShown","_hideErrorTooltip","push","_createMarker","addLatLng","completeShape","_finishShape","_defaultShape","intersects","_shapeIsValid","_updateGuide","newPos","mouseEventToLayerPoint","originalEvent","layerPointToLatLng","_currentLatLng","_updateTooltip","setLatLng","preventDefault","added","layers","_updateFinishHandler","_updateRunningMeasure","_clickHandled","_touchHandled","_disableMarkers","_disableNewMarkers","clientX","clientY","_startPoint","_mouseDownOrigin","point","_endPoint","dragCheckDistance","distanceTo","lastPtDistance","_calculateFinishDistance","Math","abs","devicePixelRatio","_enableNewMarkers","touches","potentialLatLng","finishMarker","Polygon","Infinity","lastMarkerPoint","latLngToContainerPoint","getLatLng","potentialMarker","Marker","potentialMarkerPint","markerCount","latLngToLayerPoint","_drawGuide","latLng","text","updatePosition","pointA","pointB","fraction","dashPoint","dash","floor","sqrt","pow","x","y","i","_guidesContainer","create","style","backgroundColor","setPosition","_updateGuideColor","l","childNodes","firstChild","removeChild","labelText","distanceStr","tooltip","start","_getMeasurementString","cont","subtext","end","previousMarkerIndex","distance","_measurementRunningTotal","GeometryUtil","isVersion07x","currentLatLng","previousLatLng","readableDistance","precision","showAsError","setStyle","_hideErrorTimeout","setTimeout","bind","removeError","clearTimeout","showArea","fillColor","fillOpacity","polygon","area","_area","measurementString","readableArea","latLngs","geodesicArea","SimpleShape","_endLabelText","simpleshape","_mapDraggable","dragging","enabled","cursor","_initialLabelText","addEventListener","passive","removeEventListener","_shape","_isDrawing","_startLatLng","_drawShape","Rectangle","rectangle","_isCurrentlyTwoClickDrawing","target","setBounds","LatLngBounds","getBounds","tooltipText","shape","Icon","Default","_onClick","_marker","Touch","CircleMarker","circlemarker","circleMarker","Circle","showRadius","circle","setRadius","getRadius","radius","useMetric","toFixed","Edit","_onDragEnd","_toggleMarkerHighlight","edited","_icon","display","hasClass","removeClass","_offsetMarker","addClass","offset","iconMarginTop","marginTop","iconMarginLeft","marginLeft","addInitHook","editing","editable","_latlngs","_holes","concat","_updateLatLngs","LineUtil","isFlat","_eachVertexHandler","callback","_verticesHandlers","_initHandlers","updateMarkers","PolyVerticesEdit","path","_path","original","forEach","_initMarkers","clearLayers","j","len","_onMarkerClick","_onContextMenu","markerLeft","markerRight","_createMiddleMarker","_updatePrevNext","index","draggable","_origLatLng","_index","_onMarkerDragStart","_onMarkerDrag","_fireEdit","_onTouchMove","_spliceLatLngs","removed","apply","arguments","_convertLatLngs","redraw","_removeMarker","_updateIndexes","_latlng","_middleLeft","_getMiddleLatLng","_prev","_middleRight","_next","_editTooltip","originalColor","indexOf","_draggable","_onUp","edit","_bounds","_southWest","_northEast","minPoints","stopPropagation","layerPoint","delta","eachLayer","marker1","marker2","onClick","onDragStart","onDragEnd","setOpacity","lat","lng","p1","project","p2","unproject","_add","_divideBy","moveIcon","resizeIcon","touchMoveIcon","touchResizeIcon","_unbindMarker","_moveMarker","_resizeMarkers","_createMoveMarker","_createResizeMarker","_bindMarker","_onMarkerDragEnd","_onTouchStart","_onTouchEnd","_move","_resize","_getCorners","corners","currentCornerIndex","_cornerIndex","_oppositeCorner","_toggleCornerMarkers","bounds","center","_repositionCornerMarkers","newCenter","newLatLngs","latLngBounds","nw","getNorthWest","ne","getNorthEast","se","getSouthEast","sw","getSouthWest","resizemarkerPoint","_getResizeMarkerPoint","_radius","cos","PI","moveLatLng","Map","mergeOptions","touchExtend","TouchExtend","_pane","_detectIE","_onTouchCancel","_onTouchLeave","_touchEvent","touchEvent","pointerType","_filterClick","containerPoint","mouseEventToContainerPoint","pageX","pageY","timeStamp","elapsed","_lastClick","_simulatedClick","_simulated","stop","_loaded","ua","navigator","userAgent","msie","substring","trident","rv","edge","_initInteraction","addInteractiveTarget","_initInteractionLegacy","events","_onMouseClick","_onKeyPress","_fireMouseEvent","MarkerDrag","LatLngUtil","cloneLatLngs","clone","Array","isArray","cloneLatLng","defaultPrecision","km","ha","m","mi","ac","yd","ft","nm","pointsCount","d2r","sin","formattedNumber","n","formatted","parseFloat","format","numeric","delimiters","thousands","decimal","splitValue","replace","isMetric","areaStr","units","isFeet","isNauticalMile","segmentsIntersect","p","p3","_checkCounterclockwise","points","_getProjectedPoints","_tooFewPointsForIntersection","_lineSegmentsIntersectsRange","skipFirst","newPointIntersects","newPoint","lastPoint","maxIndex","extraPoints","minIndex","_originalPoints","polylineIntersects","firstPoint","Control","position","Error","toolbar","_toolbars","DrawToolbar","_toolbarEnabled","EditToolbar","onAdd","toolbarContainer","container","addedTopClass","topClassName","toolbarId","hasOwnProperty","addToolbar","appendChild","onRemove","removeToolbar","setDrawingOptions","enabledToolbar","drawControlTooltips","drawControl","addControl","Toolbar","Class","_modes","_actionButtons","_activeMode","buttonIndex","buttonClassPrefix","_toolbarClass","modeHandlers","getModeHandlers","_toolbarContainer","_initModeHandler","title","_lastButtonIndex","_actionsContainer","handlerId","_disposeButton","button","_handlerActivated","_handlerDeactivated","classNamePredix","buttonTitle","_createButton","context","_detectIOS","iOS","test","MSStream","link","sr","href","innerHTML","buttonEvent","_showActionsToolbar","_hideActionsToolbar","_createActions","li","di","dl","buttons","getActions","lastButtonIndex","toolbarPosition","offsetTop","top","_visible","_singleLineLabel","visibility","pos","tooltipContainer","finish","undo","actions","selectedPathOptions","dashArray","maintainColor","remove","featureGroup","_selectedFeatureCount","Delete","save","_save","cancel","removeAllLayers","clearAll","_clearAllLayers","_checkDisabled","revertLayers","hasLayers","getLayers","setAttribute","editDisabled","removeDisabled","_featureGroup","FeatureGroup","_uneditedLayerProps","_hasAvailableLayers","_enableLayerEdit","_disableLayerEdit","_revertLayer","editedLayers","_backupLayer","id","stamp","pathOptions","_selectedPathOptions","previousOptions","changedTouches","_deletableLayers","_enableLayerDelete","_disableLayerDelete","_deletedLayers","_removeLayer","103","274","Object","defineProperty","value","_button","_base","_button3","_button4","_vue","_vue2","_getCoordTransform","_getCoordTransform2","_getElevation","_getElevation2","use","name","data","GV","config","getToolOptions","buttonDisabled","pointClass","lineClass","areaClass","activeHandler","resultPointWGS84","resultPointGB","resultPointHeight","resultPointETRF89","resultLine","resultArea","showInfo","showInfoPoint","showInfoLine","showInfoArea","showResultPoint","showResultLine","showResultArea","pointHandler","app","iconUrl","lineHandler","areaHandler","methods","measurePoint","clear","setClass","measureLine","measureArea","getElementById","handleMarker","_this","then","response","coords","status","elevation","handleLine","handleArea","drawCreated","mounted","_this2","eventBus","$on","ev","331","getElevation","srs","url","_globals2","RL_ELEVATION","_axios2","get","_axios","_globals","456","sources","names","mappings","file","sourcesContent","sourceRoot","570","content","locals","655","__vue_exports__","__vue_options__","__vue_template__","render","staticRenderFns","756","_vm","$createElement","_c","staticClass","attrs","divId","noClose","_v","size","click","directives","rawName","expression","_m","width","_s"],"mappings":"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opHGC,KAAM,WACJ,GAAI1nB,GAAU2nB,GAAGC,OAAOC,eGlpH7B,oBHopHK,QACE7nB,QGnpHPA,EHopHOwhB,MAAOxhB,EAAQwhB,OGnpHtB,cHopHOsG,gBGnpHP,EHopHOC,WGnpHP,iFHopHOC,UGnpHP,sFHopHOC,UGnpHP,kFHopHOC,cGnpHP,KHopHOvlB,MGnpHP,KHopHOlB,KGnpHP,KHopHO0mB,iBGnpHP,KHopHOC,cGnpHP,KHopHOC,kBGnpHP,KHopHOC,kBGnpHP,KHopHOC,WGnpHP,KHopHOC,WGnpHP,EHopHOC,UGnpHP,EHopHOC,eGnpHP,EHopHOC,cGnpHP,EHopHOC,cGnpHP,EHopHOC,iBGnpHP,EHopHOC,gBGnpHP,EHopHOC,gBGnpHP,EHopHOC,aAAc,GAAIzqB,GAAEE,KAAKkM,OAAOgd,GAAGsB,IAAIlpB,KACrCwD,KAAMhF,EAAEgF,MACN2lB,QGnpHX,2DHopHWzlB,UAAW,GGnpHtB,IHopHWqC,YAAa,EGjpHxB,QHopHOqjB,YAAa,GAAI5qB,GAAEE,KAAKqE,SAAS6kB,GAAGsB,IAAIlpB,KACtCU,cACE4C,MGjpHX,aHopHO+lB,YAAa,GAAI7qB,GAAEE,KAAK4L,QAAQsd,GAAGsB,IAAIlpB,KACrCmD,mBGnpHT,EHopHS8K,UGnpHT,EHopHS5J,QGnpHT,EHopHS3D,cACE4C,MGhpHX,eHspHGgmB,SACEC,aAAc,WACZrpB,KGppHPspB,QHqpHOtpB,KAAKupB,SGppHZ,SHqpHOvpB,KAAK+oB,aGppHZ5nB,UHspHKqoB,YAAa,WACXxpB,KGppHPspB,QHqpHOtpB,KAAKupB,SGppHZ,QHqpHOvpB,KAAKkpB,YGppHZ/nB,UHspHKsoB,YAAa,WACXzpB,KGppHPspB,QHqpHOtpB,KAAKupB,SGppHZ,QHqpHOvpB,KAAKmpB,YGppHZhoB,UHspHKooB,SAAU,SAAkB/nB,GAK1B,OAJA1D,SAAS4rB,eAAe,oBAAoBhmB,UAAY1D,KGppH/D8nB,WHqpHOhqB,SAAS4rB,eAAe,mBAAmBhmB,UAAY1D,KGppH9D+nB,UHqpHOjqB,SAAS4rB,eAAe,mBAAmBhmB,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","file":"static/js/13.js","sourcesContent":["webpackJsonp([13,27],{\n\n/***/ 102:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof2 = __webpack_require__(45);\n\t\n\tvar _typeof3 = _interopRequireDefault(_typeof2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (window, document, undefined) {\n\t  L.drawVersion = '0.4.14';\n\t\n\t  L.Draw = {};\n\t\n\t  L.Draw.Event = {};\n\t\n\t  L.Draw.Event.CREATED = 'draw:created';\n\t\n\t  L.Draw.Event.EDITED = 'draw:edited';\n\t\n\t  L.Draw.Event.DELETED = 'draw:deleted';\n\t\n\t  L.Draw.Event.DRAWSTART = 'draw:drawstart';\n\t\n\t  L.Draw.Event.DRAWSTOP = 'draw:drawstop';\n\t\n\t  L.Draw.Event.DRAWVERTEX = 'draw:drawvertex';\n\t\n\t  L.Draw.Event.EDITSTART = 'draw:editstart';\n\t\n\t  L.Draw.Event.EDITMOVE = 'draw:editmove';\n\t\n\t  L.Draw.Event.EDITRESIZE = 'draw:editresize';\n\t\n\t  L.Draw.Event.EDITVERTEX = 'draw:editvertex';\n\t\n\t  L.Draw.Event.EDITSTOP = 'draw:editstop';\n\t\n\t  L.Draw.Event.DELETESTART = 'draw:deletestart';\n\t\n\t  L.Draw.Event.DELETESTOP = 'draw:deletestop';\n\t\n\t  L.Draw.Event.TOOLBAROPENED = 'draw:toolbaropened';\n\t\n\t  L.Draw.Event.TOOLBARCLOSED = 'draw:toolbarclosed';\n\t\n\t  L.Draw.Event.MARKERCONTEXT = 'draw:markercontext';\n\t\n\t  L.Draw = L.Draw || {};\n\t\n\t  L.Draw.Feature = L.Handler.extend({\n\t    initialize: function initialize(map, options) {\n\t      this._map = map;\n\t      this._container = map._container;\n\t      this._overlayPane = map._panes.overlayPane;\n\t      this._popupPane = map._panes.popupPane;\n\t\n\t      if (options && options.shapeOptions) {\n\t        options.shapeOptions = L.Util.extend({}, this.options.shapeOptions, options.shapeOptions);\n\t      }\n\t      L.setOptions(this, options);\n\t\n\t      var version = L.version.split('.');\n\t\n\t      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n\t        L.Draw.Feature.include(L.Evented.prototype);\n\t      } else {\n\t        L.Draw.Feature.include(L.Mixin.Events);\n\t      }\n\t    },\n\t\n\t    enable: function enable() {\n\t      if (this._enabled) {\n\t        return;\n\t      }\n\t\n\t      L.Handler.prototype.enable.call(this);\n\t\n\t      this.fire('enabled', {\n\t        handler: this.type\n\t      });\n\t\n\t      this._map.fire(L.Draw.Event.DRAWSTART, {\n\t        layerType: this.type\n\t      });\n\t    },\n\t\n\t    disable: function disable() {\n\t      if (!this._enabled) {\n\t        return;\n\t      }\n\t\n\t      L.Handler.prototype.disable.call(this);\n\t\n\t      this._map.fire(L.Draw.Event.DRAWSTOP, {\n\t        layerType: this.type\n\t      });\n\t\n\t      this.fire('disabled', {\n\t        handler: this.type\n\t      });\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      var map = this._map;\n\t\n\t      if (map) {\n\t        L.DomUtil.disableTextSelection();\n\t\n\t        map.getContainer().focus();\n\t\n\t        this._tooltip = new L.Draw.Tooltip(this._map);\n\t\n\t        L.DomEvent.on(this._container, 'keyup', this._cancelDrawing, this);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      if (this._map) {\n\t        L.DomUtil.enableTextSelection();\n\t\n\t        this._tooltip.dispose();\n\t        this._tooltip = null;\n\t\n\t        L.DomEvent.off(this._container, 'keyup', this._cancelDrawing, this);\n\t      }\n\t    },\n\t\n\t    setOptions: function setOptions(options) {\n\t      L.setOptions(this, options);\n\t    },\n\t\n\t    _fireCreatedEvent: function _fireCreatedEvent(layer) {\n\t      this._map.fire(L.Draw.Event.CREATED, {\n\t        layer: layer,\n\t        layerType: this.type\n\t      });\n\t    },\n\t\n\t    _cancelDrawing: function _cancelDrawing(e) {\n\t      if (e.keyCode === 27) {\n\t        this._map.fire('draw:canceled', {\n\t          layerType: this.type\n\t        });\n\t        this.disable();\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Draw.Polyline = L.Draw.Feature.extend({\n\t    statics: {\n\t      TYPE: 'polyline'\n\t    },\n\t\n\t    Poly: L.Polyline,\n\t\n\t    options: {\n\t      allowIntersection: true,\n\t      repeatMode: false,\n\t      drawError: {\n\t        color: '#b00b00',\n\t        timeout: 2500\n\t      },\n\t      icon: new L.DivIcon({\n\t        iconSize: new L.Point(8, 8),\n\t        className: 'leaflet-div-icon leaflet-editing-icon'\n\t      }),\n\t      touchIcon: new L.DivIcon({\n\t        iconSize: new L.Point(8, 8),\n\t        className: 'leaflet-div-icon leaflet-editing-icon leaflet-touch-icon'\n\t      }),\n\t      guidelineDistance: 20,\n\t      maxGuideLineLength: 4000,\n\t      shapeOptions: {\n\t        stroke: true,\n\t        color: '#3388ff',\n\t        weight: 4,\n\t        opacity: 0.5,\n\t        fill: false,\n\t        clickable: true\n\t      },\n\t      metric: true,\n\t      feet: true,\n\t      nautic: false,\n\t      showLength: true,\n\t      zIndexOffset: 2000,\n\t      factor: 1,\n\t      maxPoints: 0 },\n\t\n\t    initialize: function initialize(map, options) {\n\t      if (L.Browser.touch) {\n\t        this.options.icon = this.options.touchIcon;\n\t      }\n\t\n\t      this.options.drawError.message = L.drawLocal.draw.handlers.polyline.error;\n\t\n\t      if (options && options.drawError) {\n\t        options.drawError = L.Util.extend({}, this.options.drawError, options.drawError);\n\t      }\n\t\n\t      this.type = L.Draw.Polyline.TYPE;\n\t\n\t      L.Draw.Feature.prototype.initialize.call(this, map, options);\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      L.Draw.Feature.prototype.addHooks.call(this);\n\t      if (this._map) {\n\t        this._markers = [];\n\t\n\t        this._markerGroup = new L.LayerGroup();\n\t        this._map.addLayer(this._markerGroup);\n\t\n\t        this._poly = new L.Polyline([], this.options.shapeOptions);\n\t\n\t        this._tooltip.updateContent(this._getTooltipText());\n\t\n\t        if (!this._mouseMarker) {\n\t          this._mouseMarker = L.marker(this._map.getCenter(), {\n\t            icon: L.divIcon({\n\t              className: 'leaflet-mouse-marker',\n\t              iconAnchor: [20, 20],\n\t              iconSize: [40, 40]\n\t            }),\n\t            opacity: 0,\n\t            zIndexOffset: this.options.zIndexOffset\n\t          });\n\t        }\n\t\n\t        this._mouseMarker.on('mouseout', this._onMouseOut, this).on('mousemove', this._onMouseMove, this).on('mousedown', this._onMouseDown, this).on('mouseup', this._onMouseUp, this).addTo(this._map);\n\t\n\t        this._map.on('mouseup', this._onMouseUp, this).on('mousemove', this._onMouseMove, this).on('zoomlevelschange', this._onZoomEnd, this).on('touchstart', this._onTouch, this).on('zoomend', this._onZoomEnd, this);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      L.Draw.Feature.prototype.removeHooks.call(this);\n\t\n\t      this._clearHideErrorTimeout();\n\t\n\t      this._cleanUpShape();\n\t\n\t      this._map.removeLayer(this._markerGroup);\n\t      delete this._markerGroup;\n\t      delete this._markers;\n\t\n\t      this._map.removeLayer(this._poly);\n\t      delete this._poly;\n\t\n\t      this._mouseMarker.off('mousedown', this._onMouseDown, this).off('mouseout', this._onMouseOut, this).off('mouseup', this._onMouseUp, this).off('mousemove', this._onMouseMove, this);\n\t      this._map.removeLayer(this._mouseMarker);\n\t      delete this._mouseMarker;\n\t\n\t      this._clearGuides();\n\t\n\t      this._map.off('mouseup', this._onMouseUp, this).off('mousemove', this._onMouseMove, this).off('zoomlevelschange', this._onZoomEnd, this).off('zoomend', this._onZoomEnd, this).off('touchstart', this._onTouch, this).off('click', this._onTouch, this);\n\t    },\n\t\n\t    deleteLastVertex: function deleteLastVertex() {\n\t      if (this._markers.length <= 1) {\n\t        return;\n\t      }\n\t\n\t      var lastMarker = this._markers.pop(),\n\t          poly = this._poly,\n\t          latlngs = poly.getLatLngs(),\n\t          latlng = latlngs.splice(-1, 1)[0];\n\t      this._poly.setLatLngs(latlngs);\n\t\n\t      this._markerGroup.removeLayer(lastMarker);\n\t\n\t      if (poly.getLatLngs().length < 2) {\n\t        this._map.removeLayer(poly);\n\t      }\n\t\n\t      this._vertexChanged(latlng, false);\n\t    },\n\t\n\t    addVertex: function addVertex(latlng) {\n\t      var markersLength = this._markers.length;\n\t\n\t      if (markersLength >= 2 && !this.options.allowIntersection && this._poly.newLatLngIntersects(latlng)) {\n\t        this._showErrorTooltip();\n\t        return;\n\t      } else if (this._errorShown) {\n\t        this._hideErrorTooltip();\n\t      }\n\t\n\t      this._markers.push(this._createMarker(latlng));\n\t\n\t      this._poly.addLatLng(latlng);\n\t\n\t      if (this._poly.getLatLngs().length === 2) {\n\t        this._map.addLayer(this._poly);\n\t      }\n\t\n\t      this._vertexChanged(latlng, true);\n\t    },\n\t\n\t    completeShape: function completeShape() {\n\t      if (this._markers.length <= 1) {\n\t        return;\n\t      }\n\t\n\t      this._fireCreatedEvent();\n\t      this.disable();\n\t\n\t      if (this.options.repeatMode) {\n\t        this.enable();\n\t      }\n\t    },\n\t\n\t    _finishShape: function _finishShape() {\n\t      var latlngs = this._poly._defaultShape ? this._poly._defaultShape() : this._poly.getLatLngs();\n\t      var intersects = this._poly.newLatLngIntersects(latlngs[latlngs.length - 1]);\n\t\n\t      if (!this.options.allowIntersection && intersects || !this._shapeIsValid()) {\n\t        this._showErrorTooltip();\n\t        return;\n\t      }\n\t\n\t      this._fireCreatedEvent();\n\t      this.disable();\n\t      if (this.options.repeatMode) {\n\t        this.enable();\n\t      }\n\t    },\n\t\n\t    _shapeIsValid: function _shapeIsValid() {\n\t      return true;\n\t    },\n\t\n\t    _onZoomEnd: function _onZoomEnd() {\n\t      if (this._markers !== null) {\n\t        this._updateGuide();\n\t      }\n\t    },\n\t\n\t    _onMouseMove: function _onMouseMove(e) {\n\t      var newPos = this._map.mouseEventToLayerPoint(e.originalEvent);\n\t      var latlng = this._map.layerPointToLatLng(newPos);\n\t\n\t      this._currentLatLng = latlng;\n\t\n\t      this._updateTooltip(latlng);\n\t\n\t      this._updateGuide(newPos);\n\t\n\t      this._mouseMarker.setLatLng(latlng);\n\t\n\t      L.DomEvent.preventDefault(e.originalEvent);\n\t    },\n\t\n\t    _vertexChanged: function _vertexChanged(latlng, added) {\n\t      this._map.fire(L.Draw.Event.DRAWVERTEX, {\n\t        layers: this._markerGroup\n\t      });\n\t      this._updateFinishHandler();\n\t\n\t      this._updateRunningMeasure(latlng, added);\n\t\n\t      this._clearGuides();\n\t\n\t      this._updateTooltip();\n\t    },\n\t\n\t    _onMouseDown: function _onMouseDown(e) {\n\t      if (!this._clickHandled && !this._touchHandled && !this._disableMarkers) {\n\t        this._onMouseMove(e);\n\t        this._clickHandled = true;\n\t        this._disableNewMarkers();\n\t        var originalEvent = e.originalEvent;\n\t        var clientX = originalEvent.clientX;\n\t        var clientY = originalEvent.clientY;\n\t        this._startPoint.call(this, clientX, clientY);\n\t      }\n\t    },\n\t\n\t    _startPoint: function _startPoint(clientX, clientY) {\n\t      this._mouseDownOrigin = L.point(clientX, clientY);\n\t    },\n\t\n\t    _onMouseUp: function _onMouseUp(e) {\n\t      var originalEvent = e.originalEvent;\n\t      var clientX = originalEvent.clientX;\n\t      var clientY = originalEvent.clientY;\n\t      this._endPoint.call(this, clientX, clientY, e);\n\t      this._clickHandled = null;\n\t    },\n\t\n\t    _endPoint: function _endPoint(clientX, clientY, e) {\n\t      if (this._mouseDownOrigin) {\n\t        var dragCheckDistance = L.point(clientX, clientY).distanceTo(this._mouseDownOrigin);\n\t        var lastPtDistance = this._calculateFinishDistance(e.latlng);\n\t        if (this.options.maxPoints > 1 && this.options.maxPoints == this._markers.length + 1) {\n\t          this.addVertex(e.latlng);\n\t          this._finishShape();\n\t        } else if (lastPtDistance < 10 && L.Browser.touch) {\n\t          this._finishShape();\n\t        } else if (Math.abs(dragCheckDistance) < 9 * (window.devicePixelRatio || 1)) {\n\t          this.addVertex(e.latlng);\n\t        }\n\t        this._enableNewMarkers();\n\t      }\n\t      this._mouseDownOrigin = null;\n\t    },\n\t\n\t    _onTouch: function _onTouch(e) {\n\t      var originalEvent = e.originalEvent;\n\t      var clientX;\n\t      var clientY;\n\t      if (originalEvent.touches && originalEvent.touches[0] && !this._clickHandled && !this._touchHandled && !this._disableMarkers) {\n\t        clientX = originalEvent.touches[0].clientX;\n\t        clientY = originalEvent.touches[0].clientY;\n\t        this._disableNewMarkers();\n\t        this._touchHandled = true;\n\t        this._startPoint.call(this, clientX, clientY);\n\t        this._endPoint.call(this, clientX, clientY, e);\n\t        this._touchHandled = null;\n\t      }\n\t      this._clickHandled = null;\n\t    },\n\t\n\t    _onMouseOut: function _onMouseOut() {\n\t      if (this._tooltip) {\n\t        this._tooltip._onMouseOut.call(this._tooltip);\n\t      }\n\t    },\n\t\n\t    _calculateFinishDistance: function _calculateFinishDistance(potentialLatLng) {\n\t      var lastPtDistance;\n\t      if (this._markers.length > 0) {\n\t        var finishMarker;\n\t        if (this.type === L.Draw.Polyline.TYPE) {\n\t          finishMarker = this._markers[this._markers.length - 1];\n\t        } else if (this.type === L.Draw.Polygon.TYPE) {\n\t          finishMarker = this._markers[0];\n\t        } else {\n\t          return Infinity;\n\t        }\n\t        var lastMarkerPoint = this._map.latLngToContainerPoint(finishMarker.getLatLng()),\n\t            potentialMarker = new L.Marker(potentialLatLng, {\n\t          icon: this.options.icon,\n\t          zIndexOffset: this.options.zIndexOffset * 2\n\t        });\n\t        var potentialMarkerPint = this._map.latLngToContainerPoint(potentialMarker.getLatLng());\n\t        lastPtDistance = lastMarkerPoint.distanceTo(potentialMarkerPint);\n\t      } else {\n\t        lastPtDistance = Infinity;\n\t      }\n\t      return lastPtDistance;\n\t    },\n\t\n\t    _updateFinishHandler: function _updateFinishHandler() {\n\t      var markerCount = this._markers.length;\n\t\n\t      if (markerCount > 1) {\n\t        this._markers[markerCount - 1].on('click', this._finishShape, this);\n\t      }\n\t\n\t      if (markerCount > 2) {\n\t        this._markers[markerCount - 2].off('click', this._finishShape, this);\n\t      }\n\t    },\n\t\n\t    _createMarker: function _createMarker(latlng) {\n\t      var marker = new L.Marker(latlng, {\n\t        icon: this.options.icon,\n\t        zIndexOffset: this.options.zIndexOffset * 2\n\t      });\n\t\n\t      this._markerGroup.addLayer(marker);\n\t\n\t      return marker;\n\t    },\n\t\n\t    _updateGuide: function _updateGuide(newPos) {\n\t      var markerCount = this._markers ? this._markers.length : 0;\n\t\n\t      if (markerCount > 0) {\n\t        newPos = newPos || this._map.latLngToLayerPoint(this._currentLatLng);\n\t\n\t        this._clearGuides();\n\t        this._drawGuide(this._map.latLngToLayerPoint(this._markers[markerCount - 1].getLatLng()), newPos);\n\t      }\n\t    },\n\t\n\t    _updateTooltip: function _updateTooltip(latLng) {\n\t      var text = this._getTooltipText();\n\t\n\t      if (latLng) {\n\t        this._tooltip.updatePosition(latLng);\n\t      }\n\t\n\t      if (!this._errorShown) {\n\t        this._tooltip.updateContent(text);\n\t      }\n\t    },\n\t\n\t    _drawGuide: function _drawGuide(pointA, pointB) {\n\t      var length = Math.floor(Math.sqrt(Math.pow(pointB.x - pointA.x, 2) + Math.pow(pointB.y - pointA.y, 2))),\n\t          guidelineDistance = this.options.guidelineDistance,\n\t          maxGuideLineLength = this.options.maxGuideLineLength,\n\t          i = length > maxGuideLineLength ? length - maxGuideLineLength : guidelineDistance,\n\t          fraction,\n\t          dashPoint,\n\t          dash;\n\t\n\t      if (!this._guidesContainer) {\n\t        this._guidesContainer = L.DomUtil.create('div', 'leaflet-draw-guides', this._overlayPane);\n\t      }\n\t\n\t      for (; i < length; i += this.options.guidelineDistance) {\n\t        fraction = i / length;\n\t\n\t        dashPoint = {\n\t          x: Math.floor(pointA.x * (1 - fraction) + fraction * pointB.x),\n\t          y: Math.floor(pointA.y * (1 - fraction) + fraction * pointB.y)\n\t        };\n\t\n\t        dash = L.DomUtil.create('div', 'leaflet-draw-guide-dash', this._guidesContainer);\n\t        dash.style.backgroundColor = !this._errorShown ? this.options.shapeOptions.color : this.options.drawError.color;\n\t\n\t        L.DomUtil.setPosition(dash, dashPoint);\n\t      }\n\t    },\n\t\n\t    _updateGuideColor: function _updateGuideColor(color) {\n\t      if (this._guidesContainer) {\n\t        for (var i = 0, l = this._guidesContainer.childNodes.length; i < l; i++) {\n\t          this._guidesContainer.childNodes[i].style.backgroundColor = color;\n\t        }\n\t      }\n\t    },\n\t\n\t    _clearGuides: function _clearGuides() {\n\t      if (this._guidesContainer) {\n\t        while (this._guidesContainer.firstChild) {\n\t          this._guidesContainer.removeChild(this._guidesContainer.firstChild);\n\t        }\n\t      }\n\t    },\n\t\n\t    _getTooltipText: function _getTooltipText() {\n\t      var showLength = this.options.showLength,\n\t          labelText,\n\t          distanceStr;\n\t      if (this._markers.length === 0) {\n\t        labelText = {\n\t          text: L.drawLocal.draw.handlers.polyline.tooltip.start\n\t        };\n\t      } else {\n\t        distanceStr = showLength ? this._getMeasurementString() : '';\n\t\n\t        if (this._markers.length === 1) {\n\t          labelText = {\n\t            text: L.drawLocal.draw.handlers.polyline.tooltip.cont,\n\t            subtext: distanceStr\n\t          };\n\t        } else {\n\t          labelText = {\n\t            text: L.drawLocal.draw.handlers.polyline.tooltip.end,\n\t            subtext: distanceStr\n\t          };\n\t        }\n\t      }\n\t      return labelText;\n\t    },\n\t\n\t    _updateRunningMeasure: function _updateRunningMeasure(latlng, added) {\n\t      var markersLength = this._markers.length,\n\t          previousMarkerIndex,\n\t          distance;\n\t\n\t      if (this._markers.length === 1) {\n\t        this._measurementRunningTotal = 0;\n\t      } else {\n\t        previousMarkerIndex = markersLength - (added ? 2 : 1);\n\t\n\t        if (L.GeometryUtil.isVersion07x()) {\n\t          distance = latlng.distanceTo(this._markers[previousMarkerIndex].getLatLng()) * (this.options.factor || 1);\n\t        } else {\n\t          distance = this._map.distance(latlng, this._markers[previousMarkerIndex].getLatLng()) * (this.options.factor || 1);\n\t        }\n\t\n\t        this._measurementRunningTotal += distance * (added ? 1 : -1);\n\t      }\n\t    },\n\t\n\t    _getMeasurementString: function _getMeasurementString() {\n\t      var currentLatLng = this._currentLatLng,\n\t          previousLatLng = this._markers[this._markers.length - 1].getLatLng(),\n\t          distance;\n\t\n\t      if (L.GeometryUtil.isVersion07x()) {\n\t        distance = previousLatLng && currentLatLng && currentLatLng.distanceTo ? this._measurementRunningTotal + currentLatLng.distanceTo(previousLatLng) * (this.options.factor || 1) : this._measurementRunningTotal || 0;\n\t      } else {\n\t        distance = previousLatLng && currentLatLng ? this._measurementRunningTotal + this._map.distance(currentLatLng, previousLatLng) * (this.options.factor || 1) : this._measurementRunningTotal || 0;\n\t      }\n\t\n\t      return L.GeometryUtil.readableDistance(distance, this.options.metric, this.options.feet, this.options.nautic, this.options.precision);\n\t    },\n\t\n\t    _showErrorTooltip: function _showErrorTooltip() {\n\t      this._errorShown = true;\n\t\n\t      this._tooltip.showAsError().updateContent({\n\t        text: this.options.drawError.message\n\t      });\n\t\n\t      this._updateGuideColor(this.options.drawError.color);\n\t      this._poly.setStyle({\n\t        color: this.options.drawError.color\n\t      });\n\t\n\t      this._clearHideErrorTimeout();\n\t      this._hideErrorTimeout = setTimeout(L.Util.bind(this._hideErrorTooltip, this), this.options.drawError.timeout);\n\t    },\n\t\n\t    _hideErrorTooltip: function _hideErrorTooltip() {\n\t      this._errorShown = false;\n\t\n\t      this._clearHideErrorTimeout();\n\t\n\t      this._tooltip.removeError().updateContent(this._getTooltipText());\n\t\n\t      this._updateGuideColor(this.options.shapeOptions.color);\n\t      this._poly.setStyle({\n\t        color: this.options.shapeOptions.color\n\t      });\n\t    },\n\t\n\t    _clearHideErrorTimeout: function _clearHideErrorTimeout() {\n\t      if (this._hideErrorTimeout) {\n\t        clearTimeout(this._hideErrorTimeout);\n\t        this._hideErrorTimeout = null;\n\t      }\n\t    },\n\t\n\t    _disableNewMarkers: function _disableNewMarkers() {\n\t      this._disableMarkers = true;\n\t    },\n\t\n\t    _enableNewMarkers: function _enableNewMarkers() {\n\t      setTimeout(function () {\n\t        this._disableMarkers = false;\n\t      }.bind(this), 50);\n\t    },\n\t\n\t    _cleanUpShape: function _cleanUpShape() {\n\t      if (this._markers.length > 1) {\n\t        this._markers[this._markers.length - 1].off('click', this._finishShape, this);\n\t      }\n\t    },\n\t\n\t    _fireCreatedEvent: function _fireCreatedEvent() {\n\t      var poly = new this.Poly(this._poly.getLatLngs(), this.options.shapeOptions);\n\t      L.Draw.Feature.prototype._fireCreatedEvent.call(this, poly);\n\t    }\n\t  });\n\t\n\t  L.Draw.Polygon = L.Draw.Polyline.extend({\n\t    statics: {\n\t      TYPE: 'polygon'\n\t    },\n\t\n\t    Poly: L.Polygon,\n\t\n\t    options: {\n\t      showArea: true,\n\t      showLength: false,\n\t      shapeOptions: {\n\t        stroke: true,\n\t        color: '#3388ff',\n\t        weight: 4,\n\t        opacity: 0.5,\n\t        fill: true,\n\t        fillColor: null,\n\t        fillOpacity: 0.2,\n\t        clickable: true\n\t      },\n\t\n\t      metric: true,\n\t      feet: false,\n\t      nautic: false,\n\t      precision: {}\n\t    },\n\t\n\t    initialize: function initialize(map, options) {\n\t      L.Draw.Polyline.prototype.initialize.call(this, map, options);\n\t\n\t      this.type = L.Draw.Polygon.TYPE;\n\t    },\n\t\n\t    _updateFinishHandler: function _updateFinishHandler() {\n\t      var markerCount = this._markers.length;\n\t\n\t      if (markerCount === 1) {\n\t        this._markers[0].on('click', this._finishShape, this);\n\t      }\n\t\n\t      if (markerCount > 2) {\n\t        this._markers[markerCount - 1].on('dblclick', this._finishShape, this);\n\t\n\t        if (markerCount > 3) {\n\t          this._markers[markerCount - 2].off('dblclick', this._finishShape, this);\n\t        }\n\t      }\n\t    },\n\t\n\t    _getTooltipText: function _getTooltipText() {\n\t      var text, subtext;\n\t\n\t      if (this._markers.length === 0) {\n\t        text = L.drawLocal.draw.handlers.polygon.tooltip.start;\n\t      } else if (this._markers.length < 3) {\n\t        text = L.drawLocal.draw.handlers.polygon.tooltip.cont;\n\t        subtext = this._getMeasurementString();\n\t      } else {\n\t        text = L.drawLocal.draw.handlers.polygon.tooltip.end;\n\t        subtext = this._getMeasurementString();\n\t      }\n\t\n\t      return {\n\t        text: text,\n\t        subtext: subtext\n\t      };\n\t    },\n\t\n\t    _getMeasurementString: function _getMeasurementString() {\n\t      var area = this._area,\n\t          measurementString = '';\n\t\n\t      if (!area && !this.options.showLength) {\n\t        return null;\n\t      }\n\t\n\t      if (this.options.showLength) {\n\t        measurementString = L.Draw.Polyline.prototype._getMeasurementString.call(this);\n\t      }\n\t\n\t      if (area) {\n\t        measurementString += '<br>' + L.GeometryUtil.readableArea(area, this.options.metric, this.options.precision);\n\t      }\n\t      return measurementString;\n\t    },\n\t\n\t    _shapeIsValid: function _shapeIsValid() {\n\t      return this._markers.length >= 3;\n\t    },\n\t\n\t    _vertexChanged: function _vertexChanged(latlng, added) {\n\t      var latLngs;\n\t\n\t      if (!this.options.allowIntersection && this.options.showArea) {\n\t        latLngs = this._poly.getLatLngs();\n\t\n\t        this._area = L.GeometryUtil.geodesicArea(latLngs);\n\t      }\n\t\n\t      L.Draw.Polyline.prototype._vertexChanged.call(this, latlng, added);\n\t    },\n\t\n\t    _cleanUpShape: function _cleanUpShape() {\n\t      var markerCount = this._markers.length;\n\t\n\t      if (markerCount > 0) {\n\t        this._markers[0].off('click', this._finishShape, this);\n\t\n\t        if (markerCount > 2) {\n\t          this._markers[markerCount - 1].off('dblclick', this._finishShape, this);\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  L.SimpleShape = {};\n\t\n\t  L.Draw.SimpleShape = L.Draw.Feature.extend({\n\t    options: {\n\t      repeatMode: false\n\t    },\n\t\n\t    initialize: function initialize(map, options) {\n\t      this._endLabelText = L.drawLocal.draw.handlers.simpleshape.tooltip.end;\n\t\n\t      L.Draw.Feature.prototype.initialize.call(this, map, options);\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      L.Draw.Feature.prototype.addHooks.call(this);\n\t      if (this._map) {\n\t        this._mapDraggable = this._map.dragging.enabled();\n\t\n\t        if (this._mapDraggable) {\n\t          this._map.dragging.disable();\n\t        }\n\t\n\t        this._container.style.cursor = 'crosshair';\n\t\n\t        this._tooltip.updateContent({\n\t          text: this._initialLabelText\n\t        });\n\t\n\t        this._map.on('mousedown', this._onMouseDown, this).on('mousemove', this._onMouseMove, this).on('touchstart', this._onMouseDown, this).on('touchmove', this._onMouseMove, this);\n\t\n\t        document.addEventListener('touchstart', L.DomEvent.preventDefault, {\n\t          passive: false\n\t        });\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      L.Draw.Feature.prototype.removeHooks.call(this);\n\t      if (this._map) {\n\t        if (this._mapDraggable) {\n\t          this._map.dragging.enable();\n\t        }\n\t\n\t        this._container.style.cursor = '';\n\t\n\t        this._map.off('mousedown', this._onMouseDown, this).off('mousemove', this._onMouseMove, this).off('touchstart', this._onMouseDown, this).off('touchmove', this._onMouseMove, this);\n\t\n\t        L.DomEvent.off(document, 'mouseup', this._onMouseUp, this);\n\t        L.DomEvent.off(document, 'touchend', this._onMouseUp, this);\n\t\n\t        document.removeEventListener('touchstart', L.DomEvent.preventDefault);\n\t\n\t        if (this._shape) {\n\t          this._map.removeLayer(this._shape);\n\t          delete this._shape;\n\t        }\n\t      }\n\t      this._isDrawing = false;\n\t    },\n\t\n\t    _getTooltipText: function _getTooltipText() {\n\t      return {\n\t        text: this._endLabelText\n\t      };\n\t    },\n\t\n\t    _onMouseDown: function _onMouseDown(e) {\n\t      this._isDrawing = true;\n\t      this._startLatLng = e.latlng;\n\t\n\t      L.DomEvent.on(document, 'mouseup', this._onMouseUp, this).on(document, 'touchend', this._onMouseUp, this).preventDefault(e.originalEvent);\n\t    },\n\t\n\t    _onMouseMove: function _onMouseMove(e) {\n\t      var latlng = e.latlng;\n\t\n\t      this._tooltip.updatePosition(latlng);\n\t      if (this._isDrawing) {\n\t        this._tooltip.updateContent(this._getTooltipText());\n\t        this._drawShape(latlng);\n\t      }\n\t    },\n\t\n\t    _onMouseUp: function _onMouseUp() {\n\t      if (this._shape) {\n\t        this._fireCreatedEvent();\n\t      }\n\t\n\t      this.disable();\n\t      if (this.options.repeatMode) {\n\t        this.enable();\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Draw.Rectangle = L.Draw.SimpleShape.extend({\n\t    statics: {\n\t      TYPE: 'rectangle'\n\t    },\n\t\n\t    options: {\n\t      shapeOptions: {\n\t        stroke: true,\n\t        color: '#3388ff',\n\t        weight: 4,\n\t        opacity: 0.5,\n\t        fill: true,\n\t        fillColor: null,\n\t        fillOpacity: 0.2,\n\t        showArea: true,\n\t        clickable: true\n\t      },\n\t      metric: true },\n\t\n\t    initialize: function initialize(map, options) {\n\t      this.type = L.Draw.Rectangle.TYPE;\n\t\n\t      this._initialLabelText = L.drawLocal.draw.handlers.rectangle.tooltip.start;\n\t\n\t      L.Draw.SimpleShape.prototype.initialize.call(this, map, options);\n\t    },\n\t\n\t    disable: function disable() {\n\t      if (!this._enabled) {\n\t        return;\n\t      }\n\t\n\t      this._isCurrentlyTwoClickDrawing = false;\n\t      L.Draw.SimpleShape.prototype.disable.call(this);\n\t    },\n\t\n\t    _onMouseUp: function _onMouseUp(e) {\n\t      if (!this._shape && !this._isCurrentlyTwoClickDrawing) {\n\t        this._isCurrentlyTwoClickDrawing = true;\n\t        return;\n\t      }\n\t\n\t      if (this._isCurrentlyTwoClickDrawing && !_hasAncestor(e.target, 'leaflet-pane')) {\n\t        return;\n\t      }\n\t\n\t      L.Draw.SimpleShape.prototype._onMouseUp.call(this);\n\t    },\n\t\n\t    _drawShape: function _drawShape(latlng) {\n\t      if (!this._shape) {\n\t        this._shape = new L.Rectangle(new L.LatLngBounds(this._startLatLng, latlng), this.options.shapeOptions);\n\t        this._map.addLayer(this._shape);\n\t      } else {\n\t        this._shape.setBounds(new L.LatLngBounds(this._startLatLng, latlng));\n\t      }\n\t    },\n\t\n\t    _fireCreatedEvent: function _fireCreatedEvent() {\n\t      var rectangle = new L.Rectangle(this._shape.getBounds(), this.options.shapeOptions);\n\t      L.Draw.SimpleShape.prototype._fireCreatedEvent.call(this, rectangle);\n\t    },\n\t\n\t    _getTooltipText: function _getTooltipText() {\n\t      var tooltipText = L.Draw.SimpleShape.prototype._getTooltipText.call(this),\n\t          shape = this._shape,\n\t          showArea = this.options.showArea,\n\t          latLngs,\n\t          area,\n\t          subtext;\n\t\n\t      if (shape) {\n\t        latLngs = this._shape._defaultShape ? this._shape._defaultShape() : this._shape.getLatLngs();\n\t        area = L.GeometryUtil.geodesicArea(latLngs);\n\t        subtext = showArea ? L.GeometryUtil.readableArea(area, this.options.metric) : '';\n\t      }\n\t      return {\n\t        text: tooltipText.text,\n\t        subtext: subtext\n\t      };\n\t    }\n\t  });\n\t\n\t  function _hasAncestor(el, cls) {\n\t    while ((el = el.parentElement) && !el.classList.contains(cls)) {}\n\t    return el;\n\t  }\n\t\n\t  L.Draw.Marker = L.Draw.Feature.extend({\n\t    statics: {\n\t      TYPE: 'marker'\n\t    },\n\t\n\t    options: {\n\t      icon: new L.Icon.Default(),\n\t      repeatMode: false,\n\t      zIndexOffset: 2000 },\n\t\n\t    initialize: function initialize(map, options) {\n\t      this.type = L.Draw.Marker.TYPE;\n\t\n\t      this._initialLabelText = L.drawLocal.draw.handlers.marker.tooltip.start;\n\t\n\t      L.Draw.Feature.prototype.initialize.call(this, map, options);\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      L.Draw.Feature.prototype.addHooks.call(this);\n\t\n\t      if (this._map) {\n\t        this._tooltip.updateContent({\n\t          text: this._initialLabelText\n\t        });\n\t\n\t        if (!this._mouseMarker) {\n\t          this._mouseMarker = L.marker(this._map.getCenter(), {\n\t            icon: L.divIcon({\n\t              className: 'leaflet-mouse-marker',\n\t              iconAnchor: [20, 20],\n\t              iconSize: [40, 40]\n\t            }),\n\t            opacity: 0,\n\t            zIndexOffset: this.options.zIndexOffset\n\t          });\n\t        }\n\t\n\t        this._mouseMarker.on('click', this._onClick, this).addTo(this._map);\n\t\n\t        this._map.on('mousemove', this._onMouseMove, this);\n\t        this._map.on('click', this._onTouch, this);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      L.Draw.Feature.prototype.removeHooks.call(this);\n\t\n\t      if (this._map) {\n\t        this._map.off('click', this._onClick, this).off('click', this._onTouch, this);\n\t        if (this._marker) {\n\t          this._marker.off('click', this._onClick, this);\n\t          this._map.removeLayer(this._marker);\n\t          delete this._marker;\n\t        }\n\t\n\t        this._mouseMarker.off('click', this._onClick, this);\n\t        this._map.removeLayer(this._mouseMarker);\n\t        delete this._mouseMarker;\n\t\n\t        this._map.off('mousemove', this._onMouseMove, this);\n\t      }\n\t    },\n\t\n\t    _onMouseMove: function _onMouseMove(e) {\n\t      var latlng = e.latlng;\n\t\n\t      this._tooltip.updatePosition(latlng);\n\t      this._mouseMarker.setLatLng(latlng);\n\t\n\t      if (!this._marker) {\n\t        this._marker = this._createMarker(latlng);\n\t\n\t        this._marker.on('click', this._onClick, this);\n\t        this._map.on('click', this._onClick, this).addLayer(this._marker);\n\t      } else {\n\t        latlng = this._mouseMarker.getLatLng();\n\t        this._marker.setLatLng(latlng);\n\t      }\n\t    },\n\t\n\t    _createMarker: function _createMarker(latlng) {\n\t      return new L.Marker(latlng, {\n\t        icon: this.options.icon,\n\t        zIndexOffset: this.options.zIndexOffset\n\t      });\n\t    },\n\t\n\t    _onClick: function _onClick() {\n\t      this._fireCreatedEvent();\n\t\n\t      this.disable();\n\t      if (this.options.repeatMode) {\n\t        this.enable();\n\t      }\n\t    },\n\t\n\t    _onTouch: function _onTouch(e) {\n\t      this._onMouseMove(e);\n\t      this._onClick();\n\t    },\n\t\n\t    _fireCreatedEvent: function _fireCreatedEvent() {\n\t      var marker = new L.Marker.Touch(this._marker.getLatLng(), {\n\t        icon: this.options.icon\n\t      });\n\t      L.Draw.Feature.prototype._fireCreatedEvent.call(this, marker);\n\t    }\n\t  });\n\t\n\t  L.Draw.CircleMarker = L.Draw.Marker.extend({\n\t    statics: {\n\t      TYPE: 'circlemarker'\n\t    },\n\t\n\t    options: {\n\t      stroke: true,\n\t      color: '#3388ff',\n\t      weight: 4,\n\t      opacity: 0.5,\n\t      fill: true,\n\t      fillColor: null,\n\t      fillOpacity: 0.2,\n\t      clickable: true,\n\t      zIndexOffset: 2000 },\n\t\n\t    initialize: function initialize(map, options) {\n\t      this.type = L.Draw.CircleMarker.TYPE;\n\t\n\t      this._initialLabelText = L.drawLocal.draw.handlers.circlemarker.tooltip.start;\n\t\n\t      L.Draw.Feature.prototype.initialize.call(this, map, options);\n\t    },\n\t\n\t    _fireCreatedEvent: function _fireCreatedEvent() {\n\t      var circleMarker = new L.CircleMarker(this._marker.getLatLng(), this.options);\n\t      L.Draw.Feature.prototype._fireCreatedEvent.call(this, circleMarker);\n\t    },\n\t\n\t    _createMarker: function _createMarker(latlng) {\n\t      return new L.CircleMarker(latlng, this.options);\n\t    }\n\t  });\n\t\n\t  L.Draw.Circle = L.Draw.SimpleShape.extend({\n\t    statics: {\n\t      TYPE: 'circle'\n\t    },\n\t\n\t    options: {\n\t      shapeOptions: {\n\t        stroke: true,\n\t        color: '#3388ff',\n\t        weight: 4,\n\t        opacity: 0.5,\n\t        fill: true,\n\t        fillColor: null,\n\t        fillOpacity: 0.2,\n\t        clickable: true\n\t      },\n\t      showRadius: true,\n\t      metric: true,\n\t      feet: true,\n\t      nautic: false },\n\t\n\t    initialize: function initialize(map, options) {\n\t      this.type = L.Draw.Circle.TYPE;\n\t\n\t      this._initialLabelText = L.drawLocal.draw.handlers.circle.tooltip.start;\n\t\n\t      L.Draw.SimpleShape.prototype.initialize.call(this, map, options);\n\t    },\n\t\n\t    _drawShape: function _drawShape(latlng) {\n\t      if (L.GeometryUtil.isVersion07x()) {\n\t        var distance = this._startLatLng.distanceTo(latlng);\n\t      } else {\n\t        var distance = this._map.distance(this._startLatLng, latlng);\n\t      }\n\t\n\t      if (!this._shape) {\n\t        this._shape = new L.Circle(this._startLatLng, distance, this.options.shapeOptions);\n\t        this._map.addLayer(this._shape);\n\t      } else {\n\t        this._shape.setRadius(distance);\n\t      }\n\t    },\n\t\n\t    _fireCreatedEvent: function _fireCreatedEvent() {\n\t      var circle = new L.Circle(this._startLatLng, this._shape.getRadius(), this.options.shapeOptions);\n\t      L.Draw.SimpleShape.prototype._fireCreatedEvent.call(this, circle);\n\t    },\n\t\n\t    _onMouseMove: function _onMouseMove(e) {\n\t      var latlng = e.latlng,\n\t          showRadius = this.options.showRadius,\n\t          useMetric = this.options.metric,\n\t          radius;\n\t\n\t      this._tooltip.updatePosition(latlng);\n\t      if (this._isDrawing) {\n\t        this._drawShape(latlng);\n\t\n\t        radius = this._shape.getRadius().toFixed(1);\n\t\n\t        var subtext = '';\n\t        if (showRadius) {\n\t          subtext = L.drawLocal.draw.handlers.circle.radius + ': ' + L.GeometryUtil.readableDistance(radius, useMetric, this.options.feet, this.options.nautic);\n\t        }\n\t        this._tooltip.updateContent({\n\t          text: this._endLabelText,\n\t          subtext: subtext\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Edit = L.Edit || {};\n\t\n\t  L.Edit.Marker = L.Handler.extend({\n\t    initialize: function initialize(marker, options) {\n\t      this._marker = marker;\n\t      L.setOptions(this, options);\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      var marker = this._marker;\n\t\n\t      marker.dragging.enable();\n\t      marker.on('dragend', this._onDragEnd, marker);\n\t      this._toggleMarkerHighlight();\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      var marker = this._marker;\n\t\n\t      marker.dragging.disable();\n\t      marker.off('dragend', this._onDragEnd, marker);\n\t      this._toggleMarkerHighlight();\n\t    },\n\t\n\t    _onDragEnd: function _onDragEnd(e) {\n\t      var layer = e.target;\n\t      layer.edited = true;\n\t      this._map.fire(L.Draw.Event.EDITMOVE, {\n\t        layer: layer\n\t      });\n\t    },\n\t\n\t    _toggleMarkerHighlight: function _toggleMarkerHighlight() {\n\t      var icon = this._marker._icon;\n\t\n\t      if (!icon) {\n\t        return;\n\t      }\n\t\n\t      icon.style.display = 'none';\n\t\n\t      if (L.DomUtil.hasClass(icon, 'leaflet-edit-marker-selected')) {\n\t        L.DomUtil.removeClass(icon, 'leaflet-edit-marker-selected');\n\t\n\t        this._offsetMarker(icon, -4);\n\t      } else {\n\t        L.DomUtil.addClass(icon, 'leaflet-edit-marker-selected');\n\t\n\t        this._offsetMarker(icon, 4);\n\t      }\n\t\n\t      icon.style.display = '';\n\t    },\n\t\n\t    _offsetMarker: function _offsetMarker(icon, offset) {\n\t      var iconMarginTop = parseInt(icon.style.marginTop, 10) - offset,\n\t          iconMarginLeft = parseInt(icon.style.marginLeft, 10) - offset;\n\t\n\t      icon.style.marginTop = iconMarginTop + 'px';\n\t      icon.style.marginLeft = iconMarginLeft + 'px';\n\t    }\n\t  });\n\t\n\t  L.Marker.addInitHook(function () {\n\t    if (L.Edit.Marker) {\n\t      this.editing = new L.Edit.Marker(this);\n\t\n\t      if (this.options.editable) {\n\t        this.editing.enable();\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Edit = L.Edit || {};\n\t\n\t  L.Edit.Poly = L.Handler.extend({\n\t    initialize: function initialize(poly) {\n\t      this.latlngs = [poly._latlngs];\n\t      if (poly._holes) {\n\t        this.latlngs = this.latlngs.concat(poly._holes);\n\t      }\n\t\n\t      this._poly = poly;\n\t\n\t      this._poly.on('revert-edited', this._updateLatLngs, this);\n\t    },\n\t\n\t    _defaultShape: function _defaultShape() {\n\t\n\t      return L.LineUtil.isFlat(this._poly._latlngs) ? this._poly._latlngs : this._poly._latlngs[0];\n\t    },\n\t\n\t    _eachVertexHandler: function _eachVertexHandler(callback) {\n\t      for (var i = 0; i < this._verticesHandlers.length; i++) {\n\t        callback(this._verticesHandlers[i]);\n\t      }\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      this._initHandlers();\n\t      this._eachVertexHandler(function (handler) {\n\t        handler.addHooks();\n\t      });\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      this._eachVertexHandler(function (handler) {\n\t        handler.removeHooks();\n\t      });\n\t    },\n\t\n\t    updateMarkers: function updateMarkers() {\n\t      this._eachVertexHandler(function (handler) {\n\t        handler.updateMarkers();\n\t      });\n\t    },\n\t\n\t    _initHandlers: function _initHandlers() {\n\t      this._verticesHandlers = [];\n\t      for (var i = 0; i < this.latlngs.length; i++) {\n\t        this._verticesHandlers.push(new L.Edit.PolyVerticesEdit(this._poly, this.latlngs[i], this._poly.options.poly));\n\t      }\n\t    },\n\t\n\t    _updateLatLngs: function _updateLatLngs(e) {\n\t      this.latlngs = [e.layer._latlngs];\n\t      if (e.layer._holes) {\n\t        this.latlngs = this.latlngs.concat(e.layer._holes);\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Edit.PolyVerticesEdit = L.Handler.extend({\n\t    options: {\n\t      icon: new L.DivIcon({\n\t        iconSize: new L.Point(8, 8),\n\t        className: 'leaflet-div-icon leaflet-editing-icon'\n\t      }),\n\t      touchIcon: new L.DivIcon({\n\t        iconSize: new L.Point(20, 20),\n\t        className: 'leaflet-div-icon leaflet-editing-icon leaflet-touch-icon'\n\t      }),\n\t      drawError: {\n\t        color: '#b00b00',\n\t        timeout: 1000\n\t      }\n\t    },\n\t\n\t    initialize: function initialize(poly, latlngs, options) {\n\t      if (L.Browser.touch) {\n\t        this.options.icon = this.options.touchIcon;\n\t      }\n\t      this._poly = poly;\n\t\n\t      if (options && options.drawError) {\n\t        options.drawError = L.Util.extend({}, this.options.drawError, options.drawError);\n\t      }\n\t\n\t      this._latlngs = latlngs;\n\t\n\t      L.setOptions(this, options);\n\t    },\n\t\n\t    _defaultShape: function _defaultShape() {\n\t      return L.LineUtil.isFlat(this._latlngs) ? this._latlngs : this._latlngs[0];\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      var poly = this._poly;\n\t      var path = poly._path;\n\t\n\t      if (!(poly instanceof L.Polygon)) {\n\t        poly.options.fill = false;\n\t        if (poly.options.editing) {\n\t          poly.options.editing.fill = false;\n\t        }\n\t      }\n\t\n\t      if (path) {\n\t        if (poly.options.editing.className) {\n\t          if (poly.options.original.className) {\n\t            poly.options.original.className.split(' ').forEach(function (className) {\n\t              L.DomUtil.removeClass(path, className);\n\t            });\n\t          }\n\t          poly.options.editing.className.split(' ').forEach(function (className) {\n\t            L.DomUtil.addClass(path, className);\n\t          });\n\t        }\n\t      }\n\t\n\t      poly.setStyle(poly.options.editing);\n\t\n\t      if (this._poly._map) {\n\t        this._map = this._poly._map;\n\t\n\t        if (!this._markerGroup) {\n\t          this._initMarkers();\n\t        }\n\t        this._poly._map.addLayer(this._markerGroup);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      var poly = this._poly;\n\t      var path = poly._path;\n\t\n\t      if (path) {\n\t        if (poly.options.editing.className) {\n\t          poly.options.editing.className.split(' ').forEach(function (className) {\n\t            L.DomUtil.removeClass(path, className);\n\t          });\n\t          if (poly.options.original.className) {\n\t            poly.options.original.className.split(' ').forEach(function (className) {\n\t              L.DomUtil.addClass(path, className);\n\t            });\n\t          }\n\t        }\n\t      }\n\t\n\t      poly.setStyle(poly.options.original);\n\t\n\t      if (poly._map) {\n\t        poly._map.removeLayer(this._markerGroup);\n\t        delete this._markerGroup;\n\t        delete this._markers;\n\t      }\n\t    },\n\t\n\t    updateMarkers: function updateMarkers() {\n\t      this._markerGroup.clearLayers();\n\t      this._initMarkers();\n\t    },\n\t\n\t    _initMarkers: function _initMarkers() {\n\t      if (!this._markerGroup) {\n\t        this._markerGroup = new L.LayerGroup();\n\t      }\n\t      this._markers = [];\n\t\n\t      var latlngs = this._latlngs,\n\t          i,\n\t          j,\n\t          len,\n\t          marker;\n\t\n\t      for (i = 0, len = latlngs.length; i < len; i++) {\n\t        marker = this._createMarker(latlngs[i], i);\n\t        marker.on('click', this._onMarkerClick, this);\n\t        marker.on('contextmenu', this._onContextMenu, this);\n\t        this._markers.push(marker);\n\t      }\n\t\n\t      var markerLeft, markerRight;\n\t\n\t      for (i = 0, j = len - 1; i < len; j = i++) {\n\t        if (i === 0 && !(L.Polygon && this._poly instanceof L.Polygon)) {\n\t          continue;\n\t        }\n\t\n\t        markerLeft = this._markers[j];\n\t        markerRight = this._markers[i];\n\t\n\t        this._createMiddleMarker(markerLeft, markerRight);\n\t        this._updatePrevNext(markerLeft, markerRight);\n\t      }\n\t    },\n\t\n\t    _createMarker: function _createMarker(latlng, index) {\n\t      var marker = new L.Marker.Touch(latlng, {\n\t        draggable: true,\n\t        icon: this.options.icon\n\t      });\n\t\n\t      marker._origLatLng = latlng;\n\t      marker._index = index;\n\t\n\t      marker.on('dragstart', this._onMarkerDragStart, this).on('drag', this._onMarkerDrag, this).on('dragend', this._fireEdit, this).on('touchmove', this._onTouchMove, this).on('touchend', this._fireEdit, this).on('MSPointerMove', this._onTouchMove, this).on('MSPointerUp', this._fireEdit, this);\n\t\n\t      this._markerGroup.addLayer(marker);\n\t\n\t      return marker;\n\t    },\n\t\n\t    _onMarkerDragStart: function _onMarkerDragStart() {\n\t      this._poly.fire('editstart');\n\t    },\n\t\n\t    _spliceLatLngs: function _spliceLatLngs() {\n\t      var latlngs = this._defaultShape();\n\t      var removed = [].splice.apply(latlngs, arguments);\n\t      this._poly._convertLatLngs(latlngs, true);\n\t      this._poly.redraw();\n\t      return removed;\n\t    },\n\t\n\t    _removeMarker: function _removeMarker(marker) {\n\t      var i = marker._index;\n\t\n\t      this._markerGroup.removeLayer(marker);\n\t      this._markers.splice(i, 1);\n\t      this._spliceLatLngs(i, 1);\n\t      this._updateIndexes(i, -1);\n\t\n\t      marker.off('dragstart', this._onMarkerDragStart, this).off('drag', this._onMarkerDrag, this).off('dragend', this._fireEdit, this).off('touchmove', this._onMarkerDrag, this).off('touchend', this._fireEdit, this).off('click', this._onMarkerClick, this).off('MSPointerMove', this._onTouchMove, this).off('MSPointerUp', this._fireEdit, this);\n\t    },\n\t\n\t    _fireEdit: function _fireEdit() {\n\t      this._poly.edited = true;\n\t      this._poly.fire('edit');\n\t      this._poly._map.fire(L.Draw.Event.EDITVERTEX, {\n\t        layers: this._markerGroup,\n\t        poly: this._poly\n\t      });\n\t    },\n\t\n\t    _onMarkerDrag: function _onMarkerDrag(e) {\n\t      var marker = e.target;\n\t      var poly = this._poly;\n\t\n\t      L.extend(marker._origLatLng, marker._latlng);\n\t\n\t      if (marker._middleLeft) {\n\t        marker._middleLeft.setLatLng(this._getMiddleLatLng(marker._prev, marker));\n\t      }\n\t      if (marker._middleRight) {\n\t        marker._middleRight.setLatLng(this._getMiddleLatLng(marker, marker._next));\n\t      }\n\t\n\t      if (poly.options.poly) {\n\t        var tooltip = poly._map._editTooltip;\n\t        if (!poly.options.poly.allowIntersection && poly.intersects()) {\n\t          var originalColor = poly.options.color;\n\t          poly.setStyle({\n\t            color: this.options.drawError.color\n\t          });\n\t\n\t          if (L.version.indexOf('0.7') !== 0) {\n\t            marker.dragging._draggable._onUp(e);\n\t          }\n\t          this._onMarkerClick(e);\n\t\n\t          if (tooltip) {\n\t            tooltip.updateContent({\n\t              text: L.drawLocal.draw.handlers.polyline.error\n\t            });\n\t          }\n\t\n\t          setTimeout(function () {\n\t            poly.setStyle({\n\t              color: originalColor\n\t            });\n\t            if (tooltip) {\n\t              tooltip.updateContent({\n\t                text: L.drawLocal.edit.handlers.edit.tooltip.text,\n\t                subtext: L.drawLocal.edit.handlers.edit.tooltip.subtext\n\t              });\n\t            }\n\t          }, 1000);\n\t        }\n\t      }\n\t\n\t      this._poly._bounds._southWest = L.latLng(Infinity, Infinity);\n\t      this._poly._bounds._northEast = L.latLng(-Infinity, -Infinity);\n\t      var latlngs = this._poly.getLatLngs();\n\t      this._poly._convertLatLngs(latlngs, true);\n\t      this._poly.redraw();\n\t      this._poly.fire('editdrag');\n\t    },\n\t\n\t    _onMarkerClick: function _onMarkerClick(e) {\n\t      var minPoints = L.Polygon && this._poly instanceof L.Polygon ? 4 : 3,\n\t          marker = e.target;\n\t\n\t      if (this._defaultShape().length < minPoints) {\n\t        return;\n\t      }\n\t\n\t      this._removeMarker(marker);\n\t\n\t      this._updatePrevNext(marker._prev, marker._next);\n\t\n\t      if (marker._middleLeft) {\n\t        this._markerGroup.removeLayer(marker._middleLeft);\n\t      }\n\t      if (marker._middleRight) {\n\t        this._markerGroup.removeLayer(marker._middleRight);\n\t      }\n\t\n\t      if (marker._prev && marker._next) {\n\t        this._createMiddleMarker(marker._prev, marker._next);\n\t      } else if (!marker._prev) {\n\t        marker._next._middleLeft = null;\n\t      } else if (!marker._next) {\n\t        marker._prev._middleRight = null;\n\t      }\n\t\n\t      this._fireEdit();\n\t    },\n\t\n\t    _onContextMenu: function _onContextMenu(e) {\n\t      var marker = e.target;\n\t      var poly = this._poly;\n\t      this._poly._map.fire(L.Draw.Event.MARKERCONTEXT, {\n\t        marker: marker,\n\t        layers: this._markerGroup,\n\t        poly: this._poly\n\t      });\n\t      L.DomEvent.stopPropagation;\n\t    },\n\t\n\t    _onTouchMove: function _onTouchMove(e) {\n\t      var layerPoint = this._map.mouseEventToLayerPoint(e.originalEvent.touches[0]),\n\t          latlng = this._map.layerPointToLatLng(layerPoint),\n\t          marker = e.target;\n\t\n\t      L.extend(marker._origLatLng, latlng);\n\t\n\t      if (marker._middleLeft) {\n\t        marker._middleLeft.setLatLng(this._getMiddleLatLng(marker._prev, marker));\n\t      }\n\t      if (marker._middleRight) {\n\t        marker._middleRight.setLatLng(this._getMiddleLatLng(marker, marker._next));\n\t      }\n\t\n\t      this._poly.redraw();\n\t      this.updateMarkers();\n\t    },\n\t\n\t    _updateIndexes: function _updateIndexes(index, delta) {\n\t      this._markerGroup.eachLayer(function (marker) {\n\t        if (marker._index > index) {\n\t          marker._index += delta;\n\t        }\n\t      });\n\t    },\n\t\n\t    _createMiddleMarker: function _createMiddleMarker(marker1, marker2) {\n\t      var latlng = this._getMiddleLatLng(marker1, marker2),\n\t          marker = this._createMarker(latlng),\n\t          onClick,\n\t          _onDragStart,\n\t          _onDragEnd2;\n\t\n\t      marker.setOpacity(0.6);\n\t\n\t      marker1._middleRight = marker2._middleLeft = marker;\n\t\n\t      _onDragStart = function onDragStart() {\n\t        marker.off('touchmove', _onDragStart, this);\n\t        var i = marker2._index;\n\t\n\t        marker._index = i;\n\t\n\t        marker.off('click', onClick, this).on('click', this._onMarkerClick, this);\n\t\n\t        latlng.lat = marker.getLatLng().lat;\n\t        latlng.lng = marker.getLatLng().lng;\n\t        this._spliceLatLngs(i, 0, latlng);\n\t        this._markers.splice(i, 0, marker);\n\t\n\t        marker.setOpacity(1);\n\t\n\t        this._updateIndexes(i, 1);\n\t        marker2._index++;\n\t        this._updatePrevNext(marker1, marker);\n\t        this._updatePrevNext(marker, marker2);\n\t\n\t        this._poly.fire('editstart');\n\t      };\n\t\n\t      _onDragEnd2 = function onDragEnd() {\n\t        marker.off('dragstart', _onDragStart, this);\n\t        marker.off('dragend', _onDragEnd2, this);\n\t        marker.off('touchmove', _onDragStart, this);\n\t\n\t        this._createMiddleMarker(marker1, marker);\n\t        this._createMiddleMarker(marker, marker2);\n\t      };\n\t\n\t      onClick = function onClick() {\n\t        _onDragStart.call(this);\n\t        _onDragEnd2.call(this);\n\t        this._fireEdit();\n\t      };\n\t\n\t      marker.on('click', onClick, this).on('dragstart', _onDragStart, this).on('dragend', _onDragEnd2, this).on('touchmove', _onDragStart, this);\n\t\n\t      this._markerGroup.addLayer(marker);\n\t    },\n\t\n\t    _updatePrevNext: function _updatePrevNext(marker1, marker2) {\n\t      if (marker1) {\n\t        marker1._next = marker2;\n\t      }\n\t      if (marker2) {\n\t        marker2._prev = marker1;\n\t      }\n\t    },\n\t\n\t    _getMiddleLatLng: function _getMiddleLatLng(marker1, marker2) {\n\t      var map = this._poly._map,\n\t          p1 = map.project(marker1.getLatLng()),\n\t          p2 = map.project(marker2.getLatLng());\n\t\n\t      return map.unproject(p1._add(p2)._divideBy(2));\n\t    }\n\t  });\n\t\n\t  L.Polyline.addInitHook(function () {\n\t    if (this.editing) {\n\t      return;\n\t    }\n\t\n\t    if (L.Edit.Poly) {\n\t      this.editing = new L.Edit.Poly(this);\n\t\n\t      if (this.options.editable) {\n\t        this.editing.enable();\n\t      }\n\t    }\n\t\n\t    this.on('add', function () {\n\t      if (this.editing && this.editing.enabled()) {\n\t        this.editing.addHooks();\n\t      }\n\t    });\n\t\n\t    this.on('remove', function () {\n\t      if (this.editing && this.editing.enabled()) {\n\t        this.editing.removeHooks();\n\t      }\n\t    });\n\t  });\n\t\n\t  L.Edit = L.Edit || {};\n\t\n\t  L.Edit.SimpleShape = L.Handler.extend({\n\t    options: {\n\t      moveIcon: new L.DivIcon({\n\t        iconSize: new L.Point(8, 8),\n\t        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move'\n\t      }),\n\t      resizeIcon: new L.DivIcon({\n\t        iconSize: new L.Point(8, 8),\n\t        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize'\n\t      }),\n\t      touchMoveIcon: new L.DivIcon({\n\t        iconSize: new L.Point(20, 20),\n\t        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move leaflet-touch-icon'\n\t      }),\n\t      touchResizeIcon: new L.DivIcon({\n\t        iconSize: new L.Point(20, 20),\n\t        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize leaflet-touch-icon'\n\t      })\n\t    },\n\t\n\t    initialize: function initialize(shape, options) {\n\t      if (L.Browser.touch) {\n\t        this.options.moveIcon = this.options.touchMoveIcon;\n\t        this.options.resizeIcon = this.options.touchResizeIcon;\n\t      }\n\t\n\t      this._shape = shape;\n\t      L.Util.setOptions(this, options);\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      var shape = this._shape;\n\t      if (this._shape._map) {\n\t        this._map = this._shape._map;\n\t        shape.setStyle(shape.options.editing);\n\t\n\t        if (shape._map) {\n\t          this._map = shape._map;\n\t          if (!this._markerGroup) {\n\t            this._initMarkers();\n\t          }\n\t          this._map.addLayer(this._markerGroup);\n\t        }\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      var shape = this._shape;\n\t\n\t      shape.setStyle(shape.options.original);\n\t\n\t      if (shape._map) {\n\t        this._unbindMarker(this._moveMarker);\n\t\n\t        for (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\n\t          this._unbindMarker(this._resizeMarkers[i]);\n\t        }\n\t        this._resizeMarkers = null;\n\t\n\t        this._map.removeLayer(this._markerGroup);\n\t        delete this._markerGroup;\n\t      }\n\t\n\t      this._map = null;\n\t    },\n\t\n\t    updateMarkers: function updateMarkers() {\n\t      this._markerGroup.clearLayers();\n\t      this._initMarkers();\n\t    },\n\t\n\t    _initMarkers: function _initMarkers() {\n\t      if (!this._markerGroup) {\n\t        this._markerGroup = new L.LayerGroup();\n\t      }\n\t\n\t      this._createMoveMarker();\n\t\n\t      this._createResizeMarker();\n\t    },\n\t\n\t    _createMoveMarker: function _createMoveMarker() {},\n\t\n\t    _createResizeMarker: function _createResizeMarker() {},\n\t\n\t    _createMarker: function _createMarker(latlng, icon) {\n\t      var marker = new L.Marker.Touch(latlng, {\n\t        draggable: true,\n\t        icon: icon,\n\t        zIndexOffset: 10\n\t      });\n\t\n\t      this._bindMarker(marker);\n\t\n\t      this._markerGroup.addLayer(marker);\n\t\n\t      return marker;\n\t    },\n\t\n\t    _bindMarker: function _bindMarker(marker) {\n\t      marker.on('dragstart', this._onMarkerDragStart, this).on('drag', this._onMarkerDrag, this).on('dragend', this._onMarkerDragEnd, this).on('touchstart', this._onTouchStart, this).on('touchmove', this._onTouchMove, this).on('MSPointerMove', this._onTouchMove, this).on('touchend', this._onTouchEnd, this).on('MSPointerUp', this._onTouchEnd, this);\n\t    },\n\t\n\t    _unbindMarker: function _unbindMarker(marker) {\n\t      marker.off('dragstart', this._onMarkerDragStart, this).off('drag', this._onMarkerDrag, this).off('dragend', this._onMarkerDragEnd, this).off('touchstart', this._onTouchStart, this).off('touchmove', this._onTouchMove, this).off('MSPointerMove', this._onTouchMove, this).off('touchend', this._onTouchEnd, this).off('MSPointerUp', this._onTouchEnd, this);\n\t    },\n\t\n\t    _onMarkerDragStart: function _onMarkerDragStart(e) {\n\t      var marker = e.target;\n\t      marker.setOpacity(0);\n\t\n\t      this._shape.fire('editstart');\n\t    },\n\t\n\t    _fireEdit: function _fireEdit() {\n\t      this._shape.edited = true;\n\t      this._shape.fire('edit');\n\t    },\n\t\n\t    _onMarkerDrag: function _onMarkerDrag(e) {\n\t      var marker = e.target,\n\t          latlng = marker.getLatLng();\n\t\n\t      if (marker === this._moveMarker) {\n\t        this._move(latlng);\n\t      } else {\n\t        this._resize(latlng);\n\t      }\n\t\n\t      this._shape.redraw();\n\t      this._shape.fire('editdrag');\n\t    },\n\t\n\t    _onMarkerDragEnd: function _onMarkerDragEnd(e) {\n\t      var marker = e.target;\n\t      marker.setOpacity(1);\n\t\n\t      this._fireEdit();\n\t    },\n\t\n\t    _onTouchStart: function _onTouchStart(e) {\n\t      L.Edit.SimpleShape.prototype._onMarkerDragStart.call(this, e);\n\t\n\t      if (typeof this._getCorners === 'function') {\n\t        var corners = this._getCorners(),\n\t            marker = e.target,\n\t            currentCornerIndex = marker._cornerIndex;\n\t\n\t        marker.setOpacity(0);\n\t\n\t        this._oppositeCorner = corners[(currentCornerIndex + 2) % 4];\n\t        this._toggleCornerMarkers(0, currentCornerIndex);\n\t      }\n\t\n\t      this._shape.fire('editstart');\n\t    },\n\t\n\t    _onTouchMove: function _onTouchMove(e) {\n\t      var layerPoint = this._map.mouseEventToLayerPoint(e.originalEvent.touches[0]),\n\t          latlng = this._map.layerPointToLatLng(layerPoint),\n\t          marker = e.target;\n\t\n\t      if (marker === this._moveMarker) {\n\t        this._move(latlng);\n\t      } else {\n\t        this._resize(latlng);\n\t      }\n\t\n\t      this._shape.redraw();\n\t\n\t      return false;\n\t    },\n\t\n\t    _onTouchEnd: function _onTouchEnd(e) {\n\t      var marker = e.target;\n\t      marker.setOpacity(1);\n\t      this.updateMarkers();\n\t      this._fireEdit();\n\t    },\n\t\n\t    _move: function _move() {},\n\t\n\t    _resize: function _resize() {}\n\t  });\n\t\n\t  L.Edit = L.Edit || {};\n\t\n\t  L.Edit.Rectangle = L.Edit.SimpleShape.extend({\n\t    _createMoveMarker: function _createMoveMarker() {\n\t      var bounds = this._shape.getBounds(),\n\t          center = bounds.getCenter();\n\t\n\t      this._moveMarker = this._createMarker(center, this.options.moveIcon);\n\t    },\n\t\n\t    _createResizeMarker: function _createResizeMarker() {\n\t      var corners = this._getCorners();\n\t\n\t      this._resizeMarkers = [];\n\t\n\t      for (var i = 0, l = corners.length; i < l; i++) {\n\t        this._resizeMarkers.push(this._createMarker(corners[i], this.options.resizeIcon));\n\t\n\t        this._resizeMarkers[i]._cornerIndex = i;\n\t      }\n\t    },\n\t\n\t    _onMarkerDragStart: function _onMarkerDragStart(e) {\n\t      L.Edit.SimpleShape.prototype._onMarkerDragStart.call(this, e);\n\t\n\t      var corners = this._getCorners(),\n\t          marker = e.target,\n\t          currentCornerIndex = marker._cornerIndex;\n\t\n\t      this._oppositeCorner = corners[(currentCornerIndex + 2) % 4];\n\t\n\t      this._toggleCornerMarkers(0, currentCornerIndex);\n\t    },\n\t\n\t    _onMarkerDragEnd: function _onMarkerDragEnd(e) {\n\t      var marker = e.target,\n\t          bounds,\n\t          center;\n\t\n\t      if (marker === this._moveMarker) {\n\t        bounds = this._shape.getBounds();\n\t        center = bounds.getCenter();\n\t\n\t        marker.setLatLng(center);\n\t      }\n\t\n\t      this._toggleCornerMarkers(1);\n\t\n\t      this._repositionCornerMarkers();\n\t\n\t      L.Edit.SimpleShape.prototype._onMarkerDragEnd.call(this, e);\n\t    },\n\t\n\t    _move: function _move(newCenter) {\n\t      var latlngs = this._shape._defaultShape ? this._shape._defaultShape() : this._shape.getLatLngs(),\n\t          bounds = this._shape.getBounds(),\n\t          center = bounds.getCenter(),\n\t          offset,\n\t          newLatLngs = [];\n\t\n\t      for (var i = 0, l = latlngs.length; i < l; i++) {\n\t        offset = [latlngs[i].lat - center.lat, latlngs[i].lng - center.lng];\n\t        newLatLngs.push([newCenter.lat + offset[0], newCenter.lng + offset[1]]);\n\t      }\n\t\n\t      this._shape.setLatLngs(newLatLngs);\n\t\n\t      this._repositionCornerMarkers();\n\t\n\t      this._map.fire(L.Draw.Event.EDITMOVE, {\n\t        layer: this._shape\n\t      });\n\t    },\n\t\n\t    _resize: function _resize(latlng) {\n\t      var bounds;\n\t\n\t      this._shape.setBounds(L.latLngBounds(latlng, this._oppositeCorner));\n\t\n\t      bounds = this._shape.getBounds();\n\t      this._moveMarker.setLatLng(bounds.getCenter());\n\t\n\t      this._map.fire(L.Draw.Event.EDITRESIZE, {\n\t        layer: this._shape\n\t      });\n\t    },\n\t\n\t    _getCorners: function _getCorners() {\n\t      var bounds = this._shape.getBounds(),\n\t          nw = bounds.getNorthWest(),\n\t          ne = bounds.getNorthEast(),\n\t          se = bounds.getSouthEast(),\n\t          sw = bounds.getSouthWest();\n\t\n\t      return [nw, ne, se, sw];\n\t    },\n\t\n\t    _toggleCornerMarkers: function _toggleCornerMarkers(opacity) {\n\t      for (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\n\t        this._resizeMarkers[i].setOpacity(opacity);\n\t      }\n\t    },\n\t\n\t    _repositionCornerMarkers: function _repositionCornerMarkers() {\n\t      var corners = this._getCorners();\n\t\n\t      for (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\n\t        this._resizeMarkers[i].setLatLng(corners[i]);\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Rectangle.addInitHook(function () {\n\t    if (L.Edit.Rectangle) {\n\t      this.editing = new L.Edit.Rectangle(this);\n\t\n\t      if (this.options.editable) {\n\t        this.editing.enable();\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Edit = L.Edit || {};\n\t\n\t  L.Edit.CircleMarker = L.Edit.SimpleShape.extend({\n\t    _createMoveMarker: function _createMoveMarker() {\n\t      var center = this._shape.getLatLng();\n\t\n\t      this._moveMarker = this._createMarker(center, this.options.moveIcon);\n\t    },\n\t\n\t    _createResizeMarker: function _createResizeMarker() {\n\t      this._resizeMarkers = [];\n\t    },\n\t\n\t    _move: function _move(latlng) {\n\t      if (this._resizeMarkers.length) {\n\t        var resizemarkerPoint = this._getResizeMarkerPoint(latlng);\n\t\n\t        this._resizeMarkers[0].setLatLng(resizemarkerPoint);\n\t      }\n\t\n\t      this._shape.setLatLng(latlng);\n\t\n\t      this._map.fire(L.Draw.Event.EDITMOVE, {\n\t        layer: this._shape\n\t      });\n\t    }\n\t  });\n\t\n\t  L.CircleMarker.addInitHook(function () {\n\t    if (L.Edit.CircleMarker) {\n\t      this.editing = new L.Edit.CircleMarker(this);\n\t\n\t      if (this.options.editable) {\n\t        this.editing.enable();\n\t      }\n\t    }\n\t\n\t    this.on('add', function () {\n\t      if (this.editing && this.editing.enabled()) {\n\t        this.editing.addHooks();\n\t      }\n\t    });\n\t\n\t    this.on('remove', function () {\n\t      if (this.editing && this.editing.enabled()) {\n\t        this.editing.removeHooks();\n\t      }\n\t    });\n\t  });\n\t\n\t  L.Edit = L.Edit || {};\n\t\n\t  L.Edit.Circle = L.Edit.CircleMarker.extend({\n\t    _createResizeMarker: function _createResizeMarker() {\n\t      var center = this._shape.getLatLng(),\n\t          resizemarkerPoint = this._getResizeMarkerPoint(center);\n\t\n\t      this._resizeMarkers = [];\n\t      this._resizeMarkers.push(this._createMarker(resizemarkerPoint, this.options.resizeIcon));\n\t    },\n\t\n\t    _getResizeMarkerPoint: function _getResizeMarkerPoint(latlng) {\n\t      var delta = this._shape._radius * Math.cos(Math.PI / 4),\n\t          point = this._map.project(latlng);\n\t      return this._map.unproject([point.x + delta, point.y - delta]);\n\t    },\n\t\n\t    _resize: function _resize(latlng) {\n\t      var moveLatLng = this._moveMarker.getLatLng();\n\t\n\t      if (L.GeometryUtil.isVersion07x()) {\n\t        radius = moveLatLng.distanceTo(latlng);\n\t      } else {\n\t        radius = this._map.distance(moveLatLng, latlng);\n\t      }\n\t      this._shape.setRadius(radius);\n\t\n\t      this._map._editTooltip.updateContent({\n\t        text: L.drawLocal.edit.handlers.edit.tooltip.subtext + '<br />' + L.drawLocal.edit.handlers.edit.tooltip.text,\n\t        subtext: L.drawLocal.draw.handlers.circle.radius + ': ' + L.GeometryUtil.readableDistance(radius, true, this.options.feet, this.options.nautic)\n\t      });\n\t\n\t      this._shape.setRadius(radius);\n\t\n\t      this._map.fire(L.Draw.Event.EDITRESIZE, {\n\t        layer: this._shape\n\t      });\n\t    }\n\t  });\n\t\n\t  L.Circle.addInitHook(function () {\n\t    if (L.Edit.Circle) {\n\t      this.editing = new L.Edit.Circle(this);\n\t\n\t      if (this.options.editable) {\n\t        this.editing.enable();\n\t      }\n\t    }\n\t\n\t    this.on('add', function () {\n\t      if (this.editing && this.editing.enabled()) {\n\t        this.editing.addHooks();\n\t      }\n\t    });\n\t\n\t    this.on('remove', function () {\n\t      if (this.editing && this.editing.enabled()) {\n\t        this.editing.removeHooks();\n\t      }\n\t    });\n\t  });\n\t\n\t  L.Map.mergeOptions({\n\t    touchExtend: true\n\t  });\n\t\n\t  L.Map.TouchExtend = L.Handler.extend({\n\t    initialize: function initialize(map) {\n\t      this._map = map;\n\t      this._container = map._container;\n\t      this._pane = map._panes.overlayPane;\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      L.DomEvent.on(this._container, 'touchstart', this._onTouchStart, this);\n\t      L.DomEvent.on(this._container, 'touchend', this._onTouchEnd, this);\n\t      L.DomEvent.on(this._container, 'touchmove', this._onTouchMove, this);\n\t      if (this._detectIE()) {\n\t        L.DomEvent.on(this._container, 'MSPointerDown', this._onTouchStart, this);\n\t        L.DomEvent.on(this._container, 'MSPointerUp', this._onTouchEnd, this);\n\t        L.DomEvent.on(this._container, 'MSPointerMove', this._onTouchMove, this);\n\t        L.DomEvent.on(this._container, 'MSPointerCancel', this._onTouchCancel, this);\n\t      } else {\n\t        L.DomEvent.on(this._container, 'touchcancel', this._onTouchCancel, this);\n\t        L.DomEvent.on(this._container, 'touchleave', this._onTouchLeave, this);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      L.DomEvent.off(this._container, 'touchstart', this._onTouchStart);\n\t      L.DomEvent.off(this._container, 'touchend', this._onTouchEnd);\n\t      L.DomEvent.off(this._container, 'touchmove', this._onTouchMove);\n\t      if (this._detectIE()) {\n\t        L.DomEvent.off(this._container, 'MSPointerDowm', this._onTouchStart);\n\t        L.DomEvent.off(this._container, 'MSPointerUp', this._onTouchEnd);\n\t        L.DomEvent.off(this._container, 'MSPointerMove', this._onTouchMove);\n\t        L.DomEvent.off(this._container, 'MSPointerCancel', this._onTouchCancel);\n\t      } else {\n\t        L.DomEvent.off(this._container, 'touchcancel', this._onTouchCancel);\n\t        L.DomEvent.off(this._container, 'touchleave', this._onTouchLeave);\n\t      }\n\t    },\n\t\n\t    _touchEvent: function _touchEvent(e, type) {\n\t      var touchEvent = {};\n\t      if (typeof e.touches !== 'undefined') {\n\t        if (!e.touches.length) {\n\t          return;\n\t        }\n\t        touchEvent = e.touches[0];\n\t      } else if (e.pointerType === 'touch') {\n\t        touchEvent = e;\n\t        if (!this._filterClick(e)) {\n\t          return;\n\t        }\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      var containerPoint = this._map.mouseEventToContainerPoint(touchEvent),\n\t          layerPoint = this._map.mouseEventToLayerPoint(touchEvent),\n\t          latlng = this._map.layerPointToLatLng(layerPoint);\n\t\n\t      this._map.fire(type, {\n\t        latlng: latlng,\n\t        layerPoint: layerPoint,\n\t        containerPoint: containerPoint,\n\t        pageX: touchEvent.pageX,\n\t        pageY: touchEvent.pageY,\n\t        originalEvent: e\n\t      });\n\t    },\n\t\n\t    _filterClick: function _filterClick(e) {\n\t      var timeStamp = e.timeStamp || e.originalEvent.timeStamp,\n\t          elapsed = L.DomEvent._lastClick && timeStamp - L.DomEvent._lastClick;\n\t\n\t      if (elapsed && elapsed > 100 && elapsed < 500 || e.target._simulatedClick && !e._simulated) {\n\t        L.DomEvent.stop(e);\n\t        return false;\n\t      }\n\t      L.DomEvent._lastClick = timeStamp;\n\t      return true;\n\t    },\n\t\n\t    _onTouchStart: function _onTouchStart(e) {\n\t      if (!this._map._loaded) {\n\t        return;\n\t      }\n\t\n\t      var type = 'touchstart';\n\t      this._touchEvent(e, type);\n\t    },\n\t\n\t    _onTouchEnd: function _onTouchEnd(e) {\n\t      if (!this._map._loaded) {\n\t        return;\n\t      }\n\t\n\t      var type = 'touchend';\n\t      this._touchEvent(e, type);\n\t    },\n\t\n\t    _onTouchCancel: function _onTouchCancel(e) {\n\t      if (!this._map._loaded) {\n\t        return;\n\t      }\n\t\n\t      var type = 'touchcancel';\n\t      if (this._detectIE()) {\n\t        type = 'pointercancel';\n\t      }\n\t      this._touchEvent(e, type);\n\t    },\n\t\n\t    _onTouchLeave: function _onTouchLeave(e) {\n\t      if (!this._map._loaded) {\n\t        return;\n\t      }\n\t\n\t      var type = 'touchleave';\n\t      this._touchEvent(e, type);\n\t    },\n\t\n\t    _onTouchMove: function _onTouchMove(e) {\n\t      if (!this._map._loaded) {\n\t        return;\n\t      }\n\t\n\t      var type = 'touchmove';\n\t      this._touchEvent(e, type);\n\t    },\n\t\n\t    _detectIE: function _detectIE() {\n\t      var ua = window.navigator.userAgent;\n\t\n\t      var msie = ua.indexOf('MSIE ');\n\t      if (msie > 0) {\n\t        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t      }\n\t\n\t      var trident = ua.indexOf('Trident/');\n\t      if (trident > 0) {\n\t        var rv = ua.indexOf('rv:');\n\t        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t      }\n\t\n\t      var edge = ua.indexOf('Edge/');\n\t      if (edge > 0) {\n\t        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t      }\n\t\n\t      return false;\n\t    }\n\t  });\n\t\n\t  L.Map.addInitHook('addHandler', 'touchExtend', L.Map.TouchExtend);\n\t\n\t  L.Marker.Touch = L.Marker.extend({\n\t    _initInteraction: function _initInteraction() {\n\t      if (!this.addInteractiveTarget) {\n\t        return this._initInteractionLegacy();\n\t      }\n\t\n\t      return L.Marker.prototype._initInteraction.apply(this);\n\t    },\n\t\n\t    _initInteractionLegacy: function _initInteractionLegacy() {\n\t      if (!this.options.clickable) {\n\t        return;\n\t      }\n\t\n\t      var icon = this._icon,\n\t          events = ['dblclick', 'mousedown', 'mouseover', 'mouseout', 'contextmenu', 'touchstart', 'touchend', 'touchmove'];\n\t      if (this._detectIE) {\n\t        events.concat(['MSPointerDown', 'MSPointerUp', 'MSPointerMove', 'MSPointerCancel']);\n\t      } else {\n\t        events.concat(['touchcancel']);\n\t      }\n\t\n\t      L.DomUtil.addClass(icon, 'leaflet-clickable');\n\t      L.DomEvent.on(icon, 'click', this._onMouseClick, this);\n\t      L.DomEvent.on(icon, 'keypress', this._onKeyPress, this);\n\t\n\t      for (var i = 0; i < events.length; i++) {\n\t        L.DomEvent.on(icon, events[i], this._fireMouseEvent, this);\n\t      }\n\t\n\t      if (L.Handler.MarkerDrag) {\n\t        this.dragging = new L.Handler.MarkerDrag(this);\n\t\n\t        if (this.options.draggable) {\n\t          this.dragging.enable();\n\t        }\n\t      }\n\t    },\n\t\n\t    _detectIE: function _detectIE() {\n\t      var ua = window.navigator.userAgent;\n\t\n\t      var msie = ua.indexOf('MSIE ');\n\t      if (msie > 0) {\n\t        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t      }\n\t\n\t      var trident = ua.indexOf('Trident/');\n\t      if (trident > 0) {\n\t        var rv = ua.indexOf('rv:');\n\t        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t      }\n\t\n\t      var edge = ua.indexOf('Edge/');\n\t      if (edge > 0) {\n\t        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t      }\n\t\n\t      return false;\n\t    }\n\t  });\n\t\n\t  L.LatLngUtil = {\n\t    cloneLatLngs: function cloneLatLngs(latlngs) {\n\t      var clone = [];\n\t      for (var i = 0, l = latlngs.length; i < l; i++) {\n\t        if (Array.isArray(latlngs[i])) {\n\t          clone.push(L.LatLngUtil.cloneLatLngs(latlngs[i]));\n\t        } else {\n\t          clone.push(this.cloneLatLng(latlngs[i]));\n\t        }\n\t      }\n\t      return clone;\n\t    },\n\t\n\t    cloneLatLng: function cloneLatLng(latlng) {\n\t      return L.latLng(latlng.lat, latlng.lng);\n\t    }\n\t  };\n\t  (function () {\n\t    var defaultPrecision = {\n\t      km: 2,\n\t      ha: 2,\n\t      m: 0,\n\t      mi: 2,\n\t      ac: 2,\n\t      yd: 0,\n\t      ft: 0,\n\t      nm: 2\n\t    };\n\t\n\t    L.GeometryUtil = L.extend(L.GeometryUtil || {}, {\n\t      geodesicArea: function geodesicArea(latLngs) {\n\t        var pointsCount = latLngs.length,\n\t            area = 0.0,\n\t            d2r = Math.PI / 180,\n\t            p1,\n\t            p2;\n\t\n\t        if (pointsCount > 2) {\n\t          for (var i = 0; i < pointsCount; i++) {\n\t            p1 = latLngs[i];\n\t            p2 = latLngs[(i + 1) % pointsCount];\n\t            area += (p2.lng - p1.lng) * d2r * (2 + Math.sin(p1.lat * d2r) + Math.sin(p2.lat * d2r));\n\t          }\n\t          area = area * 6378137.0 * 6378137.0 / 2.0;\n\t        }\n\t\n\t        return Math.abs(area);\n\t      },\n\t\n\t      formattedNumber: function formattedNumber(n, precision) {\n\t        var formatted = parseFloat(n).toFixed(precision),\n\t            format = L.drawLocal.format && L.drawLocal.format.numeric,\n\t            delimiters = format && format.delimiters,\n\t            thousands = delimiters && delimiters.thousands,\n\t            decimal = delimiters && delimiters.decimal;\n\t\n\t        if (thousands || decimal) {\n\t          var splitValue = formatted.split('.');\n\t          formatted = thousands ? splitValue[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + thousands) : splitValue[0];\n\t          decimal = decimal || '.';\n\t          if (splitValue.length > 1) {\n\t            formatted = formatted + decimal + splitValue[1];\n\t          }\n\t        }\n\t\n\t        return formatted;\n\t      },\n\t\n\t      readableArea: function readableArea(area, isMetric, precision) {\n\t        var areaStr,\n\t            units,\n\t            type,\n\t            precision = L.Util.extend({}, defaultPrecision, precision);\n\t\n\t        if (isMetric) {\n\t          units = ['ha', 'm'];\n\t          type = typeof isMetric === 'undefined' ? 'undefined' : (0, _typeof3.default)(isMetric);\n\t          if (type === 'string') {\n\t            units = [isMetric];\n\t          } else if (type !== 'boolean') {\n\t            units = isMetric;\n\t          }\n\t\n\t          if (area >= 1000000 && units.indexOf('km') !== -1) {\n\t            areaStr = L.GeometryUtil.formattedNumber(area * 0.000001, precision['km']) + ' km²';\n\t          } else if (area >= 10000 && units.indexOf('ha') !== -1) {\n\t            areaStr = L.GeometryUtil.formattedNumber(area * 0.0001, precision['ha']) + ' ha';\n\t          } else {\n\t            areaStr = L.GeometryUtil.formattedNumber(area, precision['m']) + ' m²';\n\t          }\n\t        } else {\n\t          area /= 0.836127;\n\t\n\t          if (area >= 3097600) {\n\t            areaStr = L.GeometryUtil.formattedNumber(area / 3097600, precision['mi']) + ' mi²';\n\t          } else if (area >= 4840) {\n\t            areaStr = L.GeometryUtil.formattedNumber(area / 4840, precision['ac']) + ' acres';\n\t          } else {\n\t            areaStr = L.GeometryUtil.formattedNumber(area, precision['yd']) + ' yd²';\n\t          }\n\t        }\n\t\n\t        return areaStr;\n\t      },\n\t\n\t      readableDistance: function readableDistance(distance, isMetric, isFeet, isNauticalMile, precision) {\n\t        var distanceStr,\n\t            units,\n\t            precision = L.Util.extend({}, defaultPrecision, precision);\n\t\n\t        if (isMetric) {\n\t          units = typeof isMetric == 'string' ? isMetric : 'metric';\n\t        } else if (isFeet) {\n\t          units = 'feet';\n\t        } else if (isNauticalMile) {\n\t          units = 'nauticalMile';\n\t        } else {\n\t          units = 'yards';\n\t        }\n\t\n\t        switch (units) {\n\t          case 'metric':\n\t            if (distance > 1000) {\n\t              distanceStr = L.GeometryUtil.formattedNumber(distance / 1000, precision['km']) + ' km';\n\t            } else {\n\t              distanceStr = L.GeometryUtil.formattedNumber(distance, precision['m']) + ' m';\n\t            }\n\t            break;\n\t          case 'feet':\n\t            distance *= 1.09361 * 3;\n\t            distanceStr = L.GeometryUtil.formattedNumber(distance, precision['ft']) + ' ft';\n\t\n\t            break;\n\t          case 'nauticalMile':\n\t            distance *= 0.53996;\n\t            distanceStr = L.GeometryUtil.formattedNumber(distance / 1000, precision['nm']) + ' nm';\n\t            break;\n\t          case 'yards':\n\t          default:\n\t            distance *= 1.09361;\n\t\n\t            if (distance > 1760) {\n\t              distanceStr = L.GeometryUtil.formattedNumber(distance / 1760, precision['mi']) + ' miles';\n\t            } else {\n\t              distanceStr = L.GeometryUtil.formattedNumber(distance, precision['yd']) + ' yd';\n\t            }\n\t            break;\n\t        }\n\t        return distanceStr;\n\t      },\n\t\n\t      isVersion07x: function isVersion07x() {\n\t        var version = L.version.split('.');\n\t\n\t        return parseInt(version[0], 10) === 0 && parseInt(version[1], 10) === 7;\n\t      }\n\t    });\n\t  })();\n\t\n\t  L.Util.extend(L.LineUtil, {\n\t    segmentsIntersect: function segmentsIntersect(p, p1, p2, p3) {\n\t      return this._checkCounterclockwise(p, p2, p3) !== this._checkCounterclockwise(p1, p2, p3) && this._checkCounterclockwise(p, p1, p2) !== this._checkCounterclockwise(p, p1, p3);\n\t    },\n\t\n\t    _checkCounterclockwise: function _checkCounterclockwise(p, p1, p2) {\n\t      return (p2.y - p.y) * (p1.x - p.x) > (p1.y - p.y) * (p2.x - p.x);\n\t    }\n\t  });\n\t\n\t  L.Polyline.include({\n\t    intersects: function intersects() {\n\t      var points = this._getProjectedPoints(),\n\t          len = points ? points.length : 0,\n\t          i,\n\t          p,\n\t          p1;\n\t\n\t      if (this._tooFewPointsForIntersection()) {\n\t        return false;\n\t      }\n\t\n\t      for (i = len - 1; i >= 3; i--) {\n\t        p = points[i - 1];\n\t        p1 = points[i];\n\t\n\t        if (this._lineSegmentsIntersectsRange(p, p1, i - 2)) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    },\n\t\n\t    newLatLngIntersects: function newLatLngIntersects(latlng, skipFirst) {\n\t      if (!this._map) {\n\t        return false;\n\t      }\n\t\n\t      return this.newPointIntersects(this._map.latLngToLayerPoint(latlng), skipFirst);\n\t    },\n\t\n\t    newPointIntersects: function newPointIntersects(newPoint, skipFirst) {\n\t      var points = this._getProjectedPoints(),\n\t          len = points ? points.length : 0,\n\t          lastPoint = points ? points[len - 1] : null,\n\t          maxIndex = len - 2;\n\t\n\t      if (this._tooFewPointsForIntersection(1)) {\n\t        return false;\n\t      }\n\t\n\t      return this._lineSegmentsIntersectsRange(lastPoint, newPoint, maxIndex, skipFirst ? 1 : 0);\n\t    },\n\t\n\t    _tooFewPointsForIntersection: function _tooFewPointsForIntersection(extraPoints) {\n\t      var points = this._getProjectedPoints(),\n\t          len = points ? points.length : 0;\n\t\n\t      len += extraPoints || 0;\n\t\n\t      return !points || len <= 3;\n\t    },\n\t\n\t    _lineSegmentsIntersectsRange: function _lineSegmentsIntersectsRange(p, p1, maxIndex, minIndex) {\n\t      var points = this._getProjectedPoints(),\n\t          p2,\n\t          p3;\n\t\n\t      minIndex = minIndex || 0;\n\t\n\t      for (var j = maxIndex; j > minIndex; j--) {\n\t        p2 = points[j - 1];\n\t        p3 = points[j];\n\t\n\t        if (L.LineUtil.segmentsIntersect(p, p1, p2, p3)) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    },\n\t\n\t    _getProjectedPoints: function _getProjectedPoints() {\n\t      if (!this._defaultShape) {\n\t        return this._originalPoints;\n\t      }\n\t      var points = [],\n\t          _shape = this._defaultShape();\n\t\n\t      for (var i = 0; i < _shape.length; i++) {\n\t        points.push(this._map.latLngToLayerPoint(_shape[i]));\n\t      }\n\t      return points;\n\t    }\n\t  });\n\t\n\t  L.Polygon.include({\n\t    intersects: function intersects() {\n\t      var polylineIntersects,\n\t          points = this._getProjectedPoints(),\n\t          len,\n\t          firstPoint,\n\t          lastPoint,\n\t          maxIndex;\n\t\n\t      if (this._tooFewPointsForIntersection()) {\n\t        return false;\n\t      }\n\t\n\t      polylineIntersects = L.Polyline.prototype.intersects.call(this);\n\t\n\t      if (polylineIntersects) {\n\t        return true;\n\t      }\n\t\n\t      len = points.length;\n\t      firstPoint = points[0];\n\t      lastPoint = points[len - 1];\n\t      maxIndex = len - 2;\n\t\n\t      return this._lineSegmentsIntersectsRange(lastPoint, firstPoint, maxIndex, 1);\n\t    }\n\t  });\n\t\n\t  L.Control.Draw = L.Control.extend({\n\t    options: {\n\t      position: 'topleft',\n\t      draw: {},\n\t      edit: false\n\t    },\n\t\n\t    initialize: function initialize(options) {\n\t      if (L.version < '0.7') {\n\t        throw new Error('Leaflet.draw 0.2.3+ requires Leaflet 0.7.0+. Download latest from https://github.com/Leaflet/Leaflet/');\n\t      }\n\t\n\t      L.Control.prototype.initialize.call(this, options);\n\t\n\t      var toolbar;\n\t\n\t      this._toolbars = {};\n\t\n\t      if (L.DrawToolbar && this.options.draw) {\n\t        toolbar = new L.DrawToolbar(this.options.draw);\n\t\n\t        this._toolbars[L.DrawToolbar.TYPE] = toolbar;\n\t\n\t        this._toolbars[L.DrawToolbar.TYPE].on('enable', this._toolbarEnabled, this);\n\t      }\n\t\n\t      if (L.EditToolbar && this.options.edit) {\n\t        toolbar = new L.EditToolbar(this.options.edit);\n\t\n\t        this._toolbars[L.EditToolbar.TYPE] = toolbar;\n\t\n\t        this._toolbars[L.EditToolbar.TYPE].on('enable', this._toolbarEnabled, this);\n\t      }\n\t      L.toolbar = this;\n\t    },\n\t\n\t    onAdd: function onAdd(map) {\n\t      var container = L.DomUtil.create('div', 'leaflet-draw'),\n\t          addedTopClass = false,\n\t          topClassName = 'leaflet-draw-toolbar-top',\n\t          toolbarContainer;\n\t\n\t      for (var toolbarId in this._toolbars) {\n\t        if (this._toolbars.hasOwnProperty(toolbarId)) {\n\t          toolbarContainer = this._toolbars[toolbarId].addToolbar(map);\n\t\n\t          if (toolbarContainer) {\n\t            if (!addedTopClass) {\n\t              if (!L.DomUtil.hasClass(toolbarContainer, topClassName)) {\n\t                L.DomUtil.addClass(toolbarContainer.childNodes[0], topClassName);\n\t              }\n\t              addedTopClass = true;\n\t            }\n\t\n\t            container.appendChild(toolbarContainer);\n\t          }\n\t        }\n\t      }\n\t\n\t      return container;\n\t    },\n\t\n\t    onRemove: function onRemove() {\n\t      for (var toolbarId in this._toolbars) {\n\t        if (this._toolbars.hasOwnProperty(toolbarId)) {\n\t          this._toolbars[toolbarId].removeToolbar();\n\t        }\n\t      }\n\t    },\n\t\n\t    setDrawingOptions: function setDrawingOptions(options) {\n\t      for (var toolbarId in this._toolbars) {\n\t        if (this._toolbars[toolbarId] instanceof L.DrawToolbar) {\n\t          this._toolbars[toolbarId].setOptions(options);\n\t        }\n\t      }\n\t    },\n\t\n\t    _toolbarEnabled: function _toolbarEnabled(e) {\n\t      var enabledToolbar = e.target;\n\t\n\t      for (var toolbarId in this._toolbars) {\n\t        if (this._toolbars[toolbarId] !== enabledToolbar) {\n\t          this._toolbars[toolbarId].disable();\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  L.Map.mergeOptions({\n\t    drawControlTooltips: true,\n\t    drawControl: false\n\t  });\n\t\n\t  L.Map.addInitHook(function () {\n\t    if (this.options.drawControl) {\n\t      this.drawControl = new L.Control.Draw();\n\t      this.addControl(this.drawControl);\n\t    }\n\t  });\n\t\n\t  L.Toolbar = L.Class.extend({\n\t    initialize: function initialize(options) {\n\t      L.setOptions(this, options);\n\t\n\t      this._modes = {};\n\t      this._actionButtons = [];\n\t      this._activeMode = null;\n\t\n\t      var version = L.version.split('.');\n\t\n\t      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n\t        L.Toolbar.include(L.Evented.prototype);\n\t      } else {\n\t        L.Toolbar.include(L.Mixin.Events);\n\t      }\n\t    },\n\t\n\t    enabled: function enabled() {\n\t      return this._activeMode !== null;\n\t    },\n\t\n\t    disable: function disable() {\n\t      if (!this.enabled()) {\n\t        return;\n\t      }\n\t\n\t      this._activeMode.handler.disable();\n\t    },\n\t\n\t    addToolbar: function addToolbar(map) {\n\t      var container = L.DomUtil.create('div', 'leaflet-draw-section'),\n\t          buttonIndex = 0,\n\t          buttonClassPrefix = this._toolbarClass || '',\n\t          modeHandlers = this.getModeHandlers(map),\n\t          i;\n\t\n\t      this._toolbarContainer = L.DomUtil.create('div', 'leaflet-draw-toolbar leaflet-bar');\n\t      this._map = map;\n\t\n\t      for (i = 0; i < modeHandlers.length; i++) {\n\t        if (modeHandlers[i].enabled) {\n\t          this._initModeHandler(modeHandlers[i].handler, this._toolbarContainer, buttonIndex++, buttonClassPrefix, modeHandlers[i].title);\n\t        }\n\t      }\n\t\n\t      if (!buttonIndex) {\n\t        return;\n\t      }\n\t\n\t      this._lastButtonIndex = --buttonIndex;\n\t\n\t      this._actionsContainer = L.DomUtil.create('ul', 'leaflet-draw-actions');\n\t\n\t      container.appendChild(this._toolbarContainer);\n\t      container.appendChild(this._actionsContainer);\n\t\n\t      return container;\n\t    },\n\t\n\t    removeToolbar: function removeToolbar() {\n\t      for (var handlerId in this._modes) {\n\t        if (this._modes.hasOwnProperty(handlerId)) {\n\t          this._disposeButton(this._modes[handlerId].button, this._modes[handlerId].handler.enable, this._modes[handlerId].handler);\n\t\n\t          this._modes[handlerId].handler.disable();\n\t\n\t          this._modes[handlerId].handler.off('enabled', this._handlerActivated, this).off('disabled', this._handlerDeactivated, this);\n\t        }\n\t      }\n\t      this._modes = {};\n\t\n\t      for (var i = 0, l = this._actionButtons.length; i < l; i++) {\n\t        this._disposeButton(this._actionButtons[i].button, this._actionButtons[i].callback, this);\n\t      }\n\t      this._actionButtons = [];\n\t      this._actionsContainer = null;\n\t    },\n\t\n\t    _initModeHandler: function _initModeHandler(handler, container, buttonIndex, classNamePredix, buttonTitle) {\n\t      var type = handler.type;\n\t\n\t      this._modes[type] = {};\n\t\n\t      this._modes[type].handler = handler;\n\t\n\t      this._modes[type].button = this._createButton({\n\t        type: type,\n\t        title: buttonTitle,\n\t        className: classNamePredix + '-' + type,\n\t        container: container,\n\t        callback: this._modes[type].handler.enable,\n\t        context: this._modes[type].handler\n\t      });\n\t\n\t      this._modes[type].buttonIndex = buttonIndex;\n\t\n\t      this._modes[type].handler.on('enabled', this._handlerActivated, this).on('disabled', this._handlerDeactivated, this);\n\t    },\n\t\n\t    _detectIOS: function _detectIOS() {\n\t      var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\t      return iOS;\n\t    },\n\t\n\t    _createButton: function _createButton(options) {\n\t      var link = L.DomUtil.create('a', options.className || '', options.container);\n\t\n\t      var sr = L.DomUtil.create('span', 'sr-only', options.container);\n\t\n\t      link.href = '#';\n\t      link.appendChild(sr);\n\t\n\t      if (options.title) {\n\t        link.title = options.title;\n\t        sr.innerHTML = options.title;\n\t      }\n\t\n\t      if (options.text) {\n\t        link.innerHTML = options.text;\n\t        sr.innerHTML = options.text;\n\t      }\n\t\n\t      var buttonEvent = this._detectIOS() ? 'touchstart' : 'click';\n\t\n\t      L.DomEvent.on(link, 'click', L.DomEvent.stopPropagation).on(link, 'mousedown', L.DomEvent.stopPropagation).on(link, 'dblclick', L.DomEvent.stopPropagation).on(link, 'touchstart', L.DomEvent.stopPropagation).on(link, 'click', L.DomEvent.preventDefault).on(link, buttonEvent, options.callback, options.context);\n\t\n\t      return link;\n\t    },\n\t\n\t    _disposeButton: function _disposeButton(button, callback) {\n\t      var buttonEvent = this._detectIOS() ? 'touchstart' : 'click';\n\t\n\t      L.DomEvent.off(button, 'click', L.DomEvent.stopPropagation).off(button, 'mousedown', L.DomEvent.stopPropagation).off(button, 'dblclick', L.DomEvent.stopPropagation).off(button, 'touchstart', L.DomEvent.stopPropagation).off(button, 'click', L.DomEvent.preventDefault).off(button, buttonEvent, callback);\n\t    },\n\t\n\t    _handlerActivated: function _handlerActivated(e) {\n\t      this.disable();\n\t\n\t      this._activeMode = this._modes[e.handler];\n\t\n\t      L.DomUtil.addClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\n\t\n\t      this._showActionsToolbar();\n\t\n\t      this.fire('enable');\n\t    },\n\t\n\t    _handlerDeactivated: function _handlerDeactivated() {\n\t      this._hideActionsToolbar();\n\t\n\t      L.DomUtil.removeClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\n\t\n\t      this._activeMode = null;\n\t\n\t      this.fire('disable');\n\t    },\n\t\n\t    _createActions: function _createActions(handler) {\n\t      var container = this._actionsContainer,\n\t          buttons = this.getActions(handler),\n\t          l = buttons.length,\n\t          li,\n\t          di,\n\t          dl,\n\t          button;\n\t\n\t      for (di = 0, dl = this._actionButtons.length; di < dl; di++) {\n\t        this._disposeButton(this._actionButtons[di].button, this._actionButtons[di].callback);\n\t      }\n\t      this._actionButtons = [];\n\t\n\t      while (container.firstChild) {\n\t        container.removeChild(container.firstChild);\n\t      }\n\t\n\t      for (var i = 0; i < l; i++) {\n\t        if ('enabled' in buttons[i] && !buttons[i].enabled) {\n\t          continue;\n\t        }\n\t\n\t        li = L.DomUtil.create('li', '', container);\n\t\n\t        button = this._createButton({\n\t          title: buttons[i].title,\n\t          text: buttons[i].text,\n\t          container: li,\n\t          callback: buttons[i].callback,\n\t          context: buttons[i].context\n\t        });\n\t\n\t        this._actionButtons.push({\n\t          button: button,\n\t          callback: buttons[i].callback\n\t        });\n\t      }\n\t    },\n\t\n\t    _showActionsToolbar: function _showActionsToolbar() {\n\t      var buttonIndex = this._activeMode.buttonIndex,\n\t          lastButtonIndex = this._lastButtonIndex,\n\t          toolbarPosition = this._activeMode.button.offsetTop - 1;\n\t\n\t      this._createActions(this._activeMode.handler);\n\t\n\t      this._actionsContainer.style.top = toolbarPosition + 'px';\n\t\n\t      if (buttonIndex === 0) {\n\t        L.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\n\t        L.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-top');\n\t      }\n\t\n\t      if (buttonIndex === lastButtonIndex) {\n\t        L.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\n\t        L.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\n\t      }\n\t\n\t      this._actionsContainer.style.display = 'block';\n\t      this._map.fire(L.Draw.Event.TOOLBAROPENED);\n\t    },\n\t\n\t    _hideActionsToolbar: function _hideActionsToolbar() {\n\t      this._actionsContainer.style.display = 'none';\n\t\n\t      L.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\n\t      L.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\n\t      L.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-top');\n\t      L.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\n\t      this._map.fire(L.Draw.Event.TOOLBARCLOSED);\n\t    }\n\t  });\n\t\n\t  L.Draw = L.Draw || {};\n\t\n\t  L.Draw.Tooltip = L.Class.extend({\n\t    initialize: function initialize(map) {\n\t      this._map = map;\n\t      this._popupPane = map._panes.popupPane;\n\t      this._visible = false;\n\t\n\t      this._container = map.options.drawControlTooltips ? L.DomUtil.create('div', 'leaflet-draw-tooltip', this._popupPane) : null;\n\t      this._singleLineLabel = false;\n\t\n\t      this._map.on('mouseout', this._onMouseOut, this);\n\t    },\n\t\n\t    dispose: function dispose() {\n\t      this._map.off('mouseout', this._onMouseOut, this);\n\t\n\t      if (this._container) {\n\t        this._popupPane.removeChild(this._container);\n\t        this._container = null;\n\t      }\n\t    },\n\t\n\t    updateContent: function updateContent(labelText) {\n\t      if (!this._container) {\n\t        return this;\n\t      }\n\t      labelText.subtext = labelText.subtext || '';\n\t\n\t      if (labelText.subtext.length === 0 && !this._singleLineLabel) {\n\t        L.DomUtil.addClass(this._container, 'leaflet-draw-tooltip-single');\n\t        this._singleLineLabel = true;\n\t      } else if (labelText.subtext.length > 0 && this._singleLineLabel) {\n\t        L.DomUtil.removeClass(this._container, 'leaflet-draw-tooltip-single');\n\t        this._singleLineLabel = false;\n\t      }\n\t\n\t      this._container.innerHTML = (labelText.subtext.length > 0 ? '<span class=\"leaflet-draw-tooltip-subtext\">' + labelText.subtext + '</span>' + '<br />' : '') + '<span>' + labelText.text + '</span>';\n\t\n\t      if (!labelText.text && !labelText.subtext) {\n\t        this._visible = false;\n\t        this._container.style.visibility = 'hidden';\n\t      } else {\n\t        this._visible = true;\n\t        this._container.style.visibility = 'inherit';\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    updatePosition: function updatePosition(latlng) {\n\t      var pos = this._map.latLngToLayerPoint(latlng),\n\t          tooltipContainer = this._container;\n\t\n\t      if (this._container) {\n\t        if (this._visible) {\n\t          tooltipContainer.style.visibility = 'inherit';\n\t        }\n\t        L.DomUtil.setPosition(tooltipContainer, pos);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    showAsError: function showAsError() {\n\t      if (this._container) {\n\t        L.DomUtil.addClass(this._container, 'leaflet-error-draw-tooltip');\n\t      }\n\t      return this;\n\t    },\n\t\n\t    removeError: function removeError() {\n\t      if (this._container) {\n\t        L.DomUtil.removeClass(this._container, 'leaflet-error-draw-tooltip');\n\t      }\n\t      return this;\n\t    },\n\t\n\t    _onMouseOut: function _onMouseOut() {\n\t      if (this._container) {\n\t        this._container.style.visibility = 'hidden';\n\t      }\n\t    }\n\t  });\n\t\n\t  L.DrawToolbar = L.Toolbar.extend({\n\t    statics: {\n\t      TYPE: 'draw'\n\t    },\n\t\n\t    options: {\n\t      circlemarker: {},\n\t      polyline: {},\n\t      polygon: {},\n\t      rectangle: {},\n\t      circle: {},\n\t      marker: {}\n\t    },\n\t\n\t    initialize: function initialize(options) {\n\t      for (var type in this.options) {\n\t        if (this.options.hasOwnProperty(type)) {\n\t          if (options[type]) {\n\t            options[type] = L.extend({}, this.options[type], options[type]);\n\t          }\n\t        }\n\t      }\n\t\n\t      this._toolbarClass = 'leaflet-draw-draw';\n\t      L.Toolbar.prototype.initialize.call(this, options);\n\t    },\n\t\n\t    getModeHandlers: function getModeHandlers(map) {\n\t      return [{\n\t        enabled: this.options.circlemarker,\n\t        handler: new L.Draw.CircleMarker(map, this.options.circlemarker),\n\t        title: L.drawLocal.draw.toolbar.buttons.circlemarker\n\t      }, {\n\t        enabled: this.options.polyline,\n\t        handler: new L.Draw.Polyline(map, this.options.polyline),\n\t        title: L.drawLocal.draw.toolbar.buttons.polyline\n\t      }, {\n\t        enabled: this.options.polygon,\n\t        handler: new L.Draw.Polygon(map, this.options.polygon),\n\t        title: L.drawLocal.draw.toolbar.buttons.polygon\n\t      }, {\n\t        enabled: this.options.rectangle,\n\t        handler: new L.Draw.Rectangle(map, this.options.rectangle),\n\t        title: L.drawLocal.draw.toolbar.buttons.rectangle\n\t      }, {\n\t        enabled: this.options.circle,\n\t        handler: new L.Draw.Circle(map, this.options.circle),\n\t        title: L.drawLocal.draw.toolbar.buttons.circle\n\t      }, {\n\t        enabled: this.options.marker,\n\t        handler: new L.Draw.Marker(map, this.options.marker),\n\t        title: L.drawLocal.draw.toolbar.buttons.marker\n\t      }];\n\t    },\n\t\n\t    getActions: function getActions(handler) {\n\t      return [{\n\t        enabled: handler.completeShape,\n\t        title: L.drawLocal.draw.toolbar.finish.title,\n\t        text: L.drawLocal.draw.toolbar.finish.text,\n\t        callback: handler.completeShape,\n\t        context: handler\n\t      }, {\n\t        enabled: handler.deleteLastVertex,\n\t        title: L.drawLocal.draw.toolbar.undo.title,\n\t        text: L.drawLocal.draw.toolbar.undo.text,\n\t        callback: handler.deleteLastVertex,\n\t        context: handler\n\t      }, {\n\t        title: L.drawLocal.draw.toolbar.actions.title,\n\t        text: L.drawLocal.draw.toolbar.actions.text,\n\t        callback: this.disable,\n\t        context: this\n\t      }];\n\t    },\n\t\n\t    setOptions: function setOptions(options) {\n\t      L.setOptions(this, options);\n\t\n\t      for (var type in this._modes) {\n\t        if (this._modes.hasOwnProperty(type) && options.hasOwnProperty(type)) {\n\t          this._modes[type].handler.setOptions(options[type]);\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  L.EditToolbar = L.Toolbar.extend({\n\t    statics: {\n\t      TYPE: 'edit'\n\t    },\n\t\n\t    options: {\n\t      edit: {\n\t        selectedPathOptions: {\n\t          dashArray: '10, 10',\n\t\n\t          fill: true,\n\t          fillColor: '#fe57a1',\n\t          fillOpacity: 0.1,\n\t\n\t          maintainColor: false\n\t        }\n\t      },\n\t      remove: {},\n\t      poly: null,\n\t      featureGroup: null },\n\t\n\t    initialize: function initialize(options) {\n\t      if (options.edit) {\n\t        if (typeof options.edit.selectedPathOptions === 'undefined') {\n\t          options.edit.selectedPathOptions = this.options.edit.selectedPathOptions;\n\t        }\n\t        options.edit.selectedPathOptions = L.extend({}, this.options.edit.selectedPathOptions, options.edit.selectedPathOptions);\n\t      }\n\t\n\t      if (options.remove) {\n\t        options.remove = L.extend({}, this.options.remove, options.remove);\n\t      }\n\t\n\t      if (options.poly) {\n\t        options.poly = L.extend({}, this.options.poly, options.poly);\n\t      }\n\t\n\t      this._toolbarClass = 'leaflet-draw-edit';\n\t      L.Toolbar.prototype.initialize.call(this, options);\n\t\n\t      this._selectedFeatureCount = 0;\n\t    },\n\t\n\t    getModeHandlers: function getModeHandlers(map) {\n\t      var featureGroup = this.options.featureGroup;\n\t      return [{\n\t        enabled: this.options.edit,\n\t        handler: new L.EditToolbar.Edit(map, {\n\t          featureGroup: featureGroup,\n\t          selectedPathOptions: this.options.edit.selectedPathOptions,\n\t          poly: this.options.poly\n\t        }),\n\t        title: L.drawLocal.edit.toolbar.buttons.edit\n\t      }, {\n\t        enabled: this.options.remove,\n\t        handler: new L.EditToolbar.Delete(map, {\n\t          featureGroup: featureGroup\n\t        }),\n\t        title: L.drawLocal.edit.toolbar.buttons.remove\n\t      }];\n\t    },\n\t\n\t    getActions: function getActions(handler) {\n\t      var actions = [{\n\t        title: L.drawLocal.edit.toolbar.actions.save.title,\n\t        text: L.drawLocal.edit.toolbar.actions.save.text,\n\t        callback: this._save,\n\t        context: this\n\t      }, {\n\t        title: L.drawLocal.edit.toolbar.actions.cancel.title,\n\t        text: L.drawLocal.edit.toolbar.actions.cancel.text,\n\t        callback: this.disable,\n\t        context: this\n\t      }];\n\t\n\t      if (handler.removeAllLayers) {\n\t        actions.push({\n\t          title: L.drawLocal.edit.toolbar.actions.clearAll.title,\n\t          text: L.drawLocal.edit.toolbar.actions.clearAll.text,\n\t          callback: this._clearAllLayers,\n\t          context: this\n\t        });\n\t      }\n\t\n\t      return actions;\n\t    },\n\t\n\t    addToolbar: function addToolbar(map) {\n\t      var container = L.Toolbar.prototype.addToolbar.call(this, map);\n\t\n\t      this._checkDisabled();\n\t\n\t      this.options.featureGroup.on('layeradd layerremove', this._checkDisabled, this);\n\t\n\t      return container;\n\t    },\n\t\n\t    removeToolbar: function removeToolbar() {\n\t      this.options.featureGroup.off('layeradd layerremove', this._checkDisabled, this);\n\t\n\t      L.Toolbar.prototype.removeToolbar.call(this);\n\t    },\n\t\n\t    disable: function disable() {\n\t      if (!this.enabled()) {\n\t        return;\n\t      }\n\t\n\t      this._activeMode.handler.revertLayers();\n\t\n\t      L.Toolbar.prototype.disable.call(this);\n\t    },\n\t\n\t    _save: function _save() {\n\t      this._activeMode.handler.save();\n\t      if (this._activeMode) {\n\t        this._activeMode.handler.disable();\n\t      }\n\t    },\n\t\n\t    _clearAllLayers: function _clearAllLayers() {\n\t      this._activeMode.handler.removeAllLayers();\n\t      if (this._activeMode) {\n\t        this._activeMode.handler.disable();\n\t      }\n\t    },\n\t\n\t    _checkDisabled: function _checkDisabled() {\n\t      var featureGroup = this.options.featureGroup,\n\t          hasLayers = featureGroup.getLayers().length !== 0,\n\t          button;\n\t\n\t      if (this.options.edit) {\n\t        button = this._modes[L.EditToolbar.Edit.TYPE].button;\n\t\n\t        if (hasLayers) {\n\t          L.DomUtil.removeClass(button, 'leaflet-disabled');\n\t        } else {\n\t          L.DomUtil.addClass(button, 'leaflet-disabled');\n\t        }\n\t\n\t        button.setAttribute('title', hasLayers ? L.drawLocal.edit.toolbar.buttons.edit : L.drawLocal.edit.toolbar.buttons.editDisabled);\n\t      }\n\t\n\t      if (this.options.remove) {\n\t        button = this._modes[L.EditToolbar.Delete.TYPE].button;\n\t\n\t        if (hasLayers) {\n\t          L.DomUtil.removeClass(button, 'leaflet-disabled');\n\t        } else {\n\t          L.DomUtil.addClass(button, 'leaflet-disabled');\n\t        }\n\t\n\t        button.setAttribute('title', hasLayers ? L.drawLocal.edit.toolbar.buttons.remove : L.drawLocal.edit.toolbar.buttons.removeDisabled);\n\t      }\n\t    }\n\t  });\n\t\n\t  L.EditToolbar.Edit = L.Handler.extend({\n\t    statics: {\n\t      TYPE: 'edit'\n\t    },\n\t\n\t    initialize: function initialize(map, options) {\n\t      L.Handler.prototype.initialize.call(this, map);\n\t\n\t      L.setOptions(this, options);\n\t\n\t      this._featureGroup = options.featureGroup;\n\t\n\t      if (!(this._featureGroup instanceof L.FeatureGroup)) {\n\t        throw new Error('options.featureGroup must be a L.FeatureGroup');\n\t      }\n\t\n\t      this._uneditedLayerProps = {};\n\t\n\t      this.type = L.EditToolbar.Edit.TYPE;\n\t\n\t      var version = L.version.split('.');\n\t\n\t      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n\t        L.EditToolbar.Edit.include(L.Evented.prototype);\n\t      } else {\n\t        L.EditToolbar.Edit.include(L.Mixin.Events);\n\t      }\n\t    },\n\t\n\t    enable: function enable() {\n\t      if (this._enabled || !this._hasAvailableLayers()) {\n\t        return;\n\t      }\n\t      this.fire('enabled', {\n\t        handler: this.type\n\t      });\n\t\n\t\n\t      this._map.fire(L.Draw.Event.EDITSTART, {\n\t        handler: this.type\n\t      });\n\t\n\t\n\t      L.Handler.prototype.enable.call(this);\n\t      this._featureGroup.on('layeradd', this._enableLayerEdit, this).on('layerremove', this._disableLayerEdit, this);\n\t    },\n\t\n\t    disable: function disable() {\n\t      if (!this._enabled) {\n\t        return;\n\t      }\n\t      this._featureGroup.off('layeradd', this._enableLayerEdit, this).off('layerremove', this._disableLayerEdit, this);\n\t      L.Handler.prototype.disable.call(this);\n\t      this._map.fire(L.Draw.Event.EDITSTOP, {\n\t        handler: this.type\n\t      });\n\t      this.fire('disabled', {\n\t        handler: this.type\n\t      });\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      var map = this._map;\n\t\n\t      if (map) {\n\t        map.getContainer().focus();\n\t\n\t        this._featureGroup.eachLayer(this._enableLayerEdit, this);\n\t\n\t        this._tooltip = new L.Draw.Tooltip(this._map);\n\t        this._tooltip.updateContent({\n\t          text: L.drawLocal.edit.handlers.edit.tooltip.text,\n\t          subtext: L.drawLocal.edit.handlers.edit.tooltip.subtext\n\t        });\n\t\n\t        map._editTooltip = this._tooltip;\n\t\n\t        this._updateTooltip();\n\t\n\t        this._map.on('mousemove', this._onMouseMove, this).on('touchmove', this._onMouseMove, this).on('MSPointerMove', this._onMouseMove, this).on(L.Draw.Event.EDITVERTEX, this._updateTooltip, this);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      if (this._map) {\n\t        this._featureGroup.eachLayer(this._disableLayerEdit, this);\n\t\n\t        this._uneditedLayerProps = {};\n\t\n\t        this._tooltip.dispose();\n\t        this._tooltip = null;\n\t\n\t        this._map.off('mousemove', this._onMouseMove, this).off('touchmove', this._onMouseMove, this).off('MSPointerMove', this._onMouseMove, this).off(L.Draw.Event.EDITVERTEX, this._updateTooltip, this);\n\t      }\n\t    },\n\t\n\t    revertLayers: function revertLayers() {\n\t      this._featureGroup.eachLayer(function (layer) {\n\t        this._revertLayer(layer);\n\t      }, this);\n\t    },\n\t\n\t    save: function save() {\n\t      var editedLayers = new L.LayerGroup();\n\t      this._featureGroup.eachLayer(function (layer) {\n\t        if (layer.edited) {\n\t          editedLayers.addLayer(layer);\n\t          layer.edited = false;\n\t        }\n\t      });\n\t      this._map.fire(L.Draw.Event.EDITED, {\n\t        layers: editedLayers\n\t      });\n\t    },\n\t\n\t    _backupLayer: function _backupLayer(layer) {\n\t      var id = L.Util.stamp(layer);\n\t\n\t      if (!this._uneditedLayerProps[id]) {\n\t        if (layer instanceof L.Polyline || layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n\t          this._uneditedLayerProps[id] = {\n\t            latlngs: L.LatLngUtil.cloneLatLngs(layer.getLatLngs())\n\t          };\n\t        } else if (layer instanceof L.Circle) {\n\t          this._uneditedLayerProps[id] = {\n\t            latlng: L.LatLngUtil.cloneLatLng(layer.getLatLng()),\n\t            radius: layer.getRadius()\n\t          };\n\t        } else if (layer instanceof L.Marker || layer instanceof L.CircleMarker) {\n\t          this._uneditedLayerProps[id] = {\n\t            latlng: L.LatLngUtil.cloneLatLng(layer.getLatLng())\n\t          };\n\t        }\n\t      }\n\t    },\n\t\n\t    _getTooltipText: function _getTooltipText() {\n\t      return {\n\t        text: L.drawLocal.edit.handlers.edit.tooltip.text,\n\t        subtext: L.drawLocal.edit.handlers.edit.tooltip.subtext\n\t      };\n\t    },\n\t\n\t    _updateTooltip: function _updateTooltip() {\n\t      this._tooltip.updateContent(this._getTooltipText());\n\t    },\n\t\n\t    _revertLayer: function _revertLayer(layer) {\n\t      var id = L.Util.stamp(layer);\n\t      layer.edited = false;\n\t      if (this._uneditedLayerProps.hasOwnProperty(id)) {\n\t        if (layer instanceof L.Polyline || layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n\t          layer.setLatLngs(this._uneditedLayerProps[id].latlngs);\n\t        } else if (layer instanceof L.Circle) {\n\t          layer.setLatLng(this._uneditedLayerProps[id].latlng);\n\t          layer.setRadius(this._uneditedLayerProps[id].radius);\n\t        } else if (layer instanceof L.Marker || layer instanceof L.CircleMarker) {\n\t          layer.setLatLng(this._uneditedLayerProps[id].latlng);\n\t        }\n\t\n\t        layer.fire('revert-edited', {\n\t          layer: layer\n\t        });\n\t      }\n\t    },\n\t\n\t    _enableLayerEdit: function _enableLayerEdit(e) {\n\t      var layer = e.layer || e.target || e,\n\t          pathOptions,\n\t          poly;\n\t\n\t      this._backupLayer(layer);\n\t\n\t      if (this.options.poly) {\n\t        poly = L.Util.extend({}, this.options.poly);\n\t        layer.options.poly = poly;\n\t      }\n\t\n\t      if (this.options.selectedPathOptions) {\n\t        pathOptions = L.Util.extend({}, this.options.selectedPathOptions);\n\t\n\t        if (pathOptions.maintainColor) {\n\t          pathOptions.color = layer.options.color;\n\t          pathOptions.fillColor = layer.options.fillColor;\n\t        }\n\t\n\t        layer.options.original = L.extend({}, layer.options);\n\t        layer.options.editing = pathOptions;\n\t      }\n\t\n\t      if (layer instanceof L.Marker) {\n\t        if (layer.editing) {\n\t          layer.editing.enable();\n\t        }\n\t        layer.dragging.enable();\n\t        layer.on('dragend', this._onMarkerDragEnd).on('touchmove', this._onTouchMove, this).on('MSPointerMove', this._onTouchMove, this).on('touchend', this._onMarkerDragEnd, this).on('MSPointerUp', this._onMarkerDragEnd, this);\n\t      } else {\n\t        layer.editing.enable();\n\t      }\n\t    },\n\t\n\t    _disableLayerEdit: function _disableLayerEdit(e) {\n\t      var layer = e.layer || e.target || e;\n\t\n\t      layer.edited = false;\n\t      if (layer.editing) {\n\t        layer.editing.disable();\n\t      }\n\t\n\t      delete layer.options.editing;\n\t      delete layer.options.original;\n\t\n\t      if (this._selectedPathOptions) {\n\t        if (layer instanceof L.Marker) {\n\t          this._toggleMarkerHighlight(layer);\n\t        } else {\n\t          layer.setStyle(layer.options.previousOptions);\n\t\n\t          delete layer.options.previousOptions;\n\t        }\n\t      }\n\t\n\t      if (layer instanceof L.Marker) {\n\t        layer.dragging.disable();\n\t        layer.off('dragend', this._onMarkerDragEnd, this).off('touchmove', this._onTouchMove, this).off('MSPointerMove', this._onTouchMove, this).off('touchend', this._onMarkerDragEnd, this).off('MSPointerUp', this._onMarkerDragEnd, this);\n\t      } else {\n\t        layer.editing.disable();\n\t      }\n\t    },\n\t\n\t    _onMouseMove: function _onMouseMove(e) {\n\t      this._tooltip.updatePosition(e.latlng);\n\t    },\n\t\n\t    _onMarkerDragEnd: function _onMarkerDragEnd(e) {\n\t      var layer = e.target;\n\t      layer.edited = true;\n\t      this._map.fire(L.Draw.Event.EDITMOVE, {\n\t        layer: layer\n\t      });\n\t    },\n\t\n\t    _onTouchMove: function _onTouchMove(e) {\n\t      var touchEvent = e.originalEvent.changedTouches[0],\n\t          layerPoint = this._map.mouseEventToLayerPoint(touchEvent),\n\t          latlng = this._map.layerPointToLatLng(layerPoint);\n\t      e.target.setLatLng(latlng);\n\t    },\n\t\n\t    _hasAvailableLayers: function _hasAvailableLayers() {\n\t      return this._featureGroup.getLayers().length !== 0;\n\t    }\n\t  });\n\t\n\t  L.EditToolbar.Delete = L.Handler.extend({\n\t    statics: {\n\t      TYPE: 'remove' },\n\t\n\t    initialize: function initialize(map, options) {\n\t      L.Handler.prototype.initialize.call(this, map);\n\t\n\t      L.Util.setOptions(this, options);\n\t\n\t      this._deletableLayers = this.options.featureGroup;\n\t\n\t      if (!(this._deletableLayers instanceof L.FeatureGroup)) {\n\t        throw new Error('options.featureGroup must be a L.FeatureGroup');\n\t      }\n\t\n\t      this.type = L.EditToolbar.Delete.TYPE;\n\t\n\t      var version = L.version.split('.');\n\t\n\t      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n\t        L.EditToolbar.Delete.include(L.Evented.prototype);\n\t      } else {\n\t        L.EditToolbar.Delete.include(L.Mixin.Events);\n\t      }\n\t    },\n\t\n\t    enable: function enable() {\n\t      if (this._enabled || !this._hasAvailableLayers()) {\n\t        return;\n\t      }\n\t      this.fire('enabled', {\n\t        handler: this.type\n\t      });\n\t\n\t      this._map.fire(L.Draw.Event.DELETESTART, {\n\t        handler: this.type\n\t      });\n\t\n\t      L.Handler.prototype.enable.call(this);\n\t\n\t      this._deletableLayers.on('layeradd', this._enableLayerDelete, this).on('layerremove', this._disableLayerDelete, this);\n\t    },\n\t\n\t    disable: function disable() {\n\t      if (!this._enabled) {\n\t        return;\n\t      }\n\t\n\t      this._deletableLayers.off('layeradd', this._enableLayerDelete, this).off('layerremove', this._disableLayerDelete, this);\n\t\n\t      L.Handler.prototype.disable.call(this);\n\t\n\t      this._map.fire(L.Draw.Event.DELETESTOP, {\n\t        handler: this.type\n\t      });\n\t\n\t      this.fire('disabled', {\n\t        handler: this.type\n\t      });\n\t    },\n\t\n\t    addHooks: function addHooks() {\n\t      var map = this._map;\n\t\n\t      if (map) {\n\t        map.getContainer().focus();\n\t\n\t        this._deletableLayers.eachLayer(this._enableLayerDelete, this);\n\t        this._deletedLayers = new L.LayerGroup();\n\t\n\t        this._tooltip = new L.Draw.Tooltip(this._map);\n\t        this._tooltip.updateContent({\n\t          text: L.drawLocal.edit.handlers.remove.tooltip.text\n\t        });\n\t\n\t        this._map.on('mousemove', this._onMouseMove, this);\n\t      }\n\t    },\n\t\n\t    removeHooks: function removeHooks() {\n\t      if (this._map) {\n\t        this._deletableLayers.eachLayer(this._disableLayerDelete, this);\n\t        this._deletedLayers = null;\n\t\n\t        this._tooltip.dispose();\n\t        this._tooltip = null;\n\t\n\t        this._map.off('mousemove', this._onMouseMove, this);\n\t      }\n\t    },\n\t\n\t    revertLayers: function revertLayers() {\n\t      this._deletedLayers.eachLayer(function (layer) {\n\t        this._deletableLayers.addLayer(layer);\n\t        layer.fire('revert-deleted', {\n\t          layer: layer\n\t        });\n\t      }, this);\n\t    },\n\t\n\t    save: function save() {\n\t      this._map.fire(L.Draw.Event.DELETED, {\n\t        layers: this._deletedLayers\n\t      });\n\t    },\n\t\n\t    removeAllLayers: function removeAllLayers() {\n\t      this._deletableLayers.eachLayer(function (layer) {\n\t        this._removeLayer({\n\t          layer: layer\n\t        });\n\t      }, this);\n\t      this.save();\n\t    },\n\t\n\t    _enableLayerDelete: function _enableLayerDelete(e) {\n\t      var layer = e.layer || e.target || e;\n\t\n\t      layer.on('click', this._removeLayer, this);\n\t    },\n\t\n\t    _disableLayerDelete: function _disableLayerDelete(e) {\n\t      var layer = e.layer || e.target || e;\n\t\n\t      layer.off('click', this._removeLayer, this);\n\t\n\t      this._deletedLayers.removeLayer(layer);\n\t    },\n\t\n\t    _removeLayer: function _removeLayer(e) {\n\t      var layer = e.layer || e.target || e;\n\t\n\t      this._deletableLayers.removeLayer(layer);\n\t\n\t      this._deletedLayers.addLayer(layer);\n\t\n\t      layer.fire('deleted');\n\t    },\n\t\n\t    _onMouseMove: function _onMouseMove(e) {\n\t      this._tooltip.updatePosition(e.latlng);\n\t    },\n\t\n\t    _hasAvailableLayers: function _hasAvailableLayers() {\n\t      return this._deletableLayers.getLayers().length !== 0;\n\t    }\n\t  });\n\t})(window, document);\n\n/***/ }),\n\n/***/ 103:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tL.drawLocal = {\n\t  draw: {\n\t    toolbar: {\n\t      actions: {\n\t        title: \"Annulla disegno\",\n\t        text: \"Annulla\"\n\t      },\n\t      finish: {\n\t        title: \"Termina disegno\",\n\t        text: \"Termina\"\n\t      },\n\t      undo: {\n\t        title: \"Cancella ultimo punto\",\n\t        text: \"Cancella ultimo punto\"\n\t      },\n\t      buttons: {\n\t        polyline: \"Disegna linea\",\n\t        polygon: \"Disegna poligono\",\n\t        rectangle: \"Disegna rettangolo\",\n\t        circle: \"Disegna cerchio\",\n\t        marker: \"Disegna punto\",\n\t        circlemarker: \"Disegna punto\"\n\t      }\n\t    },\n\t    handlers: {\n\t      circle: {\n\t        tooltip: {\n\t          start: \"Seleziona e trascina per disegnare il cerchio.\"\n\t        },\n\t        radius: \"Radius\"\n\t      },\n\t      circlemarker: {\n\t        tooltip: {\n\t          start: \"Seleziona la mappa per disegnare il punto.\"\n\t        }\n\t      },\n\t      marker: {\n\t        tooltip: {\n\t          start: \"Seleziona la mappa per disegnare il punto.\"\n\t        }\n\t      },\n\t      polygon: {\n\t        tooltip: {\n\t          start: \"Seleziona per iniziare il disegno del poligono.\",\n\t          cont: \"Seleziona per continuare il disegno del poligono.\",\n\t          end: \"Seleziona il primo vertice oppure effettua <br>un doppio click per completare il poligono.\"\n\t        }\n\t      },\n\t      polyline: {\n\t        error: \"<strong>Errore:</strong> intersezione non ammessa!\",\n\t        tooltip: {\n\t          start: \"Seleziona per iniziare il disegno della linea.\",\n\t          cont: \"Seleziona per continuare o doppio click per completare la linea.\",\n\t          end: \"Seleziona per continuare o doppio click per completare la linea.\"\n\t        }\n\t      },\n\t      rectangle: {\n\t        tooltip: {\n\t          start: \"Seleziona e trascina per disegnare il rettangolo.\"\n\t        }\n\t      },\n\t      simpleshape: {\n\t        tooltip: {\n\t          end: \"Rilascia il bottone del mouse per terminare il disegno.\"\n\t        }\n\t      }\n\t    }\n\t  },\n\t  edit: {\n\t    toolbar: {\n\t      actions: {\n\t        save: {\n\t          title: \"Salva i cambiamenti\",\n\t          text: \"Salva\"\n\t        },\n\t        cancel: {\n\t          title: \"Annulla modifiche\",\n\t          text: \"Annulla\"\n\t        },\n\t        clearAll: {\n\t          title: \"Cancella tutte le geometrie\",\n\t          text: \"Cancella Tutto\"\n\t        }\n\t      },\n\t      buttons: {\n\t        edit: \"Modifica Geometrie\",\n\t        editDisabled: \"Nessuna geometria da modificare\",\n\t        remove: \"Cancella Geometrie\",\n\t        removeDisabled: \"Nessuna geometria da cacellare\"\n\t      }\n\t    },\n\t    handlers: {\n\t      edit: {\n\t        tooltip: {\n\t          text: \"Trascina il punto o i vertici per modificare le geometrie.\",\n\t          subtext: 'Seleziona \"Annulla\" per annulare le modifiche.'\n\t        }\n\t      },\n\t      remove: {\n\t        tooltip: {\n\t          text: \"Seleziona una geometria per rimuoverla.\"\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 274:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _button = __webpack_require__(9);\n\t\n\tvar _button2 = _interopRequireDefault(_button);\n\t\n\tvar _base = __webpack_require__(6);\n\t\n\tvar _base2 = _interopRequireDefault(_base);\n\t\n\tvar _button3 = __webpack_require__(8);\n\t\n\tvar _button4 = _interopRequireDefault(_button3);\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _getCoordTransform = __webpack_require__(60);\n\t\n\tvar _getCoordTransform2 = _interopRequireDefault(_getCoordTransform);\n\t\n\tvar _getElevation = __webpack_require__(331);\n\t\n\tvar _getElevation2 = _interopRequireDefault(_getElevation);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t__webpack_require__(102);\n\t__webpack_require__(103);\n\t\n\t_vue2.default.use(_button4.default);\n\t\n\texports.default = {\n\t  name: 'gv-coordinate-panel',\n\t  data: function data() {\n\t    var options = GV.config.getToolOptions(\"gv-measure-button\");\n\t\n\t    return {\n\t      options: options,\n\t      title: options.title || \"Misurazioni\",\n\t      buttonDisabled: true,\n\t      pointClass: 'el-button--default el-button--mini el-button gv-color-scheme ms ms-select-hand',\n\t      lineClass: 'el-button--default el-button--mini el-button gv-color-scheme ms ms-measure-distance',\n\t      areaClass: 'el-button--default el-button--mini el-button gv-color-scheme ms ms-measure-area',\n\t      activeHandler: null,\n\t      layer: null,\n\t      type: null,\n\t      resultPointWGS84: null,\n\t      resultPointGB: null,\n\t      resultPointHeight: null,\n\t      resultPointETRF89: null,\n\t      resultLine: null,\n\t      resultArea: 0,\n\t      showInfo: true,\n\t      showInfoPoint: false,\n\t      showInfoLine: false,\n\t      showInfoArea: false,\n\t      showResultPoint: false,\n\t      showResultLine: false,\n\t      showResultArea: false,\n\t      pointHandler: new L.Draw.Marker(GV.app.map, {\n\t        icon: L.icon({\n\t          iconUrl: '/geoservices/apps/viewer/dist/static/img/marker-icon.png',\n\t          iconSize: [12, 20],\n\t          iconAnchor: [6, 20]\n\t        })\n\t      }),\n\t      lineHandler: new L.Draw.Polyline(GV.app.map, {\n\t        shapeOptions: {\n\t          color: '#FF9900'\n\t        }\n\t      }),\n\t      areaHandler: new L.Draw.Polygon(GV.app.map, {\n\t        allowIntersection: false,\n\t        showArea: true,\n\t        metric: true,\n\t        shapeOptions: {\n\t          color: '#FF9900'\n\t        }\n\t      })\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    measurePoint: function measurePoint() {\n\t      this.clear();\n\t      this.setClass('point');\n\t      this.pointHandler.enable();\n\t    },\n\t    measureLine: function measureLine() {\n\t      this.clear();\n\t      this.setClass('line');\n\t      this.lineHandler.enable();\n\t    },\n\t    measureArea: function measureArea() {\n\t      this.clear();\n\t      this.setClass('area');\n\t      this.areaHandler.enable();\n\t    },\n\t    setClass: function setClass(type) {\n\t      document.getElementById('gv-measure-point').className = this.pointClass;\n\t      document.getElementById('gv-measure-line').className = this.lineClass;\n\t      document.getElementById('gv-measure-area').className = this.areaClass;\n\t      this.showInfo = type ? false : true;\n\t      switch (type) {\n\t        case 'point':\n\t          document.getElementById('gv-measure-point').className = this.pointClass + ' gv-button-selected';\n\t          this.showInfoPoint = true;\n\t          break;\n\t        case 'line':\n\t          document.getElementById('gv-measure-line').className = this.lineClass + ' gv-button-selected';\n\t          this.showInfoLine = true;\n\t          break;\n\t        case 'area':\n\t          document.getElementById('gv-measure-area').className = this.areaClass + ' gv-button-selected';\n\t          this.showInfoArea = true;\n\t          break;\n\t      }\n\t    },\n\t    clear: function clear() {\n\t      this.pointHandler.disable();\n\t      this.lineHandler.disable();\n\t      this.areaHandler.disable();\n\t\n\t      this.showInfoPoint = false;\n\t      this.showInfoLine = false;\n\t      this.showInfoArea = false;\n\t\n\t      this.showResultPoint = false;\n\t      this.showResultLine = false;\n\t      this.showResultArea = false;\n\t\n\t      this.resultPointWGS84 = null;\n\t      this.resultPointGB = null;\n\t      this.resultPointETRF89 = null;\n\t      this.resultLine = null;\n\t      this.resultArea = null;\n\t\n\t      this.setClass(null);\n\t      if (this.layer) {\n\t        GV.app.map.removeLayer(this.layer);\n\t      }\n\t    },\n\t    handleMarker: function handleMarker(latlng) {\n\t      var _this = this;\n\t\n\t      this.resultPointHeight = null;\n\t      this.resultPointWGS84 = latlng.lng.toFixed(6) + ',' + latlng.lat.toFixed(6);\n\t      (0, _getCoordTransform2.default)('4326', '3003', latlng.lng, latlng.lat).then(function (response) {\n\t        if (response.data.points) {\n\t          var coords = response.data.points[0].split(',');\n\t          _this.resultPointGB = parseInt(coords[0]) + ',' + parseInt(coords[1]);\n\t        }\n\t      });\n\t      (0, _getCoordTransform2.default)('4326', '25832', latlng.lng, latlng.lat).then(function (response) {\n\t        if (response.data.points) {\n\t          var coords = response.data.points[0].split(',');\n\t          _this.resultPointETRF89 = parseInt(coords[0]) + ',' + parseInt(coords[1]);\n\t        }\n\t      });\n\t      (0, _getElevation2.default)('4326', latlng.lng, latlng.lat).then(function (response) {\n\t        if (response.data.status === \"OK\" && response.data.elevation) {\n\t          _this.resultPointHeight = response.data.elevation[0];\n\t        } else {\n\t          _this.resultPointHeight = null;\n\t        }\n\t      });\n\t      this.showResultPoint = true;\n\t    },\n\t    handleLine: function handleLine(data) {\n\t      var length = parseInt(this.lineHandler._measurementRunningTotal);\n\t      if (length < 1000) {\n\t        this.resultLine = length + ' m';\n\t      } else {\n\t        this.resultLine = length / 1000 + ' km';\n\t      }\n\t      this.showResultLine = true;\n\t    },\n\t    handleArea: function handleArea(data) {\n\t\n\t      this.resultArea = parseInt(this.areaHandler._area);\n\t      this.showResultArea = true;\n\t    },\n\t    drawCreated: function drawCreated(e) {\n\t      this.type = e.layerType;\n\t      this.layer = e.layer;\n\t      this.layer.addTo(GV.app.map);\n\t\n\t      switch (this.type) {\n\t        case 'marker':\n\t          this.handleMarker(this.layer.editing._marker._latlng);\n\t          break;\n\t        case 'polyline':\n\t          this.handleLine(this.layer.editing);\n\t          break;\n\t        case 'polygon':\n\t          this.handleArea(this.layer.editing);\n\t          break;\n\t      }\n\t    }\n\t  },\n\t  mounted: function mounted() {\n\t    var _this2 = this;\n\t\n\t    GV.eventBus.$on(\"gv-control-measure-activate\", function (ev) {\n\t      GV.app.map.on(\"draw:created\", function (e) {\n\t        _this2.drawCreated(e);\n\t      });\n\t    });\n\t    GV.eventBus.$on('gv-control-measure-deactivate', function (ev) {\n\t      _this2.clear();\n\t      GV.app.map.off('draw:created');\n\t    });\n\t    GV.app.map.on('draw:created', function (e) {\n\t      _this2.drawCreated(e);\n\t    });\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 331:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getElevation;\n\t\n\tvar _axios = __webpack_require__(4);\n\t\n\tvar _axios2 = _interopRequireDefault(_axios);\n\t\n\tvar _globals = __webpack_require__(5);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction getElevation(srs, x, y) {\n\t  var url = '' + _globals2.default.RL_ELEVATION + srs + '/' + x + ',' + y;\n\t  return _axios2.default.get(url, {});\n\t}\n\n/***/ }),\n\n/***/ 456:\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".gv-measure-panel{position:absolute;width:350px;left:0;top:0;margin-left:10px;margin-top:50px;z-index:800}.gv-measure-panel-body{position:absolute;padding:10px;overflow-y:auto;width:330px;height:200px}.gv-measure-panel-result{position:absolute;background-color:#fff;padding-left:15px;padding-top:5px;padding-bottom:5px;margin:0;margin-top:10px;width:310px}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/Measure.vue\"],\"names\":[],\"mappings\":\"AACA,kBACE,kBAAmB,AACnB,YAAa,AACb,OAAU,AACV,MAAS,AACT,iBAAkB,AAClB,gBAAiB,AACjB,WAAa,CACd,AACD,uBACE,kBAAmB,AACnB,aAAc,AACd,gBAAiB,AACjB,YAAa,AACb,YAAc,CACf,AACD,yBACE,kBAAmB,AACnB,sBAAuB,AACvB,kBAAmB,AACnB,gBAAiB,AACjB,mBAAoB,AACpB,SAAY,AACZ,gBAAiB,AACjB,WAAa,CACd\",\"file\":\"Measure.vue\",\"sourcesContent\":[\"\\n.gv-measure-panel {\\r\\n  position: absolute;\\r\\n  width: 350px;\\r\\n  left: 0px;\\r\\n  top: 0px;\\r\\n  margin-left: 10px;\\r\\n  margin-top: 50px;\\r\\n  z-index: 800;\\n}\\n.gv-measure-panel-body {\\r\\n  position: absolute;\\r\\n  padding: 10px;\\r\\n  overflow-y: auto;\\r\\n  width: 330px;\\r\\n  height: 200px;\\n}\\n.gv-measure-panel-result {\\r\\n  position: absolute;\\r\\n  background-color: #fff;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 5px;\\r\\n  padding-bottom: 5px;\\r\\n  margin: 0px;\\r\\n  margin-top: 10px;\\r\\n  width: 310px;\\n}\\r\\n\\r\\n/* .gv-measure-panel-body span {\\r\\n  background-color: #fff;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 5px;\\r\\n  margin: 0px;\\r\\n} */\\r\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ }),\n\n/***/ 570:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(456);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Measure.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Measure.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n\n/***/ 655:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(570)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(274)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(756)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ }),\n\n/***/ 756:\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('div', {\n\t    staticClass: \"gv-measure-panel\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel\"\n\t    }\n\t  }, [_vm._c('gv-title', {\n\t    attrs: {\n\t      \"title\": _vm.title,\n\t      \"divId\": 'gv-measure-panel',\n\t      \"noClose\": true\n\t    }\n\t  }), _vm._v(\" \"), _vm._c('div', {\n\t    staticClass: \"gv-measure-panel-body gv-inverted-color-scheme\"\n\t  }, [_vm._c('el-button', {\n\t    staticClass: \"gv-color-scheme ms ms-select-hand\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-point\",\n\t      \"title\": \"Misure Puntuali (Coordinate)\",\n\t      \"size\": \"mini\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.measurePoint\n\t    }\n\t  }), _vm._v(\" \"), _vm._c('el-button', {\n\t    staticClass: \"gv-color-scheme ms ms-measure-distance\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-line\",\n\t      \"title\": \"Misure Lineari\",\n\t      \"size\": \"mini\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.measureLine\n\t    }\n\t  }), _vm._v(\" \"), _vm._c('el-button', {\n\t    staticClass: \"gv-color-scheme ms ms-measure-area\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-area\",\n\t      \"title\": \"Misure Areali\",\n\t      \"size\": \"mini\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.measureArea\n\t    }\n\t  }), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showInfo),\n\t      expression: \"showInfo\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-info\"\n\t    }\n\t  }, [_vm._m(0), _vm._v(\" \"), _vm._c('table', {\n\t    attrs: {\n\t      \"width\": \"90%\"\n\t    }\n\t  }, [_vm._c('tr', [_vm._c('td', [_vm._c('el-button', {\n\t    staticClass: \"gv-color-scheme ms ms-select-hand\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-point\",\n\t      \"title\": \"Misure Puntuali (Coordinate)\",\n\t      \"size\": \"mini\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.measurePoint\n\t    }\n\t  }), _vm._v(\" Misure Puntuali (Coordinate)\\n              \")], 1)]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._c('el-button', {\n\t    staticClass: \"gv-color-scheme ms ms-measure-distance\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-line\",\n\t      \"title\": \"Misure Lineari\",\n\t      \"size\": \"mini\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.measureLine\n\t    }\n\t  }), _vm._v(\" Misure Lineari (Lunghezza)\\n              \")], 1)]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._c('el-button', {\n\t    staticClass: \"gv-color-scheme ms ms-measure-area\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-area\",\n\t      \"title\": \"Misure Areali\",\n\t      \"size\": \"mini\"\n\t    },\n\t    on: {\n\t      \"click\": _vm.measureArea\n\t    }\n\t  }), _vm._v(\" Misure Poligonali (Aree)\\n              \")], 1)])]), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showInfoPoint),\n\t      expression: \"showInfoPoint\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-info\"\n\t    }\n\t  }, [_vm._m(1), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showInfoLine),\n\t      expression: \"showInfoLine\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-info\"\n\t    }\n\t  }, [_vm._m(2), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showInfoArea),\n\t      expression: \"showInfoArea\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-info\"\n\t    }\n\t  }, [_vm._m(3), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showResultPoint),\n\t      expression: \"showResultPoint\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-result-point\"\n\t    }\n\t  }, [_vm._c('p', [_vm._v(\"Coordinate:\")]), _vm._v(\" \"), _vm._c('p', [_vm._c('table', {\n\t    attrs: {\n\t      \"width\": \"90%\"\n\t    }\n\t  }, [_vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                WGS84\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointWGS84) + \"\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                GAUSS-BOAGA\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointGB) + \"\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                ETRS89/UTM32N\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointETRF89) + \"\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                QUOTA\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointHeight) + \"\\n              \")])])])])]), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showResultLine),\n\t      expression: \"showResultLine\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-result-line\"\n\t    }\n\t  }, [_vm._m(4), _vm._v(\" \"), _vm._c('table', {\n\t    attrs: {\n\t      \"width\": \"90%\"\n\t    }\n\t  }, [_vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultLine) + \" \\n              \")])])]), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showResultArea),\n\t      expression: \"showResultArea\"\n\t    }],\n\t    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n\t    attrs: {\n\t      \"id\": \"gv-measure-panel-result-area\"\n\t    }\n\t  }, [_vm._m(5), _vm._v(\" \"), _vm._c('p', [_vm._c('table', {\n\t    attrs: {\n\t      \"width\": \"90%\"\n\t    }\n\t  }, [_vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultArea / 10000) + \" ha\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultArea) + \" m\"), _vm._c('SUP', [_vm._v(\"2\")])], 1)]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultArea / 1000000) + \" km\"), _vm._c('SUP', [_vm._v(\"2\")])], 1)])])])])], 1)], 1)\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('p', [_vm._v(\"Seleziona il bottone relativo\"), _vm._c('br')])\n\t},function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('p', [_vm._v(\"Disegna il punto sulla mappa\"), _vm._c('br')])\n\t},function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('p', [_vm._v(\"Disegna la linea sulla mappa\"), _vm._c('br')])\n\t},function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('p', [_vm._v(\"Disegna il poligono sulla mappa\"), _vm._c('br')])\n\t},function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('p', [_vm._v(\"Lunghezza:\"), _vm._c('br')])\n\t},function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _vm._c('p', [_vm._c('span', [_vm._v(\"Area:\")])])\n\t}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/13.js","/*\n Leaflet.draw 0.4.14, a plugin that adds drawing and editing tools to Leaflet powered maps.\n (c) 2012-2017, Jacob Toye, Jon West, Smartrak, Leaflet\n\n https://github.com/Leaflet/Leaflet.draw\n http://leafletjs.com\n */\n(function(window, document, undefined) {\n  /**\n   * Leaflet.draw assumes that you have already included the Leaflet library.\n   */\n  L.drawVersion = '0.4.14';\n  /**\n   * @class L.Draw\n   * @aka Draw\n   *\n   *\n   * To add the draw toolbar set the option drawControl: true in the map options.\n   *\n   * @example\n   * ```js\n   *      var map = L.map('map', {drawControl: true}).setView([51.505, -0.09], 13);\n   *\n   *      L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n   *          attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n   *      }).addTo(map);\n   * ```\n   *\n   * ### Adding the edit toolbar\n   * To use the edit toolbar you must initialise the Leaflet.draw control and manually add it to the map.\n   *\n   * ```js\n   *      var map = L.map('map').setView([51.505, -0.09], 13);\n   *\n   *      L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n   *          attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n   *      }).addTo(map);\n   *\n   *      // FeatureGroup is to store editable layers\n   *      var drawnItems = new L.FeatureGroup();\n   *      map.addLayer(drawnItems);\n   *\n   *      var drawControl = new L.Control.Draw({\n   *          edit: {\n   *              featureGroup: drawnItems\n   *          }\n   *      });\n   *      map.addControl(drawControl);\n   * ```\n   *\n   * The key here is the featureGroup option. This tells the plugin which FeatureGroup contains the layers that\n   * should be editable. The featureGroup can contain 0 or more features with geometry types Point, LineString, and Polygon.\n   * Leaflet.draw does not work with multigeometry features such as MultiPoint, MultiLineString, MultiPolygon,\n   * or GeometryCollection. If you need to add multigeometry features to the draw plugin, convert them to a\n   * FeatureCollection of non-multigeometries (Points, LineStrings, or Polygons).\n   */\n  L.Draw = {};\n\n  /**\n   * @class L.drawLocal\n   * @aka L.drawLocal\n   *\n   * The core toolbar class of the API — it is used to create the toolbar ui\n   *\n   * @example\n   * ```js\n   *      var modifiedDraw = L.drawLocal.extend({\n   *          draw: {\n   *              toolbar: {\n   *                  buttons: {\n   *                      polygon: 'Draw an awesome polygon'\n   *                  }\n   *              }\n   *          }\n   *      });\n   * ```\n   *\n   * The default state for the control is the draw toolbar just below the zoom control.\n   *  This will allow map users to draw vectors and markers.\n   *  **Please note the edit toolbar is not enabled by default.**\n   */\n  // L.drawLocal = {\n  //   // format: {\n  //   // \tnumeric: {\n  //   // \t\tdelimiters: {\n  //   // \t\t\tthousands: ',',\n  //   // \t\t\tdecimal: '.'\n  //   // \t\t}\n  //   // \t}\n  //   // },\n  //   draw: {\n  //     toolbar: {\n  //       // #TODO: this should be reorganized where actions are nested in actions\n  //       // ex: actions.undo  or actions.cancel\n  //       actions: {\n  //         title: \"Annulla disegno\",\n  //         text: \"Annulla\"\n  //       },\n  //       finish: {\n  //         title: \"Termina disegno\",\n  //         text: \"Termina\"\n  //       },\n  //       undo: {\n  //         title: \"Cancella ultimo punto\",\n  //         text: \"Cancella ultimo punto\"\n  //       },\n  //       buttons: {\n  //         polyline: \"Disegna linea\",\n  //         polygon: \"Disegna poligono\",\n  //         rectangle: \"Disegna rettangolo\",\n  //         circle: \"Disegna cerchio\",\n  //         marker: \"Disegna punto\",\n  //         circlemarker: \"Disegna punto\"\n  //       }\n  //     },\n  //     handlers: {\n  //       circle: {\n  //         tooltip: {\n  //           start: \"Seleziona e trascina per disegnare il cerchio.\"\n  //         },\n  //         radius: \"Radius\"\n  //       },\n  //       circlemarker: {\n  //         tooltip: {\n  //           start: \"Seleziona la mappa per disegnare il punto.\"\n  //         }\n  //       },\n  //       marker: {\n  //         tooltip: {\n  //           start: \"Seleziona la mappa per disegnare il punto.\"\n  //         }\n  //       },\n  //       polygon: {\n  //         tooltip: {\n  //           start: \"Seleziona per iniziare il disegno del poligono.\",\n  //           cont: \"Seleziona per continuare il disegno del poligono.\",\n  //           end:\n  //             \"Seleziona il primo vertice oppure effettua <br>un doppio click per completare il poligono.\"\n  //         }\n  //       },\n  //       polyline: {\n  //         error: \"<strong>Errore:</strong> intersezione non ammessa!\",\n  //         tooltip: {\n  //           start: \"Seleziona per iniziare il disegno della linea.\",\n  //           cont:\n  //             \"Seleziona per continuare o doppio click per completare la linea.\",\n  //           end:\n  //             \"Seleziona per continuare o doppio click per completare la linea.\"\n  //         }\n  //       },\n  //       rectangle: {\n  //         tooltip: {\n  //           start: \"Seleziona e trascina per disegnare il rettangolo.\"\n  //         }\n  //       },\n  //       simpleshape: {\n  //         tooltip: {\n  //           end: \"Rilascia il bottone del mouse per terminare il disegno.\"\n  //         }\n  //       }\n  //     }\n  //   },\n  //   edit: {\n  //     toolbar: {\n  //       actions: {\n  //         save: {\n  //           title: \"Salva i cambiamenti\",\n  //           text: \"Salva\"\n  //         },\n  //         cancel: {\n  //           title: \"Annulla modifiche\",\n  //           text: \"Annulla\"\n  //         },\n  //         clearAll: {\n  //           title: \"Cancella tutte le geometrie\",\n  //           text: \"Cancella Tutto\"\n  //         }\n  //       },\n  //       buttons: {\n  //         edit: \"Modifica Geometrie\",\n  //         editDisabled: \"Nessuna geometria da modificare\",\n  //         remove: \"Cancella Geometrie\",\n  //         removeDisabled: \"Nessuna geometria da cacellare\"\n  //       }\n  //     },\n  //     handlers: {\n  //       edit: {\n  //         tooltip: {\n  //           text: \"Trascina il punto o i vertici per modificare le geometrie.\",\n  //           subtext: 'Seleziona \"Annulla\" per annulare le modifiche.'\n  //         }\n  //       },\n  //       remove: {\n  //         tooltip: {\n  //           text: \"Seleziona una geometria per rimuoverla.\"\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n\n  /**\n   * ### Events\n   * Once you have successfully added the Leaflet.draw plugin to your map you will want to respond to the different\n   * actions users can initiate. The following events will be triggered on the map:\n   *\n   * @class L.Draw.Event\n   * @aka Draw.Event\n   *\n   * Use `L.Draw.Event.EVENTNAME` constants to ensure events are correct.\n   *\n   * @example\n   * ```js\n   * map.on(L.Draw.Event.CREATED; function (e) {\n   *    var type = e.layerType,\n   *        layer = e.layer;\n   *\n   *    if (type === 'marker') {\n   *        // Do marker specific actions\n   *    }\n   *\n   *    // Do whatever else you need to. (save to db; add to map etc)\n   *    map.addLayer(layer);\n   *});\n   * ```\n   */\n  L.Draw.Event = {};\n  /**\n   * @event draw:created: PolyLine; Polygon; Rectangle; Circle; Marker | String\n   *\n   * Layer that was just created.\n   * The type of layer this is. One of: `polyline`; `polygon`; `rectangle`; `circle`; `marker`\n   * Triggered when a new vector or marker has been created.\n   *\n   */\n  L.Draw.Event.CREATED = 'draw:created';\n\n  /**\n   * @event draw:edited: LayerGroup\n   *\n   * List of all layers just edited on the map.\n   *\n   *\n   * Triggered when layers in the FeatureGroup; initialised with the plugin; have been edited and saved.\n   *\n   * @example\n   * ```js\n   *      map.on('draw:edited', function (e) {\n   *          var layers = e.layers;\n   *          layers.eachLayer(function (layer) {\n   *              //do whatever you want; most likely save back to db\n   *          });\n   *      });\n   * ```\n   */\n  L.Draw.Event.EDITED = 'draw:edited';\n\n  /**\n   * @event draw:deleted: LayerGroup\n   *\n   * List of all layers just removed from the map.\n   *\n   * Triggered when layers have been removed (and saved) from the FeatureGroup.\n   */\n  L.Draw.Event.DELETED = 'draw:deleted';\n\n  /**\n   * @event draw:drawstart: String\n   *\n   * The type of layer this is. One of:`polyline`; `polygon`; `rectangle`; `circle`; `marker`\n   *\n   * Triggered when the user has chosen to draw a particular vector or marker.\n   */\n  L.Draw.Event.DRAWSTART = 'draw:drawstart';\n\n  /**\n   * @event draw:drawstop: String\n   *\n   * The type of layer this is. One of: `polyline`; `polygon`; `rectangle`; `circle`; `marker`\n   *\n   * Triggered when the user has finished a particular vector or marker.\n   */\n\n  L.Draw.Event.DRAWSTOP = 'draw:drawstop';\n\n  /**\n   * @event draw:drawvertex: LayerGroup\n   *\n   * List of all layers just being added from the map.\n   *\n   * Triggered when a vertex is created on a polyline or polygon.\n   */\n  L.Draw.Event.DRAWVERTEX = 'draw:drawvertex';\n\n  /**\n   * @event draw:editstart: String\n   *\n   * The type of edit this is. One of: `edit`\n   *\n   * Triggered when the user starts edit mode by clicking the edit tool button.\n   */\n\n  L.Draw.Event.EDITSTART = 'draw:editstart';\n\n  /**\n   * @event draw:editmove: ILayer\n   *\n   *  Layer that was just moved.\n   *\n   * Triggered as the user moves a rectangle; circle or marker.\n   */\n  L.Draw.Event.EDITMOVE = 'draw:editmove';\n\n  /**\n   * @event draw:editresize: ILayer\n   *\n   * Layer that was just moved.\n   *\n   * Triggered as the user resizes a rectangle or circle.\n   */\n  L.Draw.Event.EDITRESIZE = 'draw:editresize';\n\n  /**\n   * @event draw:editvertex: LayerGroup\n   *\n   * List of all layers just being edited from the map.\n   *\n   * Triggered when a vertex is edited on a polyline or polygon.\n   */\n  L.Draw.Event.EDITVERTEX = 'draw:editvertex';\n\n  /**\n   * @event draw:editstop: String\n   *\n   * The type of edit this is. One of: `edit`\n   *\n   * Triggered when the user has finshed editing (edit mode) and saves edits.\n   */\n  L.Draw.Event.EDITSTOP = 'draw:editstop';\n\n  /**\n   * @event draw:deletestart: String\n   *\n   * The type of edit this is. One of: `remove`\n   *\n   * Triggered when the user starts remove mode by clicking the remove tool button.\n   */\n  L.Draw.Event.DELETESTART = 'draw:deletestart';\n\n  /**\n   * @event draw:deletestop: String\n   *\n   * The type of edit this is. One of: `remove`\n   *\n   * Triggered when the user has finished removing shapes (remove mode) and saves.\n   */\n  L.Draw.Event.DELETESTOP = 'draw:deletestop';\n\n  /**\n   * @event draw:toolbaropened: String\n   *\n   * Triggered when a toolbar is opened.\n   */\n  L.Draw.Event.TOOLBAROPENED = 'draw:toolbaropened';\n\n  /**\n   * @event draw:toolbarclosed: String\n   *\n   * Triggered when a toolbar is closed.\n   */\n  L.Draw.Event.TOOLBARCLOSED = 'draw:toolbarclosed';\n\n  /**\n   * @event draw:markercontext: String\n   *\n   * Triggered when a marker is right clicked.\n   */\n  L.Draw.Event.MARKERCONTEXT = 'draw:markercontext';\n\n  L.Draw = L.Draw || {};\n\n  /**\n   * @class L.Draw.Feature\n   * @aka Draw.Feature\n   */\n  L.Draw.Feature = L.Handler.extend({\n    // @method initialize(): void\n    initialize: function(map, options) {\n      this._map = map;\n      this._container = map._container;\n      this._overlayPane = map._panes.overlayPane;\n      this._popupPane = map._panes.popupPane;\n\n      // Merge default shapeOptions options with custom shapeOptions\n      if (options && options.shapeOptions) {\n        options.shapeOptions = L.Util.extend({}, this.options.shapeOptions, options.shapeOptions);\n      }\n      L.setOptions(this, options);\n\n      var version = L.version.split('.');\n      //If Version is >= 1.2.0\n      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n        L.Draw.Feature.include(L.Evented.prototype);\n      } else {\n        L.Draw.Feature.include(L.Mixin.Events);\n      }\n    },\n\n    // @method enable(): void\n    // Enables this handler\n    enable: function() {\n      if (this._enabled) {\n        return;\n      }\n\n      L.Handler.prototype.enable.call(this);\n\n      this.fire('enabled', {\n        handler: this.type,\n      });\n\n      this._map.fire(L.Draw.Event.DRAWSTART, {\n        layerType: this.type,\n      });\n    },\n\n    // @method disable(): void\n    disable: function() {\n      if (!this._enabled) {\n        return;\n      }\n\n      L.Handler.prototype.disable.call(this);\n\n      this._map.fire(L.Draw.Event.DRAWSTOP, {\n        layerType: this.type,\n      });\n\n      this.fire('disabled', {\n        handler: this.type,\n      });\n    },\n\n    // @method addHooks(): void\n    // Add's event listeners to this handler\n    addHooks: function() {\n      var map = this._map;\n\n      if (map) {\n        L.DomUtil.disableTextSelection();\n\n        map.getContainer().focus();\n\n        this._tooltip = new L.Draw.Tooltip(this._map);\n\n        L.DomEvent.on(this._container, 'keyup', this._cancelDrawing, this);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Removes event listeners from this handler\n    removeHooks: function() {\n      if (this._map) {\n        L.DomUtil.enableTextSelection();\n\n        this._tooltip.dispose();\n        this._tooltip = null;\n\n        L.DomEvent.off(this._container, 'keyup', this._cancelDrawing, this);\n      }\n    },\n\n    // @method setOptions(object): void\n    // Sets new options to this handler\n    setOptions: function(options) {\n      L.setOptions(this, options);\n    },\n\n    _fireCreatedEvent: function(layer) {\n      this._map.fire(L.Draw.Event.CREATED, {\n        layer: layer,\n        layerType: this.type,\n      });\n    },\n\n    // Cancel drawing when the escape key is pressed\n    _cancelDrawing: function(e) {\n      if (e.keyCode === 27) {\n        this._map.fire('draw:canceled', {\n          layerType: this.type,\n        });\n        this.disable();\n      }\n    },\n  });\n\n  /**\n   * @class L.Draw.Polyline\n   * @aka Draw.Polyline\n   * @inherits L.Draw.Feature\n   */\n  L.Draw.Polyline = L.Draw.Feature.extend({\n    statics: {\n      TYPE: 'polyline',\n    },\n\n    Poly: L.Polyline,\n\n    options: {\n      allowIntersection: true,\n      repeatMode: false,\n      drawError: {\n        color: '#b00b00',\n        timeout: 2500,\n      },\n      icon: new L.DivIcon({\n        iconSize: new L.Point(8, 8),\n        className: 'leaflet-div-icon leaflet-editing-icon',\n      }),\n      touchIcon: new L.DivIcon({\n        iconSize: new L.Point(8, 8),\n        className: 'leaflet-div-icon leaflet-editing-icon leaflet-touch-icon',\n      }),\n      guidelineDistance: 20,\n      maxGuideLineLength: 4000,\n      shapeOptions: {\n        stroke: true,\n        color: '#3388ff',\n        weight: 4,\n        opacity: 0.5,\n        fill: false,\n        clickable: true,\n      },\n      metric: true, // Whether to use the metric measurement system or imperial\n      feet: true, // When not metric, to use feet instead of yards for display.\n      nautic: false, // When not metric, not feet use nautic mile for display\n      showLength: true, // Whether to display distance in the tooltip\n      zIndexOffset: 2000, // This should be > than the highest z-index any map layers\n      factor: 1, // To change distance calculation\n      maxPoints: 0, // Once this number of points are placed, finish shape\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      // if touch, switch to touch icon\n      if (L.Browser.touch) {\n        this.options.icon = this.options.touchIcon;\n      }\n\n      // Need to set this here to ensure the correct message is used.\n      this.options.drawError.message = L.drawLocal.draw.handlers.polyline.error;\n\n      // Merge default drawError options with custom options\n      if (options && options.drawError) {\n        options.drawError = L.Util.extend({}, this.options.drawError, options.drawError);\n      }\n\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.Draw.Polyline.TYPE;\n\n      L.Draw.Feature.prototype.initialize.call(this, map, options);\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler\n    addHooks: function() {\n      L.Draw.Feature.prototype.addHooks.call(this);\n      if (this._map) {\n        this._markers = [];\n\n        this._markerGroup = new L.LayerGroup();\n        this._map.addLayer(this._markerGroup);\n\n        this._poly = new L.Polyline([], this.options.shapeOptions);\n\n        this._tooltip.updateContent(this._getTooltipText());\n\n        // Make a transparent marker that will used to catch click events. These click\n        // events will create the vertices. We need to do this so we can ensure that\n        // we can create vertices over other map layers (markers, vector layers). We\n        // also do not want to trigger any click handlers of objects we are clicking on\n        // while drawing.\n        if (!this._mouseMarker) {\n          this._mouseMarker = L.marker(this._map.getCenter(), {\n            icon: L.divIcon({\n              className: 'leaflet-mouse-marker',\n              iconAnchor: [20, 20],\n              iconSize: [40, 40],\n            }),\n            opacity: 0,\n            zIndexOffset: this.options.zIndexOffset,\n          });\n        }\n\n        this._mouseMarker\n          .on('mouseout', this._onMouseOut, this)\n          .on('mousemove', this._onMouseMove, this) // Necessary to prevent 0.8 stutter\n          .on('mousedown', this._onMouseDown, this)\n          .on('mouseup', this._onMouseUp, this) // Necessary for 0.8 compatibility\n          .addTo(this._map);\n\n        this._map\n          .on('mouseup', this._onMouseUp, this) // Necessary for 0.7 compatibility\n          .on('mousemove', this._onMouseMove, this)\n          .on('zoomlevelschange', this._onZoomEnd, this)\n          .on('touchstart', this._onTouch, this)\n          .on('zoomend', this._onZoomEnd, this);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler.\n    removeHooks: function() {\n      L.Draw.Feature.prototype.removeHooks.call(this);\n\n      this._clearHideErrorTimeout();\n\n      this._cleanUpShape();\n\n      // remove markers from map\n      this._map.removeLayer(this._markerGroup);\n      delete this._markerGroup;\n      delete this._markers;\n\n      this._map.removeLayer(this._poly);\n      delete this._poly;\n\n      this._mouseMarker\n        .off('mousedown', this._onMouseDown, this)\n        .off('mouseout', this._onMouseOut, this)\n        .off('mouseup', this._onMouseUp, this)\n        .off('mousemove', this._onMouseMove, this);\n      this._map.removeLayer(this._mouseMarker);\n      delete this._mouseMarker;\n\n      // clean up DOM\n      this._clearGuides();\n\n      this._map\n        .off('mouseup', this._onMouseUp, this)\n        .off('mousemove', this._onMouseMove, this)\n        .off('zoomlevelschange', this._onZoomEnd, this)\n        .off('zoomend', this._onZoomEnd, this)\n        .off('touchstart', this._onTouch, this)\n        .off('click', this._onTouch, this);\n    },\n\n    // @method deleteLastVertex(): void\n    // Remove the last vertex from the polyline, removes polyline from map if only one point exists.\n    deleteLastVertex: function() {\n      if (this._markers.length <= 1) {\n        return;\n      }\n\n      var lastMarker = this._markers.pop(),\n        poly = this._poly,\n        // Replaces .spliceLatLngs()\n        latlngs = poly.getLatLngs(),\n        latlng = latlngs.splice(-1, 1)[0];\n      this._poly.setLatLngs(latlngs);\n\n      this._markerGroup.removeLayer(lastMarker);\n\n      if (poly.getLatLngs().length < 2) {\n        this._map.removeLayer(poly);\n      }\n\n      this._vertexChanged(latlng, false);\n    },\n\n    // @method addVertex(): void\n    // Add a vertex to the end of the polyline\n    addVertex: function(latlng) {\n      var markersLength = this._markers.length;\n      // markersLength must be greater than or equal to 2 before intersections can occur\n      if (\n        markersLength >= 2 &&\n        !this.options.allowIntersection &&\n        this._poly.newLatLngIntersects(latlng)\n      ) {\n        this._showErrorTooltip();\n        return;\n      } else if (this._errorShown) {\n        this._hideErrorTooltip();\n      }\n\n      this._markers.push(this._createMarker(latlng));\n\n      this._poly.addLatLng(latlng);\n\n      if (this._poly.getLatLngs().length === 2) {\n        this._map.addLayer(this._poly);\n      }\n\n      this._vertexChanged(latlng, true);\n    },\n\n    // @method completeShape(): void\n    // Closes the polyline between the first and last points\n    completeShape: function() {\n      if (this._markers.length <= 1) {\n        return;\n      }\n\n      this._fireCreatedEvent();\n      this.disable();\n\n      if (this.options.repeatMode) {\n        this.enable();\n      }\n    },\n\n    _finishShape: function() {\n      var latlngs = this._poly._defaultShape ? this._poly._defaultShape() : this._poly.getLatLngs();\n      var intersects = this._poly.newLatLngIntersects(latlngs[latlngs.length - 1]);\n\n      if ((!this.options.allowIntersection && intersects) || !this._shapeIsValid()) {\n        this._showErrorTooltip();\n        return;\n      }\n\n      this._fireCreatedEvent();\n      this.disable();\n      if (this.options.repeatMode) {\n        this.enable();\n      }\n    },\n\n    // Called to verify the shape is valid when the user tries to finish it\n    // Return false if the shape is not valid\n    _shapeIsValid: function() {\n      return true;\n    },\n\n    _onZoomEnd: function() {\n      if (this._markers !== null) {\n        this._updateGuide();\n      }\n    },\n\n    _onMouseMove: function(e) {\n      var newPos = this._map.mouseEventToLayerPoint(e.originalEvent);\n      var latlng = this._map.layerPointToLatLng(newPos);\n\n      // Save latlng\n      // should this be moved to _updateGuide() ?\n      this._currentLatLng = latlng;\n\n      this._updateTooltip(latlng);\n\n      // Update the guide line\n      this._updateGuide(newPos);\n\n      // Update the mouse marker position\n      this._mouseMarker.setLatLng(latlng);\n\n      L.DomEvent.preventDefault(e.originalEvent);\n    },\n\n    _vertexChanged: function(latlng, added) {\n      this._map.fire(L.Draw.Event.DRAWVERTEX, {\n        layers: this._markerGroup,\n      });\n      this._updateFinishHandler();\n\n      this._updateRunningMeasure(latlng, added);\n\n      this._clearGuides();\n\n      this._updateTooltip();\n    },\n\n    _onMouseDown: function(e) {\n      if (!this._clickHandled && !this._touchHandled && !this._disableMarkers) {\n        this._onMouseMove(e);\n        this._clickHandled = true;\n        this._disableNewMarkers();\n        var originalEvent = e.originalEvent;\n        var clientX = originalEvent.clientX;\n        var clientY = originalEvent.clientY;\n        this._startPoint.call(this, clientX, clientY);\n      }\n    },\n\n    _startPoint: function(clientX, clientY) {\n      this._mouseDownOrigin = L.point(clientX, clientY);\n    },\n\n    _onMouseUp: function(e) {\n      var originalEvent = e.originalEvent;\n      var clientX = originalEvent.clientX;\n      var clientY = originalEvent.clientY;\n      this._endPoint.call(this, clientX, clientY, e);\n      this._clickHandled = null;\n    },\n\n    _endPoint: function(clientX, clientY, e) {\n      if (this._mouseDownOrigin) {\n        var dragCheckDistance = L.point(clientX, clientY).distanceTo(this._mouseDownOrigin);\n        var lastPtDistance = this._calculateFinishDistance(e.latlng);\n        if (this.options.maxPoints > 1 && this.options.maxPoints == this._markers.length + 1) {\n          this.addVertex(e.latlng);\n          this._finishShape();\n        } else if (lastPtDistance < 10 && L.Browser.touch) {\n          this._finishShape();\n        } else if (Math.abs(dragCheckDistance) < 9 * (window.devicePixelRatio || 1)) {\n          this.addVertex(e.latlng);\n        }\n        this._enableNewMarkers(); // after a short pause, enable new markers\n      }\n      this._mouseDownOrigin = null;\n    },\n\n    // ontouch prevented by clickHandled flag because some browsers fire both click/touch events,\n    // causing unwanted behavior\n    _onTouch: function(e) {\n      var originalEvent = e.originalEvent;\n      var clientX;\n      var clientY;\n      if (\n        originalEvent.touches &&\n        originalEvent.touches[0] &&\n        !this._clickHandled &&\n        !this._touchHandled &&\n        !this._disableMarkers\n      ) {\n        clientX = originalEvent.touches[0].clientX;\n        clientY = originalEvent.touches[0].clientY;\n        this._disableNewMarkers();\n        this._touchHandled = true;\n        this._startPoint.call(this, clientX, clientY);\n        this._endPoint.call(this, clientX, clientY, e);\n        this._touchHandled = null;\n      }\n      this._clickHandled = null;\n    },\n\n    _onMouseOut: function() {\n      if (this._tooltip) {\n        this._tooltip._onMouseOut.call(this._tooltip);\n      }\n    },\n\n    // calculate if we are currently within close enough distance\n    // of the closing point (first point for shapes, last point for lines)\n    // this is semi-ugly code but the only reliable way i found to get the job done\n    // note: calculating point.distanceTo between mouseDownOrigin and last marker did NOT work\n    _calculateFinishDistance: function(potentialLatLng) {\n      var lastPtDistance;\n      if (this._markers.length > 0) {\n        var finishMarker;\n        if (this.type === L.Draw.Polyline.TYPE) {\n          finishMarker = this._markers[this._markers.length - 1];\n        } else if (this.type === L.Draw.Polygon.TYPE) {\n          finishMarker = this._markers[0];\n        } else {\n          return Infinity;\n        }\n        var lastMarkerPoint = this._map.latLngToContainerPoint(finishMarker.getLatLng()),\n          potentialMarker = new L.Marker(potentialLatLng, {\n            icon: this.options.icon,\n            zIndexOffset: this.options.zIndexOffset * 2,\n          });\n        var potentialMarkerPint = this._map.latLngToContainerPoint(potentialMarker.getLatLng());\n        lastPtDistance = lastMarkerPoint.distanceTo(potentialMarkerPint);\n      } else {\n        lastPtDistance = Infinity;\n      }\n      return lastPtDistance;\n    },\n\n    _updateFinishHandler: function() {\n      var markerCount = this._markers.length;\n      // The last marker should have a click handler to close the polyline\n      if (markerCount > 1) {\n        this._markers[markerCount - 1].on('click', this._finishShape, this);\n      }\n\n      // Remove the old marker click handler (as only the last point should close the polyline)\n      if (markerCount > 2) {\n        this._markers[markerCount - 2].off('click', this._finishShape, this);\n      }\n    },\n\n    _createMarker: function(latlng) {\n      var marker = new L.Marker(latlng, {\n        icon: this.options.icon,\n        zIndexOffset: this.options.zIndexOffset * 2,\n      });\n\n      this._markerGroup.addLayer(marker);\n\n      return marker;\n    },\n\n    _updateGuide: function(newPos) {\n      var markerCount = this._markers ? this._markers.length : 0;\n\n      if (markerCount > 0) {\n        newPos = newPos || this._map.latLngToLayerPoint(this._currentLatLng);\n\n        // draw the guide line\n        this._clearGuides();\n        this._drawGuide(\n          this._map.latLngToLayerPoint(this._markers[markerCount - 1].getLatLng()),\n          newPos\n        );\n      }\n    },\n\n    _updateTooltip: function(latLng) {\n      var text = this._getTooltipText();\n\n      if (latLng) {\n        this._tooltip.updatePosition(latLng);\n      }\n\n      if (!this._errorShown) {\n        this._tooltip.updateContent(text);\n      }\n    },\n\n    _drawGuide: function(pointA, pointB) {\n      var length = Math.floor(\n          Math.sqrt(Math.pow(pointB.x - pointA.x, 2) + Math.pow(pointB.y - pointA.y, 2))\n        ),\n        guidelineDistance = this.options.guidelineDistance,\n        maxGuideLineLength = this.options.maxGuideLineLength,\n        // Only draw a guideline with a max length\n        i = length > maxGuideLineLength ? length - maxGuideLineLength : guidelineDistance,\n        fraction,\n        dashPoint,\n        dash;\n\n      //create the guides container if we haven't yet\n      if (!this._guidesContainer) {\n        this._guidesContainer = L.DomUtil.create('div', 'leaflet-draw-guides', this._overlayPane);\n      }\n\n      //draw a dash every GuildeLineDistance\n      for (; i < length; i += this.options.guidelineDistance) {\n        //work out fraction along line we are\n        fraction = i / length;\n\n        //calculate new x,y point\n        dashPoint = {\n          x: Math.floor(pointA.x * (1 - fraction) + fraction * pointB.x),\n          y: Math.floor(pointA.y * (1 - fraction) + fraction * pointB.y),\n        };\n\n        //add guide dash to guide container\n        dash = L.DomUtil.create('div', 'leaflet-draw-guide-dash', this._guidesContainer);\n        dash.style.backgroundColor = !this._errorShown\n          ? this.options.shapeOptions.color\n          : this.options.drawError.color;\n\n        L.DomUtil.setPosition(dash, dashPoint);\n      }\n    },\n\n    _updateGuideColor: function(color) {\n      if (this._guidesContainer) {\n        for (var i = 0, l = this._guidesContainer.childNodes.length; i < l; i++) {\n          this._guidesContainer.childNodes[i].style.backgroundColor = color;\n        }\n      }\n    },\n\n    // removes all child elements (guide dashes) from the guides container\n    _clearGuides: function() {\n      if (this._guidesContainer) {\n        while (this._guidesContainer.firstChild) {\n          this._guidesContainer.removeChild(this._guidesContainer.firstChild);\n        }\n      }\n    },\n\n    _getTooltipText: function() {\n      var showLength = this.options.showLength,\n        labelText,\n        distanceStr;\n      if (this._markers.length === 0) {\n        labelText = {\n          text: L.drawLocal.draw.handlers.polyline.tooltip.start,\n        };\n      } else {\n        distanceStr = showLength ? this._getMeasurementString() : '';\n\n        if (this._markers.length === 1) {\n          labelText = {\n            text: L.drawLocal.draw.handlers.polyline.tooltip.cont,\n            subtext: distanceStr,\n          };\n        } else {\n          labelText = {\n            text: L.drawLocal.draw.handlers.polyline.tooltip.end,\n            subtext: distanceStr,\n          };\n        }\n      }\n      return labelText;\n    },\n\n    _updateRunningMeasure: function(latlng, added) {\n      var markersLength = this._markers.length,\n        previousMarkerIndex,\n        distance;\n\n      if (this._markers.length === 1) {\n        this._measurementRunningTotal = 0;\n      } else {\n        previousMarkerIndex = markersLength - (added ? 2 : 1);\n\n        // Calculate the distance based on the version\n        if (L.GeometryUtil.isVersion07x()) {\n          distance =\n            latlng.distanceTo(this._markers[previousMarkerIndex].getLatLng()) *\n            (this.options.factor || 1);\n        } else {\n          distance =\n            this._map.distance(latlng, this._markers[previousMarkerIndex].getLatLng()) *\n            (this.options.factor || 1);\n        }\n\n        this._measurementRunningTotal += distance * (added ? 1 : -1);\n      }\n    },\n\n    _getMeasurementString: function() {\n      var currentLatLng = this._currentLatLng,\n        previousLatLng = this._markers[this._markers.length - 1].getLatLng(),\n        distance;\n\n      // Calculate the distance from the last fixed point to the mouse position based on the version\n      if (L.GeometryUtil.isVersion07x()) {\n        distance =\n          previousLatLng && currentLatLng && currentLatLng.distanceTo\n            ? this._measurementRunningTotal +\n              currentLatLng.distanceTo(previousLatLng) * (this.options.factor || 1)\n            : this._measurementRunningTotal || 0;\n      } else {\n        distance =\n          previousLatLng && currentLatLng\n            ? this._measurementRunningTotal +\n              this._map.distance(currentLatLng, previousLatLng) * (this.options.factor || 1)\n            : this._measurementRunningTotal || 0;\n      }\n\n      return L.GeometryUtil.readableDistance(\n        distance,\n        this.options.metric,\n        this.options.feet,\n        this.options.nautic,\n        this.options.precision\n      );\n    },\n\n    _showErrorTooltip: function() {\n      this._errorShown = true;\n\n      // Update tooltip\n      this._tooltip.showAsError().updateContent({\n        text: this.options.drawError.message,\n      });\n\n      // Update shape\n      this._updateGuideColor(this.options.drawError.color);\n      this._poly.setStyle({\n        color: this.options.drawError.color,\n      });\n\n      // Hide the error after 2 seconds\n      this._clearHideErrorTimeout();\n      this._hideErrorTimeout = setTimeout(\n        L.Util.bind(this._hideErrorTooltip, this),\n        this.options.drawError.timeout\n      );\n    },\n\n    _hideErrorTooltip: function() {\n      this._errorShown = false;\n\n      this._clearHideErrorTimeout();\n\n      // Revert tooltip\n      this._tooltip.removeError().updateContent(this._getTooltipText());\n\n      // Revert shape\n      this._updateGuideColor(this.options.shapeOptions.color);\n      this._poly.setStyle({\n        color: this.options.shapeOptions.color,\n      });\n    },\n\n    _clearHideErrorTimeout: function() {\n      if (this._hideErrorTimeout) {\n        clearTimeout(this._hideErrorTimeout);\n        this._hideErrorTimeout = null;\n      }\n    },\n\n    // disable new markers temporarily;\n    // this is to prevent duplicated touch/click events in some browsers\n    _disableNewMarkers: function() {\n      this._disableMarkers = true;\n    },\n\n    // see _disableNewMarkers\n    _enableNewMarkers: function() {\n      setTimeout(\n        function() {\n          this._disableMarkers = false;\n        }.bind(this),\n        50\n      );\n    },\n\n    _cleanUpShape: function() {\n      if (this._markers.length > 1) {\n        this._markers[this._markers.length - 1].off('click', this._finishShape, this);\n      }\n    },\n\n    _fireCreatedEvent: function() {\n      var poly = new this.Poly(this._poly.getLatLngs(), this.options.shapeOptions);\n      L.Draw.Feature.prototype._fireCreatedEvent.call(this, poly);\n    },\n  });\n\n  /**\n   * @class L.Draw.Polygon\n   * @aka Draw.Polygon\n   * @inherits L.Draw.Polyline\n   */\n  L.Draw.Polygon = L.Draw.Polyline.extend({\n    statics: {\n      TYPE: 'polygon',\n    },\n\n    Poly: L.Polygon,\n\n    options: {\n      showArea: true,\n      showLength: false,\n      shapeOptions: {\n        stroke: true,\n        color: '#3388ff',\n        weight: 4,\n        opacity: 0.5,\n        fill: true,\n        fillColor: null, //same as color by default\n        fillOpacity: 0.2,\n        clickable: true,\n      },\n      // Whether to use the metric measurement system (truthy) or not (falsy).\n      // Also defines the units to use for the metric system as an array of\n      // strings (e.g. `['ha', 'm']`).\n      metric: true,\n      feet: false, // When not metric, to use feet instead of yards for display.\n      nautic: false, // When not metric, not feet use nautic mile for display\n      // Defines the precision for each type of unit (e.g. {km: 2, ft: 0}\n      precision: {},\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      L.Draw.Polyline.prototype.initialize.call(this, map, options);\n\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.Draw.Polygon.TYPE;\n    },\n\n    _updateFinishHandler: function() {\n      var markerCount = this._markers.length;\n\n      // The first marker should have a click handler to close the polygon\n      if (markerCount === 1) {\n        this._markers[0].on('click', this._finishShape, this);\n      }\n\n      // Add and update the double click handler\n      if (markerCount > 2) {\n        this._markers[markerCount - 1].on('dblclick', this._finishShape, this);\n        // Only need to remove handler if has been added before\n        if (markerCount > 3) {\n          this._markers[markerCount - 2].off('dblclick', this._finishShape, this);\n        }\n      }\n    },\n\n    _getTooltipText: function() {\n      var text, subtext;\n\n      if (this._markers.length === 0) {\n        text = L.drawLocal.draw.handlers.polygon.tooltip.start;\n      } else if (this._markers.length < 3) {\n        text = L.drawLocal.draw.handlers.polygon.tooltip.cont;\n        subtext = this._getMeasurementString();\n      } else {\n        text = L.drawLocal.draw.handlers.polygon.tooltip.end;\n        subtext = this._getMeasurementString();\n      }\n\n      return {\n        text: text,\n        subtext: subtext,\n      };\n    },\n\n    _getMeasurementString: function() {\n      var area = this._area,\n        measurementString = '';\n\n      if (!area && !this.options.showLength) {\n        return null;\n      }\n\n      if (this.options.showLength) {\n        measurementString = L.Draw.Polyline.prototype._getMeasurementString.call(this);\n      }\n\n      if (area) {\n        measurementString +=\n          '<br>' + L.GeometryUtil.readableArea(area, this.options.metric, this.options.precision);\n      }\n      return measurementString;\n    },\n\n    _shapeIsValid: function() {\n      return this._markers.length >= 3;\n    },\n\n    _vertexChanged: function(latlng, added) {\n      var latLngs;\n\n      // Check to see if we should show the area\n      if (!this.options.allowIntersection && this.options.showArea) {\n        latLngs = this._poly.getLatLngs();\n\n        this._area = L.GeometryUtil.geodesicArea(latLngs);\n      }\n\n      L.Draw.Polyline.prototype._vertexChanged.call(this, latlng, added);\n    },\n\n    _cleanUpShape: function() {\n      var markerCount = this._markers.length;\n\n      if (markerCount > 0) {\n        this._markers[0].off('click', this._finishShape, this);\n\n        if (markerCount > 2) {\n          this._markers[markerCount - 1].off('dblclick', this._finishShape, this);\n        }\n      }\n    },\n  });\n\n  L.SimpleShape = {};\n  /**\n   * @class L.Draw.SimpleShape\n   * @aka Draw.SimpleShape\n   * @inherits L.Draw.Feature\n   */\n  L.Draw.SimpleShape = L.Draw.Feature.extend({\n    options: {\n      repeatMode: false,\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      this._endLabelText = L.drawLocal.draw.handlers.simpleshape.tooltip.end;\n\n      L.Draw.Feature.prototype.initialize.call(this, map, options);\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler.\n    addHooks: function() {\n      L.Draw.Feature.prototype.addHooks.call(this);\n      if (this._map) {\n        this._mapDraggable = this._map.dragging.enabled();\n\n        if (this._mapDraggable) {\n          this._map.dragging.disable();\n        }\n\n        //TODO refactor: move cursor to styles\n        this._container.style.cursor = 'crosshair';\n\n        this._tooltip.updateContent({\n          text: this._initialLabelText,\n        });\n\n        this._map\n          .on('mousedown', this._onMouseDown, this)\n          .on('mousemove', this._onMouseMove, this)\n          .on('touchstart', this._onMouseDown, this)\n          .on('touchmove', this._onMouseMove, this);\n\n        // we should prevent default, otherwise default behavior (scrolling) will fire,\n        // and that will cause document.touchend to fire and will stop the drawing\n        // (circle, rectangle) in touch mode.\n        // (update): we have to send passive now to prevent scroll, because by default it is {passive: true} now, which means,\n        // handler can't event.preventDefault\n        // check the news https://developers.google.com/web/updates/2016/06/passive-event-listeners\n        document.addEventListener('touchstart', L.DomEvent.preventDefault, {\n          passive: false,\n        });\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler.\n    removeHooks: function() {\n      L.Draw.Feature.prototype.removeHooks.call(this);\n      if (this._map) {\n        if (this._mapDraggable) {\n          this._map.dragging.enable();\n        }\n\n        //TODO refactor: move cursor to styles\n        this._container.style.cursor = '';\n\n        this._map\n          .off('mousedown', this._onMouseDown, this)\n          .off('mousemove', this._onMouseMove, this)\n          .off('touchstart', this._onMouseDown, this)\n          .off('touchmove', this._onMouseMove, this);\n\n        L.DomEvent.off(document, 'mouseup', this._onMouseUp, this);\n        L.DomEvent.off(document, 'touchend', this._onMouseUp, this);\n\n        document.removeEventListener('touchstart', L.DomEvent.preventDefault);\n\n        // If the box element doesn't exist they must not have moved the mouse, so don't need to destroy/return\n        if (this._shape) {\n          this._map.removeLayer(this._shape);\n          delete this._shape;\n        }\n      }\n      this._isDrawing = false;\n    },\n\n    _getTooltipText: function() {\n      return {\n        text: this._endLabelText,\n      };\n    },\n\n    _onMouseDown: function(e) {\n      this._isDrawing = true;\n      this._startLatLng = e.latlng;\n\n      L.DomEvent.on(document, 'mouseup', this._onMouseUp, this)\n        .on(document, 'touchend', this._onMouseUp, this)\n        .preventDefault(e.originalEvent);\n    },\n\n    _onMouseMove: function(e) {\n      var latlng = e.latlng;\n\n      this._tooltip.updatePosition(latlng);\n      if (this._isDrawing) {\n        this._tooltip.updateContent(this._getTooltipText());\n        this._drawShape(latlng);\n      }\n    },\n\n    _onMouseUp: function() {\n      if (this._shape) {\n        this._fireCreatedEvent();\n      }\n\n      this.disable();\n      if (this.options.repeatMode) {\n        this.enable();\n      }\n    },\n  });\n\n  /**\n   * @class L.Draw.Rectangle\n   * @aka Draw.Rectangle\n   * @inherits L.Draw.SimpleShape\n   */\n  L.Draw.Rectangle = L.Draw.SimpleShape.extend({\n    statics: {\n      TYPE: 'rectangle',\n    },\n\n    options: {\n      shapeOptions: {\n        stroke: true,\n        color: '#3388ff',\n        weight: 4,\n        opacity: 0.5,\n        fill: true,\n        fillColor: null, //same as color by default\n        fillOpacity: 0.2,\n        showArea: true,\n        clickable: true,\n      },\n      metric: true, // Whether to use the metric measurement system or imperial\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.Draw.Rectangle.TYPE;\n\n      this._initialLabelText = L.drawLocal.draw.handlers.rectangle.tooltip.start;\n\n      L.Draw.SimpleShape.prototype.initialize.call(this, map, options);\n    },\n\n    // @method disable(): void\n    disable: function() {\n      if (!this._enabled) {\n        return;\n      }\n\n      this._isCurrentlyTwoClickDrawing = false;\n      L.Draw.SimpleShape.prototype.disable.call(this);\n    },\n\n    _onMouseUp: function(e) {\n      if (!this._shape && !this._isCurrentlyTwoClickDrawing) {\n        this._isCurrentlyTwoClickDrawing = true;\n        return;\n      }\n\n      // Make sure closing click is on map\n      if (this._isCurrentlyTwoClickDrawing && !_hasAncestor(e.target, 'leaflet-pane')) {\n        return;\n      }\n\n      L.Draw.SimpleShape.prototype._onMouseUp.call(this);\n    },\n\n    _drawShape: function(latlng) {\n      if (!this._shape) {\n        this._shape = new L.Rectangle(\n          new L.LatLngBounds(this._startLatLng, latlng),\n          this.options.shapeOptions\n        );\n        this._map.addLayer(this._shape);\n      } else {\n        this._shape.setBounds(new L.LatLngBounds(this._startLatLng, latlng));\n      }\n    },\n\n    _fireCreatedEvent: function() {\n      var rectangle = new L.Rectangle(this._shape.getBounds(), this.options.shapeOptions);\n      L.Draw.SimpleShape.prototype._fireCreatedEvent.call(this, rectangle);\n    },\n\n    _getTooltipText: function() {\n      var tooltipText = L.Draw.SimpleShape.prototype._getTooltipText.call(this),\n        shape = this._shape,\n        showArea = this.options.showArea,\n        latLngs,\n        area,\n        subtext;\n\n      if (shape) {\n        latLngs = this._shape._defaultShape\n          ? this._shape._defaultShape()\n          : this._shape.getLatLngs();\n        area = L.GeometryUtil.geodesicArea(latLngs);\n        subtext = showArea ? L.GeometryUtil.readableArea(area, this.options.metric) : '';\n      }\n      return {\n        text: tooltipText.text,\n        subtext: subtext,\n      };\n    },\n  });\n\n  function _hasAncestor(el, cls) {\n    while ((el = el.parentElement) && !el.classList.contains(cls)) {}\n    return el;\n  }\n\n  /**\n   * @class L.Draw.Marker\n   * @aka Draw.Marker\n   * @inherits L.Draw.Feature\n   */\n  L.Draw.Marker = L.Draw.Feature.extend({\n    statics: {\n      TYPE: 'marker',\n    },\n\n    options: {\n      icon: new L.Icon.Default(),\n      repeatMode: false,\n      zIndexOffset: 2000, // This should be > than the highest z-index any markers\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.Draw.Marker.TYPE;\n\n      this._initialLabelText = L.drawLocal.draw.handlers.marker.tooltip.start;\n\n      L.Draw.Feature.prototype.initialize.call(this, map, options);\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler.\n    addHooks: function() {\n      L.Draw.Feature.prototype.addHooks.call(this);\n\n      if (this._map) {\n        this._tooltip.updateContent({\n          text: this._initialLabelText,\n        });\n\n        // Same mouseMarker as in Draw.Polyline\n        if (!this._mouseMarker) {\n          this._mouseMarker = L.marker(this._map.getCenter(), {\n            icon: L.divIcon({\n              className: 'leaflet-mouse-marker',\n              iconAnchor: [20, 20],\n              iconSize: [40, 40],\n            }),\n            opacity: 0,\n            zIndexOffset: this.options.zIndexOffset,\n          });\n        }\n\n        this._mouseMarker.on('click', this._onClick, this).addTo(this._map);\n\n        this._map.on('mousemove', this._onMouseMove, this);\n        this._map.on('click', this._onTouch, this);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler.\n    removeHooks: function() {\n      L.Draw.Feature.prototype.removeHooks.call(this);\n\n      if (this._map) {\n        this._map.off('click', this._onClick, this).off('click', this._onTouch, this);\n        if (this._marker) {\n          this._marker.off('click', this._onClick, this);\n          this._map.removeLayer(this._marker);\n          delete this._marker;\n        }\n\n        this._mouseMarker.off('click', this._onClick, this);\n        this._map.removeLayer(this._mouseMarker);\n        delete this._mouseMarker;\n\n        this._map.off('mousemove', this._onMouseMove, this);\n      }\n    },\n\n    _onMouseMove: function(e) {\n      var latlng = e.latlng;\n\n      this._tooltip.updatePosition(latlng);\n      this._mouseMarker.setLatLng(latlng);\n\n      if (!this._marker) {\n        this._marker = this._createMarker(latlng);\n        // Bind to both marker and map to make sure we get the click event.\n        this._marker.on('click', this._onClick, this);\n        this._map.on('click', this._onClick, this).addLayer(this._marker);\n      } else {\n        latlng = this._mouseMarker.getLatLng();\n        this._marker.setLatLng(latlng);\n      }\n    },\n\n    _createMarker: function(latlng) {\n      return new L.Marker(latlng, {\n        icon: this.options.icon,\n        zIndexOffset: this.options.zIndexOffset,\n      });\n    },\n\n    _onClick: function() {\n      this._fireCreatedEvent();\n\n      this.disable();\n      if (this.options.repeatMode) {\n        this.enable();\n      }\n    },\n\n    _onTouch: function(e) {\n      // called on click & tap, only really does any thing on tap\n      this._onMouseMove(e); // creates & places marker\n      this._onClick(); // permanently places marker & ends interaction\n    },\n\n    _fireCreatedEvent: function() {\n      var marker = new L.Marker.Touch(this._marker.getLatLng(), {\n        icon: this.options.icon,\n      });\n      L.Draw.Feature.prototype._fireCreatedEvent.call(this, marker);\n    },\n  });\n\n  /**\n   * @class L.Draw.CircleMarker\n   * @aka Draw.CircleMarker\n   * @inherits L.Draw.Marker\n   */\n  L.Draw.CircleMarker = L.Draw.Marker.extend({\n    statics: {\n      TYPE: 'circlemarker',\n    },\n\n    options: {\n      stroke: true,\n      color: '#3388ff',\n      weight: 4,\n      opacity: 0.5,\n      fill: true,\n      fillColor: null, //same as color by default\n      fillOpacity: 0.2,\n      clickable: true,\n      zIndexOffset: 2000, // This should be > than the highest z-index any markers\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.Draw.CircleMarker.TYPE;\n\n      this._initialLabelText = L.drawLocal.draw.handlers.circlemarker.tooltip.start;\n\n      L.Draw.Feature.prototype.initialize.call(this, map, options);\n    },\n\n    _fireCreatedEvent: function() {\n      var circleMarker = new L.CircleMarker(this._marker.getLatLng(), this.options);\n      L.Draw.Feature.prototype._fireCreatedEvent.call(this, circleMarker);\n    },\n\n    _createMarker: function(latlng) {\n      return new L.CircleMarker(latlng, this.options);\n    },\n  });\n\n  /**\n   * @class L.Draw.Circle\n   * @aka Draw.Circle\n   * @inherits L.Draw.SimpleShape\n   */\n  L.Draw.Circle = L.Draw.SimpleShape.extend({\n    statics: {\n      TYPE: 'circle',\n    },\n\n    options: {\n      shapeOptions: {\n        stroke: true,\n        color: '#3388ff',\n        weight: 4,\n        opacity: 0.5,\n        fill: true,\n        fillColor: null, //same as color by default\n        fillOpacity: 0.2,\n        clickable: true,\n      },\n      showRadius: true,\n      metric: true, // Whether to use the metric measurement system or imperial\n      feet: true, // When not metric, use feet instead of yards for display\n      nautic: false, // When not metric, not feet use nautic mile for display\n    },\n\n    // @method initialize(): void\n    initialize: function(map, options) {\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.Draw.Circle.TYPE;\n\n      this._initialLabelText = L.drawLocal.draw.handlers.circle.tooltip.start;\n\n      L.Draw.SimpleShape.prototype.initialize.call(this, map, options);\n    },\n\n    _drawShape: function(latlng) {\n      // Calculate the distance based on the version\n      if (L.GeometryUtil.isVersion07x()) {\n        var distance = this._startLatLng.distanceTo(latlng);\n      } else {\n        var distance = this._map.distance(this._startLatLng, latlng);\n      }\n\n      if (!this._shape) {\n        this._shape = new L.Circle(this._startLatLng, distance, this.options.shapeOptions);\n        this._map.addLayer(this._shape);\n      } else {\n        this._shape.setRadius(distance);\n      }\n    },\n\n    _fireCreatedEvent: function() {\n      var circle = new L.Circle(\n        this._startLatLng,\n        this._shape.getRadius(),\n        this.options.shapeOptions\n      );\n      L.Draw.SimpleShape.prototype._fireCreatedEvent.call(this, circle);\n    },\n\n    _onMouseMove: function(e) {\n      var latlng = e.latlng,\n        showRadius = this.options.showRadius,\n        useMetric = this.options.metric,\n        radius;\n\n      this._tooltip.updatePosition(latlng);\n      if (this._isDrawing) {\n        this._drawShape(latlng);\n\n        // Get the new radius (rounded to 1 dp)\n        radius = this._shape.getRadius().toFixed(1);\n\n        var subtext = '';\n        if (showRadius) {\n          subtext =\n            L.drawLocal.draw.handlers.circle.radius +\n            ': ' +\n            L.GeometryUtil.readableDistance(\n              radius,\n              useMetric,\n              this.options.feet,\n              this.options.nautic\n            );\n        }\n        this._tooltip.updateContent({\n          text: this._endLabelText,\n          subtext: subtext,\n        });\n      }\n    },\n  });\n\n  L.Edit = L.Edit || {};\n\n  /**\n   * @class L.Edit.Marker\n   * @aka Edit.Marker\n   */\n  L.Edit.Marker = L.Handler.extend({\n    // @method initialize(): void\n    initialize: function(marker, options) {\n      this._marker = marker;\n      L.setOptions(this, options);\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler\n    addHooks: function() {\n      var marker = this._marker;\n\n      marker.dragging.enable();\n      marker.on('dragend', this._onDragEnd, marker);\n      this._toggleMarkerHighlight();\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler\n    removeHooks: function() {\n      var marker = this._marker;\n\n      marker.dragging.disable();\n      marker.off('dragend', this._onDragEnd, marker);\n      this._toggleMarkerHighlight();\n    },\n\n    _onDragEnd: function(e) {\n      var layer = e.target;\n      layer.edited = true;\n      this._map.fire(L.Draw.Event.EDITMOVE, {\n        layer: layer,\n      });\n    },\n\n    _toggleMarkerHighlight: function() {\n      var icon = this._marker._icon;\n\n      // Don't do anything if this layer is a marker but doesn't have an icon. Markers\n      // should usually have icons. If using Leaflet.draw with Leaflet.markercluster there\n      // is a chance that a marker doesn't.\n      if (!icon) {\n        return;\n      }\n\n      // This is quite naughty, but I don't see another way of doing it. (short of setting a new icon)\n      icon.style.display = 'none';\n\n      if (L.DomUtil.hasClass(icon, 'leaflet-edit-marker-selected')) {\n        L.DomUtil.removeClass(icon, 'leaflet-edit-marker-selected');\n        // Offset as the border will make the icon move.\n        this._offsetMarker(icon, -4);\n      } else {\n        L.DomUtil.addClass(icon, 'leaflet-edit-marker-selected');\n        // Offset as the border will make the icon move.\n        this._offsetMarker(icon, 4);\n      }\n\n      icon.style.display = '';\n    },\n\n    _offsetMarker: function(icon, offset) {\n      var iconMarginTop = parseInt(icon.style.marginTop, 10) - offset,\n        iconMarginLeft = parseInt(icon.style.marginLeft, 10) - offset;\n\n      icon.style.marginTop = iconMarginTop + 'px';\n      icon.style.marginLeft = iconMarginLeft + 'px';\n    },\n  });\n\n  L.Marker.addInitHook(function() {\n    if (L.Edit.Marker) {\n      this.editing = new L.Edit.Marker(this);\n\n      if (this.options.editable) {\n        this.editing.enable();\n      }\n    }\n  });\n\n  L.Edit = L.Edit || {};\n\n  /**\n   * @class L.Edit.Polyline\n   * @aka L.Edit.Poly\n   * @aka Edit.Poly\n   */\n  L.Edit.Poly = L.Handler.extend({\n    // @method initialize(): void\n    initialize: function(poly) {\n      this.latlngs = [poly._latlngs];\n      if (poly._holes) {\n        this.latlngs = this.latlngs.concat(poly._holes);\n      }\n\n      this._poly = poly;\n\n      this._poly.on('revert-edited', this._updateLatLngs, this);\n    },\n\n    // Compatibility method to normalize Poly* objects\n    // between 0.7.x and 1.0+\n    _defaultShape: function() {\n      // if (!L.LineUtil.isFlat(this._poly._latlngs)) {\n      //   return this._poly._latlngs\n      // }\n      // if (!L.Polyline._flat) {\n      //   return this._poly._latlngs\n      // }\n\n      return L.LineUtil.isFlat(this._poly._latlngs) ? this._poly._latlngs : this._poly._latlngs[0];\n    },\n\n    _eachVertexHandler: function(callback) {\n      for (var i = 0; i < this._verticesHandlers.length; i++) {\n        callback(this._verticesHandlers[i]);\n      }\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler\n    addHooks: function() {\n      this._initHandlers();\n      this._eachVertexHandler(function(handler) {\n        handler.addHooks();\n      });\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler\n    removeHooks: function() {\n      this._eachVertexHandler(function(handler) {\n        handler.removeHooks();\n      });\n    },\n\n    // @method updateMarkers(): void\n    // Fire an update for each vertex handler\n    updateMarkers: function() {\n      this._eachVertexHandler(function(handler) {\n        handler.updateMarkers();\n      });\n    },\n\n    _initHandlers: function() {\n      this._verticesHandlers = [];\n      for (var i = 0; i < this.latlngs.length; i++) {\n        this._verticesHandlers.push(\n          new L.Edit.PolyVerticesEdit(this._poly, this.latlngs[i], this._poly.options.poly)\n        );\n      }\n    },\n\n    _updateLatLngs: function(e) {\n      this.latlngs = [e.layer._latlngs];\n      if (e.layer._holes) {\n        this.latlngs = this.latlngs.concat(e.layer._holes);\n      }\n    },\n  });\n\n  /**\n   * @class L.Edit.PolyVerticesEdit\n   * @aka Edit.PolyVerticesEdit\n   */\n  L.Edit.PolyVerticesEdit = L.Handler.extend({\n    options: {\n      icon: new L.DivIcon({\n        iconSize: new L.Point(8, 8),\n        className: 'leaflet-div-icon leaflet-editing-icon',\n      }),\n      touchIcon: new L.DivIcon({\n        iconSize: new L.Point(20, 20),\n        className: 'leaflet-div-icon leaflet-editing-icon leaflet-touch-icon',\n      }),\n      drawError: {\n        color: '#b00b00',\n        timeout: 1000,\n      },\n    },\n\n    // @method intialize(): void\n    initialize: function(poly, latlngs, options) {\n      // if touch, switch to touch icon\n      if (L.Browser.touch) {\n        this.options.icon = this.options.touchIcon;\n      }\n      this._poly = poly;\n\n      if (options && options.drawError) {\n        options.drawError = L.Util.extend({}, this.options.drawError, options.drawError);\n      }\n\n      this._latlngs = latlngs;\n\n      L.setOptions(this, options);\n    },\n\n    // Compatibility method to normalize Poly* objects\n    // between 0.7.x and 1.0+\n    _defaultShape: function() {\n      return L.LineUtil.isFlat(this._latlngs) ? this._latlngs : this._latlngs[0];\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler.\n    addHooks: function() {\n      var poly = this._poly;\n      var path = poly._path;\n\n      if (!(poly instanceof L.Polygon)) {\n        poly.options.fill = false;\n        if (poly.options.editing) {\n          poly.options.editing.fill = false;\n        }\n      }\n\n      if (path) {\n        if (poly.options.editing.className) {\n          if (poly.options.original.className) {\n            poly.options.original.className.split(' ').forEach(function(className) {\n              L.DomUtil.removeClass(path, className);\n            });\n          }\n          poly.options.editing.className.split(' ').forEach(function(className) {\n            L.DomUtil.addClass(path, className);\n          });\n        }\n      }\n\n      poly.setStyle(poly.options.editing);\n\n      if (this._poly._map) {\n        this._map = this._poly._map; // Set map\n\n        if (!this._markerGroup) {\n          this._initMarkers();\n        }\n        this._poly._map.addLayer(this._markerGroup);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler.\n    removeHooks: function() {\n      var poly = this._poly;\n      var path = poly._path;\n\n      if (path) {\n        if (poly.options.editing.className) {\n          poly.options.editing.className.split(' ').forEach(function(className) {\n            L.DomUtil.removeClass(path, className);\n          });\n          if (poly.options.original.className) {\n            poly.options.original.className.split(' ').forEach(function(className) {\n              L.DomUtil.addClass(path, className);\n            });\n          }\n        }\n      }\n\n      poly.setStyle(poly.options.original);\n\n      if (poly._map) {\n        poly._map.removeLayer(this._markerGroup);\n        delete this._markerGroup;\n        delete this._markers;\n      }\n    },\n\n    // @method updateMarkers(): void\n    // Clear markers and update their location\n    updateMarkers: function() {\n      this._markerGroup.clearLayers();\n      this._initMarkers();\n    },\n\n    _initMarkers: function() {\n      if (!this._markerGroup) {\n        this._markerGroup = new L.LayerGroup();\n      }\n      this._markers = [];\n\n      // STE: solo exterior!\n      //var latlngs = this._defaultShape(),\n      var latlngs = this._latlngs,\n        i,\n        j,\n        len,\n        marker;\n\n      for (i = 0, len = latlngs.length; i < len; i++) {\n        marker = this._createMarker(latlngs[i], i);\n        marker.on('click', this._onMarkerClick, this);\n        marker.on('contextmenu', this._onContextMenu, this);\n        this._markers.push(marker);\n      }\n\n      var markerLeft, markerRight;\n\n      for (i = 0, j = len - 1; i < len; j = i++) {\n        if (i === 0 && !(L.Polygon && this._poly instanceof L.Polygon)) {\n          continue;\n        }\n\n        markerLeft = this._markers[j];\n        markerRight = this._markers[i];\n\n        this._createMiddleMarker(markerLeft, markerRight);\n        this._updatePrevNext(markerLeft, markerRight);\n      }\n    },\n\n    _createMarker: function(latlng, index) {\n      // Extending L.Marker in TouchEvents.js to include touch.\n      var marker = new L.Marker.Touch(latlng, {\n        draggable: true,\n        icon: this.options.icon,\n      });\n\n      marker._origLatLng = latlng;\n      marker._index = index;\n\n      marker\n        .on('dragstart', this._onMarkerDragStart, this)\n        .on('drag', this._onMarkerDrag, this)\n        .on('dragend', this._fireEdit, this)\n        .on('touchmove', this._onTouchMove, this)\n        .on('touchend', this._fireEdit, this)\n        .on('MSPointerMove', this._onTouchMove, this)\n        .on('MSPointerUp', this._fireEdit, this);\n\n      this._markerGroup.addLayer(marker);\n\n      return marker;\n    },\n\n    _onMarkerDragStart: function() {\n      this._poly.fire('editstart');\n    },\n\n    _spliceLatLngs: function() {\n      var latlngs = this._defaultShape();\n      var removed = [].splice.apply(latlngs, arguments);\n      this._poly._convertLatLngs(latlngs, true);\n      this._poly.redraw();\n      return removed;\n    },\n\n    _removeMarker: function(marker) {\n      var i = marker._index;\n\n      this._markerGroup.removeLayer(marker);\n      this._markers.splice(i, 1);\n      this._spliceLatLngs(i, 1);\n      this._updateIndexes(i, -1);\n\n      marker\n        .off('dragstart', this._onMarkerDragStart, this)\n        .off('drag', this._onMarkerDrag, this)\n        .off('dragend', this._fireEdit, this)\n        .off('touchmove', this._onMarkerDrag, this)\n        .off('touchend', this._fireEdit, this)\n        .off('click', this._onMarkerClick, this)\n        .off('MSPointerMove', this._onTouchMove, this)\n        .off('MSPointerUp', this._fireEdit, this);\n    },\n\n    _fireEdit: function() {\n      this._poly.edited = true;\n      this._poly.fire('edit');\n      this._poly._map.fire(L.Draw.Event.EDITVERTEX, {\n        layers: this._markerGroup,\n        poly: this._poly,\n      });\n    },\n\n    _onMarkerDrag: function(e) {\n      var marker = e.target;\n      var poly = this._poly;\n\n      L.extend(marker._origLatLng, marker._latlng);\n\n      if (marker._middleLeft) {\n        marker._middleLeft.setLatLng(this._getMiddleLatLng(marker._prev, marker));\n      }\n      if (marker._middleRight) {\n        marker._middleRight.setLatLng(this._getMiddleLatLng(marker, marker._next));\n      }\n\n      if (poly.options.poly) {\n        var tooltip = poly._map._editTooltip; // Access the tooltip\n\n        // If we don't allow intersections and the polygon intersects\n        if (!poly.options.poly.allowIntersection && poly.intersects()) {\n          var originalColor = poly.options.color;\n          poly.setStyle({\n            color: this.options.drawError.color,\n          });\n\n          // Manually trigger 'dragend' behavior on marker we are about to remove\n          // WORKAROUND: introduced in 1.0.0-rc2, may be related to #4484\n          if (L.version.indexOf('0.7') !== 0) {\n            marker.dragging._draggable._onUp(e);\n          }\n          this._onMarkerClick(e); // Remove violating marker\n          // FIXME: Reset the marker to it's original position (instead of remove)\n\n          if (tooltip) {\n            tooltip.updateContent({\n              text: L.drawLocal.draw.handlers.polyline.error,\n            });\n          }\n\n          // Reset everything back to normal after a second\n          setTimeout(function() {\n            poly.setStyle({\n              color: originalColor,\n            });\n            if (tooltip) {\n              tooltip.updateContent({\n                text: L.drawLocal.edit.handlers.edit.tooltip.text,\n                subtext: L.drawLocal.edit.handlers.edit.tooltip.subtext,\n              });\n            }\n          }, 1000);\n        }\n      }\n      //refresh the bounds when draging\n      this._poly._bounds._southWest = L.latLng(Infinity, Infinity);\n      this._poly._bounds._northEast = L.latLng(-Infinity, -Infinity);\n      var latlngs = this._poly.getLatLngs();\n      this._poly._convertLatLngs(latlngs, true);\n      this._poly.redraw();\n      this._poly.fire('editdrag');\n    },\n\n    _onMarkerClick: function(e) {\n      var minPoints = L.Polygon && this._poly instanceof L.Polygon ? 4 : 3,\n        marker = e.target;\n\n      // If removing this point would create an invalid polyline/polygon don't remove\n      if (this._defaultShape().length < minPoints) {\n        return;\n      }\n\n      // remove the marker\n      this._removeMarker(marker);\n\n      // update prev/next links of adjacent markers\n      this._updatePrevNext(marker._prev, marker._next);\n\n      // remove ghost markers near the removed marker\n      if (marker._middleLeft) {\n        this._markerGroup.removeLayer(marker._middleLeft);\n      }\n      if (marker._middleRight) {\n        this._markerGroup.removeLayer(marker._middleRight);\n      }\n\n      // create a ghost marker in place of the removed one\n      if (marker._prev && marker._next) {\n        this._createMiddleMarker(marker._prev, marker._next);\n      } else if (!marker._prev) {\n        marker._next._middleLeft = null;\n      } else if (!marker._next) {\n        marker._prev._middleRight = null;\n      }\n\n      this._fireEdit();\n    },\n\n    _onContextMenu: function(e) {\n      var marker = e.target;\n      var poly = this._poly;\n      this._poly._map.fire(L.Draw.Event.MARKERCONTEXT, {\n        marker: marker,\n        layers: this._markerGroup,\n        poly: this._poly,\n      });\n      L.DomEvent.stopPropagation;\n    },\n\n    _onTouchMove: function(e) {\n      var layerPoint = this._map.mouseEventToLayerPoint(e.originalEvent.touches[0]),\n        latlng = this._map.layerPointToLatLng(layerPoint),\n        marker = e.target;\n\n      L.extend(marker._origLatLng, latlng);\n\n      if (marker._middleLeft) {\n        marker._middleLeft.setLatLng(this._getMiddleLatLng(marker._prev, marker));\n      }\n      if (marker._middleRight) {\n        marker._middleRight.setLatLng(this._getMiddleLatLng(marker, marker._next));\n      }\n\n      this._poly.redraw();\n      this.updateMarkers();\n    },\n\n    _updateIndexes: function(index, delta) {\n      this._markerGroup.eachLayer(function(marker) {\n        if (marker._index > index) {\n          marker._index += delta;\n        }\n      });\n    },\n\n    _createMiddleMarker: function(marker1, marker2) {\n      var latlng = this._getMiddleLatLng(marker1, marker2),\n        marker = this._createMarker(latlng),\n        onClick,\n        onDragStart,\n        onDragEnd;\n\n      marker.setOpacity(0.6);\n\n      marker1._middleRight = marker2._middleLeft = marker;\n\n      onDragStart = function() {\n        marker.off('touchmove', onDragStart, this);\n        var i = marker2._index;\n\n        marker._index = i;\n\n        marker.off('click', onClick, this).on('click', this._onMarkerClick, this);\n\n        latlng.lat = marker.getLatLng().lat;\n        latlng.lng = marker.getLatLng().lng;\n        this._spliceLatLngs(i, 0, latlng);\n        this._markers.splice(i, 0, marker);\n\n        marker.setOpacity(1);\n\n        this._updateIndexes(i, 1);\n        marker2._index++;\n        this._updatePrevNext(marker1, marker);\n        this._updatePrevNext(marker, marker2);\n\n        this._poly.fire('editstart');\n      };\n\n      onDragEnd = function() {\n        marker.off('dragstart', onDragStart, this);\n        marker.off('dragend', onDragEnd, this);\n        marker.off('touchmove', onDragStart, this);\n\n        this._createMiddleMarker(marker1, marker);\n        this._createMiddleMarker(marker, marker2);\n      };\n\n      onClick = function() {\n        onDragStart.call(this);\n        onDragEnd.call(this);\n        this._fireEdit();\n      };\n\n      marker\n        .on('click', onClick, this)\n        .on('dragstart', onDragStart, this)\n        .on('dragend', onDragEnd, this)\n        .on('touchmove', onDragStart, this);\n\n      this._markerGroup.addLayer(marker);\n    },\n\n    _updatePrevNext: function(marker1, marker2) {\n      if (marker1) {\n        marker1._next = marker2;\n      }\n      if (marker2) {\n        marker2._prev = marker1;\n      }\n    },\n\n    _getMiddleLatLng: function(marker1, marker2) {\n      var map = this._poly._map,\n        p1 = map.project(marker1.getLatLng()),\n        p2 = map.project(marker2.getLatLng());\n\n      return map.unproject(p1._add(p2)._divideBy(2));\n    },\n  });\n\n  L.Polyline.addInitHook(function() {\n    // Check to see if handler has already been initialized. This is to support versions of Leaflet that still have L.Handler.PolyEdit\n    if (this.editing) {\n      return;\n    }\n\n    if (L.Edit.Poly) {\n      this.editing = new L.Edit.Poly(this);\n\n      if (this.options.editable) {\n        this.editing.enable();\n      }\n    }\n\n    this.on('add', function() {\n      if (this.editing && this.editing.enabled()) {\n        this.editing.addHooks();\n      }\n    });\n\n    this.on('remove', function() {\n      if (this.editing && this.editing.enabled()) {\n        this.editing.removeHooks();\n      }\n    });\n  });\n\n  L.Edit = L.Edit || {};\n  /**\n   * @class L.Edit.SimpleShape\n   * @aka Edit.SimpleShape\n   */\n  L.Edit.SimpleShape = L.Handler.extend({\n    options: {\n      moveIcon: new L.DivIcon({\n        iconSize: new L.Point(8, 8),\n        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move',\n      }),\n      resizeIcon: new L.DivIcon({\n        iconSize: new L.Point(8, 8),\n        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize',\n      }),\n      touchMoveIcon: new L.DivIcon({\n        iconSize: new L.Point(20, 20),\n        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move leaflet-touch-icon',\n      }),\n      touchResizeIcon: new L.DivIcon({\n        iconSize: new L.Point(20, 20),\n        className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize leaflet-touch-icon',\n      }),\n    },\n\n    // @method intialize(): void\n    initialize: function(shape, options) {\n      // if touch, switch to touch icon\n      if (L.Browser.touch) {\n        this.options.moveIcon = this.options.touchMoveIcon;\n        this.options.resizeIcon = this.options.touchResizeIcon;\n      }\n\n      this._shape = shape;\n      L.Util.setOptions(this, options);\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler\n    addHooks: function() {\n      var shape = this._shape;\n      if (this._shape._map) {\n        this._map = this._shape._map;\n        shape.setStyle(shape.options.editing);\n\n        if (shape._map) {\n          this._map = shape._map;\n          if (!this._markerGroup) {\n            this._initMarkers();\n          }\n          this._map.addLayer(this._markerGroup);\n        }\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler\n    removeHooks: function() {\n      var shape = this._shape;\n\n      shape.setStyle(shape.options.original);\n\n      if (shape._map) {\n        this._unbindMarker(this._moveMarker);\n\n        for (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\n          this._unbindMarker(this._resizeMarkers[i]);\n        }\n        this._resizeMarkers = null;\n\n        this._map.removeLayer(this._markerGroup);\n        delete this._markerGroup;\n      }\n\n      this._map = null;\n    },\n\n    // @method updateMarkers(): void\n    // Remove the edit markers from this layer\n    updateMarkers: function() {\n      this._markerGroup.clearLayers();\n      this._initMarkers();\n    },\n\n    _initMarkers: function() {\n      if (!this._markerGroup) {\n        this._markerGroup = new L.LayerGroup();\n      }\n\n      // Create center marker\n      this._createMoveMarker();\n\n      // Create edge marker\n      this._createResizeMarker();\n    },\n\n    _createMoveMarker: function() {\n      // Children override\n    },\n\n    _createResizeMarker: function() {\n      // Children override\n    },\n\n    _createMarker: function(latlng, icon) {\n      // Extending L.Marker in TouchEvents.js to include touch.\n      var marker = new L.Marker.Touch(latlng, {\n        draggable: true,\n        icon: icon,\n        zIndexOffset: 10,\n      });\n\n      this._bindMarker(marker);\n\n      this._markerGroup.addLayer(marker);\n\n      return marker;\n    },\n\n    _bindMarker: function(marker) {\n      marker\n        .on('dragstart', this._onMarkerDragStart, this)\n        .on('drag', this._onMarkerDrag, this)\n        .on('dragend', this._onMarkerDragEnd, this)\n        .on('touchstart', this._onTouchStart, this)\n        .on('touchmove', this._onTouchMove, this)\n        .on('MSPointerMove', this._onTouchMove, this)\n        .on('touchend', this._onTouchEnd, this)\n        .on('MSPointerUp', this._onTouchEnd, this);\n    },\n\n    _unbindMarker: function(marker) {\n      marker\n        .off('dragstart', this._onMarkerDragStart, this)\n        .off('drag', this._onMarkerDrag, this)\n        .off('dragend', this._onMarkerDragEnd, this)\n        .off('touchstart', this._onTouchStart, this)\n        .off('touchmove', this._onTouchMove, this)\n        .off('MSPointerMove', this._onTouchMove, this)\n        .off('touchend', this._onTouchEnd, this)\n        .off('MSPointerUp', this._onTouchEnd, this);\n    },\n\n    _onMarkerDragStart: function(e) {\n      var marker = e.target;\n      marker.setOpacity(0);\n\n      this._shape.fire('editstart');\n    },\n\n    _fireEdit: function() {\n      this._shape.edited = true;\n      this._shape.fire('edit');\n    },\n\n    _onMarkerDrag: function(e) {\n      var marker = e.target,\n        latlng = marker.getLatLng();\n\n      if (marker === this._moveMarker) {\n        this._move(latlng);\n      } else {\n        this._resize(latlng);\n      }\n\n      this._shape.redraw();\n      this._shape.fire('editdrag');\n    },\n\n    _onMarkerDragEnd: function(e) {\n      var marker = e.target;\n      marker.setOpacity(1);\n\n      this._fireEdit();\n    },\n\n    _onTouchStart: function(e) {\n      L.Edit.SimpleShape.prototype._onMarkerDragStart.call(this, e);\n\n      if (typeof this._getCorners === 'function') {\n        // Save a reference to the opposite point\n        var corners = this._getCorners(),\n          marker = e.target,\n          currentCornerIndex = marker._cornerIndex;\n\n        marker.setOpacity(0);\n\n        // Copyed from Edit.Rectangle.js line 23 _onMarkerDragStart()\n        // Latlng is null otherwise.\n        this._oppositeCorner = corners[(currentCornerIndex + 2) % 4];\n        this._toggleCornerMarkers(0, currentCornerIndex);\n      }\n\n      this._shape.fire('editstart');\n    },\n\n    _onTouchMove: function(e) {\n      var layerPoint = this._map.mouseEventToLayerPoint(e.originalEvent.touches[0]),\n        latlng = this._map.layerPointToLatLng(layerPoint),\n        marker = e.target;\n\n      if (marker === this._moveMarker) {\n        this._move(latlng);\n      } else {\n        this._resize(latlng);\n      }\n\n      this._shape.redraw();\n\n      // prevent touchcancel in IOS\n      // e.preventDefault();\n      return false;\n    },\n\n    _onTouchEnd: function(e) {\n      var marker = e.target;\n      marker.setOpacity(1);\n      this.updateMarkers();\n      this._fireEdit();\n    },\n\n    _move: function() {\n      // Children override\n    },\n\n    _resize: function() {\n      // Children override\n    },\n  });\n\n  L.Edit = L.Edit || {};\n  /**\n   * @class L.Edit.Rectangle\n   * @aka Edit.Rectangle\n   * @inherits L.Edit.SimpleShape\n   */\n  L.Edit.Rectangle = L.Edit.SimpleShape.extend({\n    _createMoveMarker: function() {\n      var bounds = this._shape.getBounds(),\n        center = bounds.getCenter();\n\n      this._moveMarker = this._createMarker(center, this.options.moveIcon);\n    },\n\n    _createResizeMarker: function() {\n      var corners = this._getCorners();\n\n      this._resizeMarkers = [];\n\n      for (var i = 0, l = corners.length; i < l; i++) {\n        this._resizeMarkers.push(this._createMarker(corners[i], this.options.resizeIcon));\n        // Monkey in the corner index as we will need to know this for dragging\n        this._resizeMarkers[i]._cornerIndex = i;\n      }\n    },\n\n    _onMarkerDragStart: function(e) {\n      L.Edit.SimpleShape.prototype._onMarkerDragStart.call(this, e);\n\n      // Save a reference to the opposite point\n      var corners = this._getCorners(),\n        marker = e.target,\n        currentCornerIndex = marker._cornerIndex;\n\n      this._oppositeCorner = corners[(currentCornerIndex + 2) % 4];\n\n      this._toggleCornerMarkers(0, currentCornerIndex);\n    },\n\n    _onMarkerDragEnd: function(e) {\n      var marker = e.target,\n        bounds,\n        center;\n\n      // Reset move marker position to the center\n      if (marker === this._moveMarker) {\n        bounds = this._shape.getBounds();\n        center = bounds.getCenter();\n\n        marker.setLatLng(center);\n      }\n\n      this._toggleCornerMarkers(1);\n\n      this._repositionCornerMarkers();\n\n      L.Edit.SimpleShape.prototype._onMarkerDragEnd.call(this, e);\n    },\n\n    _move: function(newCenter) {\n      var latlngs = this._shape._defaultShape\n          ? this._shape._defaultShape()\n          : this._shape.getLatLngs(),\n        bounds = this._shape.getBounds(),\n        center = bounds.getCenter(),\n        offset,\n        newLatLngs = [];\n\n      // Offset the latlngs to the new center\n      for (var i = 0, l = latlngs.length; i < l; i++) {\n        offset = [latlngs[i].lat - center.lat, latlngs[i].lng - center.lng];\n        newLatLngs.push([newCenter.lat + offset[0], newCenter.lng + offset[1]]);\n      }\n\n      this._shape.setLatLngs(newLatLngs);\n\n      // Reposition the resize markers\n      this._repositionCornerMarkers();\n\n      this._map.fire(L.Draw.Event.EDITMOVE, {\n        layer: this._shape,\n      });\n    },\n\n    _resize: function(latlng) {\n      var bounds;\n\n      // Update the shape based on the current position of this corner and the opposite point\n      this._shape.setBounds(L.latLngBounds(latlng, this._oppositeCorner));\n\n      // Reposition the move marker\n      bounds = this._shape.getBounds();\n      this._moveMarker.setLatLng(bounds.getCenter());\n\n      this._map.fire(L.Draw.Event.EDITRESIZE, {\n        layer: this._shape,\n      });\n    },\n\n    _getCorners: function() {\n      var bounds = this._shape.getBounds(),\n        nw = bounds.getNorthWest(),\n        ne = bounds.getNorthEast(),\n        se = bounds.getSouthEast(),\n        sw = bounds.getSouthWest();\n\n      return [nw, ne, se, sw];\n    },\n\n    _toggleCornerMarkers: function(opacity) {\n      for (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\n        this._resizeMarkers[i].setOpacity(opacity);\n      }\n    },\n\n    _repositionCornerMarkers: function() {\n      var corners = this._getCorners();\n\n      for (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\n        this._resizeMarkers[i].setLatLng(corners[i]);\n      }\n    },\n  });\n\n  L.Rectangle.addInitHook(function() {\n    if (L.Edit.Rectangle) {\n      this.editing = new L.Edit.Rectangle(this);\n\n      if (this.options.editable) {\n        this.editing.enable();\n      }\n    }\n  });\n\n  L.Edit = L.Edit || {};\n  /**\n   * @class L.Edit.CircleMarker\n   * @aka Edit.Circle\n   * @inherits L.Edit.SimpleShape\n   */\n  L.Edit.CircleMarker = L.Edit.SimpleShape.extend({\n    _createMoveMarker: function() {\n      var center = this._shape.getLatLng();\n\n      this._moveMarker = this._createMarker(center, this.options.moveIcon);\n    },\n\n    _createResizeMarker: function() {\n      // To avoid an undefined check in L.Edit.SimpleShape.removeHooks\n      this._resizeMarkers = [];\n    },\n\n    _move: function(latlng) {\n      if (this._resizeMarkers.length) {\n        var resizemarkerPoint = this._getResizeMarkerPoint(latlng);\n        // Move the resize marker\n        this._resizeMarkers[0].setLatLng(resizemarkerPoint);\n      }\n\n      // Move the circle\n      this._shape.setLatLng(latlng);\n\n      this._map.fire(L.Draw.Event.EDITMOVE, {\n        layer: this._shape,\n      });\n    },\n  });\n\n  L.CircleMarker.addInitHook(function() {\n    if (L.Edit.CircleMarker) {\n      this.editing = new L.Edit.CircleMarker(this);\n\n      if (this.options.editable) {\n        this.editing.enable();\n      }\n    }\n\n    this.on('add', function() {\n      if (this.editing && this.editing.enabled()) {\n        this.editing.addHooks();\n      }\n    });\n\n    this.on('remove', function() {\n      if (this.editing && this.editing.enabled()) {\n        this.editing.removeHooks();\n      }\n    });\n  });\n\n  L.Edit = L.Edit || {};\n  /**\n   * @class L.Edit.Circle\n   * @aka Edit.Circle\n   * @inherits L.Edit.CircleMarker\n   */\n  L.Edit.Circle = L.Edit.CircleMarker.extend({\n    _createResizeMarker: function() {\n      var center = this._shape.getLatLng(),\n        resizemarkerPoint = this._getResizeMarkerPoint(center);\n\n      this._resizeMarkers = [];\n      this._resizeMarkers.push(this._createMarker(resizemarkerPoint, this.options.resizeIcon));\n    },\n\n    _getResizeMarkerPoint: function(latlng) {\n      // From L.shape.getBounds()\n      var delta = this._shape._radius * Math.cos(Math.PI / 4),\n        point = this._map.project(latlng);\n      return this._map.unproject([point.x + delta, point.y - delta]);\n    },\n\n    _resize: function(latlng) {\n      var moveLatLng = this._moveMarker.getLatLng();\n\n      // Calculate the radius based on the version\n      if (L.GeometryUtil.isVersion07x()) {\n        radius = moveLatLng.distanceTo(latlng);\n      } else {\n        radius = this._map.distance(moveLatLng, latlng);\n      }\n      this._shape.setRadius(radius);\n\n      this._map._editTooltip.updateContent({\n        text:\n          L.drawLocal.edit.handlers.edit.tooltip.subtext +\n          '<br />' +\n          L.drawLocal.edit.handlers.edit.tooltip.text,\n        subtext:\n          L.drawLocal.draw.handlers.circle.radius +\n          ': ' +\n          L.GeometryUtil.readableDistance(radius, true, this.options.feet, this.options.nautic),\n      });\n\n      this._shape.setRadius(radius);\n\n      this._map.fire(L.Draw.Event.EDITRESIZE, {\n        layer: this._shape,\n      });\n    },\n  });\n\n  L.Circle.addInitHook(function() {\n    if (L.Edit.Circle) {\n      this.editing = new L.Edit.Circle(this);\n\n      if (this.options.editable) {\n        this.editing.enable();\n      }\n    }\n\n    this.on('add', function() {\n      if (this.editing && this.editing.enabled()) {\n        this.editing.addHooks();\n      }\n    });\n\n    this.on('remove', function() {\n      if (this.editing && this.editing.enabled()) {\n        this.editing.removeHooks();\n      }\n    });\n  });\n\n  L.Map.mergeOptions({\n    touchExtend: true,\n  });\n\n  /**\n   * @class L.Map.TouchExtend\n   * @aka TouchExtend\n   */\n  L.Map.TouchExtend = L.Handler.extend({\n    // @method initialize(): void\n    // Sets TouchExtend private accessor variables\n    initialize: function(map) {\n      this._map = map;\n      this._container = map._container;\n      this._pane = map._panes.overlayPane;\n    },\n\n    // @method addHooks(): void\n    // Adds dom listener events to the map container\n    addHooks: function() {\n      L.DomEvent.on(this._container, 'touchstart', this._onTouchStart, this);\n      L.DomEvent.on(this._container, 'touchend', this._onTouchEnd, this);\n      L.DomEvent.on(this._container, 'touchmove', this._onTouchMove, this);\n      if (this._detectIE()) {\n        L.DomEvent.on(this._container, 'MSPointerDown', this._onTouchStart, this);\n        L.DomEvent.on(this._container, 'MSPointerUp', this._onTouchEnd, this);\n        L.DomEvent.on(this._container, 'MSPointerMove', this._onTouchMove, this);\n        L.DomEvent.on(this._container, 'MSPointerCancel', this._onTouchCancel, this);\n      } else {\n        L.DomEvent.on(this._container, 'touchcancel', this._onTouchCancel, this);\n        L.DomEvent.on(this._container, 'touchleave', this._onTouchLeave, this);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Removes dom listener events from the map container\n    removeHooks: function() {\n      L.DomEvent.off(this._container, 'touchstart', this._onTouchStart);\n      L.DomEvent.off(this._container, 'touchend', this._onTouchEnd);\n      L.DomEvent.off(this._container, 'touchmove', this._onTouchMove);\n      if (this._detectIE()) {\n        L.DomEvent.off(this._container, 'MSPointerDowm', this._onTouchStart);\n        L.DomEvent.off(this._container, 'MSPointerUp', this._onTouchEnd);\n        L.DomEvent.off(this._container, 'MSPointerMove', this._onTouchMove);\n        L.DomEvent.off(this._container, 'MSPointerCancel', this._onTouchCancel);\n      } else {\n        L.DomEvent.off(this._container, 'touchcancel', this._onTouchCancel);\n        L.DomEvent.off(this._container, 'touchleave', this._onTouchLeave);\n      }\n    },\n\n    _touchEvent: function(e, type) {\n      // #TODO: fix the pageX error that is do a bug in Android where a single touch triggers two click events\n      // _filterClick is what leaflet uses as a workaround.\n      // This is a problem with more things than just android. Another problem is touchEnd has no touches in\n      // its touch list.\n      var touchEvent = {};\n      if (typeof e.touches !== 'undefined') {\n        if (!e.touches.length) {\n          return;\n        }\n        touchEvent = e.touches[0];\n      } else if (e.pointerType === 'touch') {\n        touchEvent = e;\n        if (!this._filterClick(e)) {\n          return;\n        }\n      } else {\n        return;\n      }\n\n      var containerPoint = this._map.mouseEventToContainerPoint(touchEvent),\n        layerPoint = this._map.mouseEventToLayerPoint(touchEvent),\n        latlng = this._map.layerPointToLatLng(layerPoint);\n\n      this._map.fire(type, {\n        latlng: latlng,\n        layerPoint: layerPoint,\n        containerPoint: containerPoint,\n        pageX: touchEvent.pageX,\n        pageY: touchEvent.pageY,\n        originalEvent: e,\n      });\n    },\n\n    /** Borrowed from Leaflet and modified for bool ops **/\n    _filterClick: function(e) {\n      var timeStamp = e.timeStamp || e.originalEvent.timeStamp,\n        elapsed = L.DomEvent._lastClick && timeStamp - L.DomEvent._lastClick;\n\n      // are they closer together than 500ms yet more than 100ms?\n      // Android typically triggers them ~300ms apart while multiple listeners\n      // on the same event should be triggered far faster;\n      // or check if click is simulated on the element, and if it is, reject any non-simulated events\n      if (\n        (elapsed && elapsed > 100 && elapsed < 500) ||\n        (e.target._simulatedClick && !e._simulated)\n      ) {\n        L.DomEvent.stop(e);\n        return false;\n      }\n      L.DomEvent._lastClick = timeStamp;\n      return true;\n    },\n\n    _onTouchStart: function(e) {\n      if (!this._map._loaded) {\n        return;\n      }\n\n      var type = 'touchstart';\n      this._touchEvent(e, type);\n    },\n\n    _onTouchEnd: function(e) {\n      if (!this._map._loaded) {\n        return;\n      }\n\n      var type = 'touchend';\n      this._touchEvent(e, type);\n    },\n\n    _onTouchCancel: function(e) {\n      if (!this._map._loaded) {\n        return;\n      }\n\n      var type = 'touchcancel';\n      if (this._detectIE()) {\n        type = 'pointercancel';\n      }\n      this._touchEvent(e, type);\n    },\n\n    _onTouchLeave: function(e) {\n      if (!this._map._loaded) {\n        return;\n      }\n\n      var type = 'touchleave';\n      this._touchEvent(e, type);\n    },\n\n    _onTouchMove: function(e) {\n      if (!this._map._loaded) {\n        return;\n      }\n\n      var type = 'touchmove';\n      this._touchEvent(e, type);\n    },\n\n    _detectIE: function() {\n      var ua = window.navigator.userAgent;\n\n      var msie = ua.indexOf('MSIE ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('Trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('Edge/');\n      if (edge > 0) {\n        // IE 12 => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      }\n\n      // other browser\n      return false;\n    },\n  });\n\n  L.Map.addInitHook('addHandler', 'touchExtend', L.Map.TouchExtend);\n\n  /**\n   * @class L.Marker.Touch\n   * @aka Marker.Touch\n   *\n   * This isn't full Touch support. This is just to get markers to also support dom touch events after creation\n   * #TODO: find a better way of getting markers to support touch.\n   */\n  L.Marker.Touch = L.Marker.extend({\n    _initInteraction: function() {\n      if (!this.addInteractiveTarget) {\n        // 0.7.x support\n        return this._initInteractionLegacy();\n      }\n      // TODO this may need be updated to re-add touch events for 1.0+\n      return L.Marker.prototype._initInteraction.apply(this);\n    },\n\n    // This is an exact copy of https://github.com/Leaflet/Leaflet/blob/v0.7/src/layer/marker/Marker.js\n    // with the addition of the touch events\n    _initInteractionLegacy: function() {\n      if (!this.options.clickable) {\n        return;\n      }\n\n      // TODO refactor into something shared with Map/Path/etc. to DRY it up\n\n      var icon = this._icon,\n        events = [\n          'dblclick',\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'contextmenu',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ];\n      if (this._detectIE) {\n        events.concat(['MSPointerDown', 'MSPointerUp', 'MSPointerMove', 'MSPointerCancel']);\n      } else {\n        events.concat(['touchcancel']);\n      }\n\n      L.DomUtil.addClass(icon, 'leaflet-clickable');\n      L.DomEvent.on(icon, 'click', this._onMouseClick, this);\n      L.DomEvent.on(icon, 'keypress', this._onKeyPress, this);\n\n      for (var i = 0; i < events.length; i++) {\n        L.DomEvent.on(icon, events[i], this._fireMouseEvent, this);\n      }\n\n      if (L.Handler.MarkerDrag) {\n        this.dragging = new L.Handler.MarkerDrag(this);\n\n        if (this.options.draggable) {\n          this.dragging.enable();\n        }\n      }\n    },\n\n    _detectIE: function() {\n      var ua = window.navigator.userAgent;\n\n      var msie = ua.indexOf('MSIE ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('Trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('Edge/');\n      if (edge > 0) {\n        // IE 12 => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      }\n\n      // other browser\n      return false;\n    },\n  });\n\n  /**\n   * @class L.LatLngUtil\n   * @aka LatLngUtil\n   */\n  L.LatLngUtil = {\n    // Clones a LatLngs[], returns [][]\n\n    // @method cloneLatLngs(LatLngs[]): L.LatLngs[]\n    // Clone the latLng point or points or nested points and return an array with those points\n    cloneLatLngs: function(latlngs) {\n      var clone = [];\n      for (var i = 0, l = latlngs.length; i < l; i++) {\n        // Check for nested array (Polyline/Polygon)\n        if (Array.isArray(latlngs[i])) {\n          clone.push(L.LatLngUtil.cloneLatLngs(latlngs[i]));\n        } else {\n          clone.push(this.cloneLatLng(latlngs[i]));\n        }\n      }\n      return clone;\n    },\n\n    // @method cloneLatLng(LatLng): L.LatLng\n    // Clone the latLng and return a new LatLng object.\n    cloneLatLng: function(latlng) {\n      return L.latLng(latlng.lat, latlng.lng);\n    },\n  };\n  (function() {\n    var defaultPrecision = {\n      km: 2,\n      ha: 2,\n      m: 0,\n      mi: 2,\n      ac: 2,\n      yd: 0,\n      ft: 0,\n      nm: 2,\n    };\n\n    /**\n     * @class L.GeometryUtil\n     * @aka GeometryUtil\n     */\n    L.GeometryUtil = L.extend(L.GeometryUtil || {}, {\n      // Ported from the OpenLayers implementation. See https://github.com/openlayers/openlayers/blob/master/lib/OpenLayers/Geometry/LinearRing.js#L270\n\n      // @method geodesicArea(): number\n      geodesicArea: function(latLngs) {\n        var pointsCount = latLngs.length,\n          area = 0.0,\n          d2r = Math.PI / 180,\n          p1,\n          p2;\n\n        if (pointsCount > 2) {\n          for (var i = 0; i < pointsCount; i++) {\n            p1 = latLngs[i];\n            p2 = latLngs[(i + 1) % pointsCount];\n            area += (p2.lng - p1.lng) * d2r * (2 + Math.sin(p1.lat * d2r) + Math.sin(p2.lat * d2r));\n          }\n          area = (area * 6378137.0 * 6378137.0) / 2.0;\n        }\n\n        return Math.abs(area);\n      },\n\n      // @method formattedNumber(n, precision): string\n      // Returns n in specified number format (if defined) and precision\n      formattedNumber: function(n, precision) {\n        var formatted = parseFloat(n).toFixed(precision),\n          format = L.drawLocal.format && L.drawLocal.format.numeric,\n          delimiters = format && format.delimiters,\n          thousands = delimiters && delimiters.thousands,\n          decimal = delimiters && delimiters.decimal;\n\n        if (thousands || decimal) {\n          var splitValue = formatted.split('.');\n          formatted = thousands\n            ? splitValue[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + thousands)\n            : splitValue[0];\n          decimal = decimal || '.';\n          if (splitValue.length > 1) {\n            formatted = formatted + decimal + splitValue[1];\n          }\n        }\n\n        return formatted;\n      },\n\n      // @method readableArea(area, isMetric, precision): string\n      // Returns a readable area string in yards or metric.\n      // The value will be rounded as defined by the precision option object.\n      readableArea: function(area, isMetric, precision) {\n        var areaStr,\n          units,\n          type,\n          precision = L.Util.extend({}, defaultPrecision, precision);\n\n        if (isMetric) {\n          units = ['ha', 'm'];\n          type = typeof isMetric;\n          if (type === 'string') {\n            units = [isMetric];\n          } else if (type !== 'boolean') {\n            units = isMetric;\n          }\n\n          if (area >= 1000000 && units.indexOf('km') !== -1) {\n            areaStr = L.GeometryUtil.formattedNumber(area * 0.000001, precision['km']) + ' km²';\n          } else if (area >= 10000 && units.indexOf('ha') !== -1) {\n            areaStr = L.GeometryUtil.formattedNumber(area * 0.0001, precision['ha']) + ' ha';\n          } else {\n            areaStr = L.GeometryUtil.formattedNumber(area, precision['m']) + ' m²';\n          }\n        } else {\n          area /= 0.836127; // Square yards in 1 meter\n\n          if (area >= 3097600) {\n            //3097600 square yards in 1 square mile\n            areaStr = L.GeometryUtil.formattedNumber(area / 3097600, precision['mi']) + ' mi²';\n          } else if (area >= 4840) {\n            //4840 square yards in 1 acre\n            areaStr = L.GeometryUtil.formattedNumber(area / 4840, precision['ac']) + ' acres';\n          } else {\n            areaStr = L.GeometryUtil.formattedNumber(area, precision['yd']) + ' yd²';\n          }\n        }\n\n        return areaStr;\n      },\n\n      // @method readableDistance(distance, units): string\n      // Converts a metric distance to one of [ feet, nauticalMile, metric or yards ] string\n      //\n      // @alternative\n      // @method readableDistance(distance, isMetric, useFeet, isNauticalMile, precision): string\n      // Converts metric distance to distance string.\n      // The value will be rounded as defined by the precision option object.\n      readableDistance: function(distance, isMetric, isFeet, isNauticalMile, precision) {\n        var distanceStr,\n          units,\n          precision = L.Util.extend({}, defaultPrecision, precision);\n\n        if (isMetric) {\n          units = typeof isMetric == 'string' ? isMetric : 'metric';\n        } else if (isFeet) {\n          units = 'feet';\n        } else if (isNauticalMile) {\n          units = 'nauticalMile';\n        } else {\n          units = 'yards';\n        }\n\n        switch (units) {\n          case 'metric':\n            // show metres when distance is < 1km, then show km\n            if (distance > 1000) {\n              distanceStr =\n                L.GeometryUtil.formattedNumber(distance / 1000, precision['km']) + ' km';\n            } else {\n              distanceStr = L.GeometryUtil.formattedNumber(distance, precision['m']) + ' m';\n            }\n            break;\n          case 'feet':\n            distance *= 1.09361 * 3;\n            distanceStr = L.GeometryUtil.formattedNumber(distance, precision['ft']) + ' ft';\n\n            break;\n          case 'nauticalMile':\n            distance *= 0.53996;\n            distanceStr = L.GeometryUtil.formattedNumber(distance / 1000, precision['nm']) + ' nm';\n            break;\n          case 'yards':\n          default:\n            distance *= 1.09361;\n\n            if (distance > 1760) {\n              distanceStr =\n                L.GeometryUtil.formattedNumber(distance / 1760, precision['mi']) + ' miles';\n            } else {\n              distanceStr = L.GeometryUtil.formattedNumber(distance, precision['yd']) + ' yd';\n            }\n            break;\n        }\n        return distanceStr;\n      },\n\n      // @method isVersion07x(): boolean\n      // Returns true if the Leaflet version is 0.7.x, false otherwise.\n      isVersion07x: function() {\n        var version = L.version.split('.');\n        //If Version is == 0.7.*\n        return parseInt(version[0], 10) === 0 && parseInt(version[1], 10) === 7;\n      },\n    });\n  })();\n\n  /**\n   * @class L.LineUtil\n   * @aka Util\n   * @aka L.Utils\n   */\n  L.Util.extend(L.LineUtil, {\n    // @method segmentsIntersect(): boolean\n    // Checks to see if two line segments intersect. Does not handle degenerate cases.\n    // http://compgeom.cs.uiuc.edu/~jeffe/teaching/373/notes/x06-sweepline.pdf\n    segmentsIntersect: function(\n      /*Point*/\n      p,\n      /*Point*/\n      p1,\n      /*Point*/\n      p2,\n      /*Point*/\n      p3\n    ) {\n      return (\n        this._checkCounterclockwise(p, p2, p3) !== this._checkCounterclockwise(p1, p2, p3) &&\n        this._checkCounterclockwise(p, p1, p2) !== this._checkCounterclockwise(p, p1, p3)\n      );\n    },\n\n    // check to see if points are in counterclockwise order\n    _checkCounterclockwise: function(/*Point*/ p, /*Point*/ p1, /*Point*/ p2) {\n      return (p2.y - p.y) * (p1.x - p.x) > (p1.y - p.y) * (p2.x - p.x);\n    },\n  });\n\n  /**\n   * @class L.Polyline\n   * @aka Polyline\n   */\n  L.Polyline.include({\n    // @method intersects(): boolean\n    // Check to see if this polyline has any linesegments that intersect.\n    // NOTE: does not support detecting intersection for degenerate cases.\n    intersects: function() {\n      var points = this._getProjectedPoints(),\n        len = points ? points.length : 0,\n        i,\n        p,\n        p1;\n\n      if (this._tooFewPointsForIntersection()) {\n        return false;\n      }\n\n      for (i = len - 1; i >= 3; i--) {\n        p = points[i - 1];\n        p1 = points[i];\n\n        if (this._lineSegmentsIntersectsRange(p, p1, i - 2)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    // @method newLatLngIntersects(): boolean\n    // Check for intersection if new latlng was added to this polyline.\n    // NOTE: does not support detecting intersection for degenerate cases.\n    newLatLngIntersects: function(latlng, skipFirst) {\n      // Cannot check a polyline for intersecting lats/lngs when not added to the map\n      if (!this._map) {\n        return false;\n      }\n\n      return this.newPointIntersects(this._map.latLngToLayerPoint(latlng), skipFirst);\n    },\n\n    // @method newPointIntersects(): boolean\n    // Check for intersection if new point was added to this polyline.\n    // newPoint must be a layer point.\n    // NOTE: does not support detecting intersection for degenerate cases.\n    newPointIntersects: function(newPoint, skipFirst) {\n      var points = this._getProjectedPoints(),\n        len = points ? points.length : 0,\n        lastPoint = points ? points[len - 1] : null,\n        // The previous previous line segment. Previous line segment doesn't need testing.\n        maxIndex = len - 2;\n\n      if (this._tooFewPointsForIntersection(1)) {\n        return false;\n      }\n\n      return this._lineSegmentsIntersectsRange(lastPoint, newPoint, maxIndex, skipFirst ? 1 : 0);\n    },\n\n    // Polylines with 2 sides can only intersect in cases where points are collinear (we don't support detecting these).\n    // Cannot have intersection when < 3 line segments (< 4 points)\n    _tooFewPointsForIntersection: function(extraPoints) {\n      var points = this._getProjectedPoints(),\n        len = points ? points.length : 0;\n      // Increment length by extraPoints if present\n      len += extraPoints || 0;\n\n      return !points || len <= 3;\n    },\n\n    // Checks a line segment intersections with any line segments before its predecessor.\n    // Don't need to check the predecessor as will never intersect.\n    _lineSegmentsIntersectsRange: function(p, p1, maxIndex, minIndex) {\n      var points = this._getProjectedPoints(),\n        p2,\n        p3;\n\n      minIndex = minIndex || 0;\n\n      // Check all previous line segments (beside the immediately previous) for intersections\n      for (var j = maxIndex; j > minIndex; j--) {\n        p2 = points[j - 1];\n        p3 = points[j];\n\n        if (L.LineUtil.segmentsIntersect(p, p1, p2, p3)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    _getProjectedPoints: function() {\n      if (!this._defaultShape) {\n        return this._originalPoints;\n      }\n      var points = [],\n        _shape = this._defaultShape();\n\n      for (var i = 0; i < _shape.length; i++) {\n        points.push(this._map.latLngToLayerPoint(_shape[i]));\n      }\n      return points;\n    },\n  });\n\n  /**\n   * @class L.Polygon\n   * @aka Polygon\n   */\n  L.Polygon.include({\n    // @method intersects(): boolean\n    // Checks a polygon for any intersecting line segments. Ignores holes.\n    intersects: function() {\n      var polylineIntersects,\n        points = this._getProjectedPoints(),\n        len,\n        firstPoint,\n        lastPoint,\n        maxIndex;\n\n      if (this._tooFewPointsForIntersection()) {\n        return false;\n      }\n\n      polylineIntersects = L.Polyline.prototype.intersects.call(this);\n\n      // If already found an intersection don't need to check for any more.\n      if (polylineIntersects) {\n        return true;\n      }\n\n      len = points.length;\n      firstPoint = points[0];\n      lastPoint = points[len - 1];\n      maxIndex = len - 2;\n\n      // Check the line segment between last and first point. Don't need to check the first line segment (minIndex = 1)\n      return this._lineSegmentsIntersectsRange(lastPoint, firstPoint, maxIndex, 1);\n    },\n  });\n\n  /**\n   * @class L.Control.Draw\n   * @aka L.Draw\n   */\n  L.Control.Draw = L.Control.extend({\n    // Options\n    options: {\n      position: 'topleft',\n      draw: {},\n      edit: false,\n    },\n\n    // @method initialize(): void\n    // Initializes draw control, toolbars from the options\n    initialize: function(options) {\n      if (L.version < '0.7') {\n        throw new Error(\n          'Leaflet.draw 0.2.3+ requires Leaflet 0.7.0+. Download latest from https://github.com/Leaflet/Leaflet/'\n        );\n      }\n\n      L.Control.prototype.initialize.call(this, options);\n\n      var toolbar;\n\n      this._toolbars = {};\n\n      // Initialize toolbars\n      if (L.DrawToolbar && this.options.draw) {\n        toolbar = new L.DrawToolbar(this.options.draw);\n\n        this._toolbars[L.DrawToolbar.TYPE] = toolbar;\n\n        // Listen for when toolbar is enabled\n        this._toolbars[L.DrawToolbar.TYPE].on('enable', this._toolbarEnabled, this);\n      }\n\n      if (L.EditToolbar && this.options.edit) {\n        toolbar = new L.EditToolbar(this.options.edit);\n\n        this._toolbars[L.EditToolbar.TYPE] = toolbar;\n\n        // Listen for when toolbar is enabled\n        this._toolbars[L.EditToolbar.TYPE].on('enable', this._toolbarEnabled, this);\n      }\n      L.toolbar = this; //set global var for editing the toolbar\n    },\n\n    // @method onAdd(): container\n    // Adds the toolbar container to the map\n    onAdd: function(map) {\n      var container = L.DomUtil.create('div', 'leaflet-draw'),\n        addedTopClass = false,\n        topClassName = 'leaflet-draw-toolbar-top',\n        toolbarContainer;\n\n      for (var toolbarId in this._toolbars) {\n        if (this._toolbars.hasOwnProperty(toolbarId)) {\n          toolbarContainer = this._toolbars[toolbarId].addToolbar(map);\n\n          if (toolbarContainer) {\n            // Add class to the first toolbar to remove the margin\n            if (!addedTopClass) {\n              if (!L.DomUtil.hasClass(toolbarContainer, topClassName)) {\n                L.DomUtil.addClass(toolbarContainer.childNodes[0], topClassName);\n              }\n              addedTopClass = true;\n            }\n\n            container.appendChild(toolbarContainer);\n          }\n        }\n      }\n\n      return container;\n    },\n\n    // @method onRemove(): void\n    // Removes the toolbars from the map toolbar container\n    onRemove: function() {\n      for (var toolbarId in this._toolbars) {\n        if (this._toolbars.hasOwnProperty(toolbarId)) {\n          this._toolbars[toolbarId].removeToolbar();\n        }\n      }\n    },\n\n    // @method setDrawingOptions(options): void\n    // Sets options to all toolbar instances\n    setDrawingOptions: function(options) {\n      for (var toolbarId in this._toolbars) {\n        if (this._toolbars[toolbarId] instanceof L.DrawToolbar) {\n          this._toolbars[toolbarId].setOptions(options);\n        }\n      }\n    },\n\n    _toolbarEnabled: function(e) {\n      var enabledToolbar = e.target;\n\n      for (var toolbarId in this._toolbars) {\n        if (this._toolbars[toolbarId] !== enabledToolbar) {\n          this._toolbars[toolbarId].disable();\n        }\n      }\n    },\n  });\n\n  L.Map.mergeOptions({\n    drawControlTooltips: true,\n    drawControl: false,\n  });\n\n  L.Map.addInitHook(function() {\n    if (this.options.drawControl) {\n      this.drawControl = new L.Control.Draw();\n      this.addControl(this.drawControl);\n    }\n  });\n\n  /**\n   * @class L.Draw.Toolbar\n   * @aka Toolbar\n   *\n   * The toolbar class of the API — it is used to create the ui\n   * This will be depreciated\n   *\n   * @example\n   *\n   * ```js\n   *    var toolbar = L.Toolbar();\n   *    toolbar.addToolbar(map);\n   * ```\n   *\n   * ### Disabling a toolbar\n   *\n   * If you do not want a particular toolbar in your app you can turn it off by setting the toolbar to false.\n   *\n   * ```js\n   *      var drawControl = new L.Control.Draw({\n   *          draw: false,\n   *          edit: {\n   *              featureGroup: editableLayers\n   *          }\n   *      });\n   * ```\n   *\n   * ### Disabling a toolbar item\n   *\n   * If you want to turn off a particular toolbar item, set it to false. The following disables drawing polygons and\n   * markers. It also turns off the ability to edit layers.\n   *\n   * ```js\n   *      var drawControl = new L.Control.Draw({\n   *          draw: {\n   *              polygon: false,\n   *              marker: false\n   *          },\n   *          edit: {\n   *              featureGroup: editableLayers,\n   *              edit: false\n   *          }\n   *      });\n   * ```\n   */\n  L.Toolbar = L.Class.extend({\n    // @section Methods for modifying the toolbar\n\n    // @method initialize(options): void\n    // Toolbar constructor\n    initialize: function(options) {\n      L.setOptions(this, options);\n\n      this._modes = {};\n      this._actionButtons = [];\n      this._activeMode = null;\n\n      var version = L.version.split('.');\n      //If Version is >= 1.2.0\n      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n        L.Toolbar.include(L.Evented.prototype);\n      } else {\n        L.Toolbar.include(L.Mixin.Events);\n      }\n    },\n\n    // @method enabled(): boolean\n    // Gets a true/false of whether the toolbar is enabled\n    enabled: function() {\n      return this._activeMode !== null;\n    },\n\n    // @method disable(): void\n    // Disables the toolbar\n    disable: function() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      this._activeMode.handler.disable();\n    },\n\n    // @method addToolbar(map): L.DomUtil\n    // Adds the toolbar to the map and returns the toolbar dom element\n    addToolbar: function(map) {\n      var container = L.DomUtil.create('div', 'leaflet-draw-section'),\n        buttonIndex = 0,\n        buttonClassPrefix = this._toolbarClass || '',\n        modeHandlers = this.getModeHandlers(map),\n        i;\n\n      this._toolbarContainer = L.DomUtil.create('div', 'leaflet-draw-toolbar leaflet-bar');\n      this._map = map;\n\n      for (i = 0; i < modeHandlers.length; i++) {\n        if (modeHandlers[i].enabled) {\n          this._initModeHandler(\n            modeHandlers[i].handler,\n            this._toolbarContainer,\n            buttonIndex++,\n            buttonClassPrefix,\n            modeHandlers[i].title\n          );\n        }\n      }\n\n      // if no buttons were added, do not add the toolbar\n      if (!buttonIndex) {\n        return;\n      }\n\n      // Save button index of the last button, -1 as we would have ++ after the last button\n      this._lastButtonIndex = --buttonIndex;\n\n      // Create empty actions part of the toolbar\n      this._actionsContainer = L.DomUtil.create('ul', 'leaflet-draw-actions');\n\n      // Add draw and cancel containers to the control container\n      container.appendChild(this._toolbarContainer);\n      container.appendChild(this._actionsContainer);\n\n      return container;\n    },\n\n    // @method removeToolbar(): void\n    // Removes the toolbar and drops the handler event listeners\n    removeToolbar: function() {\n      // Dispose each handler\n      for (var handlerId in this._modes) {\n        if (this._modes.hasOwnProperty(handlerId)) {\n          // Unbind handler button\n          this._disposeButton(\n            this._modes[handlerId].button,\n            this._modes[handlerId].handler.enable,\n            this._modes[handlerId].handler\n          );\n\n          // Make sure is disabled\n          this._modes[handlerId].handler.disable();\n\n          // Unbind handler\n          this._modes[handlerId].handler\n            .off('enabled', this._handlerActivated, this)\n            .off('disabled', this._handlerDeactivated, this);\n        }\n      }\n      this._modes = {};\n\n      // Dispose the actions toolbar\n      for (var i = 0, l = this._actionButtons.length; i < l; i++) {\n        this._disposeButton(this._actionButtons[i].button, this._actionButtons[i].callback, this);\n      }\n      this._actionButtons = [];\n      this._actionsContainer = null;\n    },\n\n    _initModeHandler: function(handler, container, buttonIndex, classNamePredix, buttonTitle) {\n      var type = handler.type;\n\n      this._modes[type] = {};\n\n      this._modes[type].handler = handler;\n\n      this._modes[type].button = this._createButton({\n        type: type,\n        title: buttonTitle,\n        className: classNamePredix + '-' + type,\n        container: container,\n        callback: this._modes[type].handler.enable,\n        context: this._modes[type].handler,\n      });\n\n      this._modes[type].buttonIndex = buttonIndex;\n\n      this._modes[type].handler\n        .on('enabled', this._handlerActivated, this)\n        .on('disabled', this._handlerDeactivated, this);\n    },\n\n    /* Detect iOS based on browser User Agent, based on:\n     * http://stackoverflow.com/a/9039885 */\n    _detectIOS: function() {\n      var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n      return iOS;\n    },\n\n    _createButton: function(options) {\n      var link = L.DomUtil.create('a', options.className || '', options.container);\n      // Screen reader tag\n      var sr = L.DomUtil.create('span', 'sr-only', options.container);\n\n      link.href = '#';\n      link.appendChild(sr);\n\n      if (options.title) {\n        link.title = options.title;\n        sr.innerHTML = options.title;\n      }\n\n      if (options.text) {\n        link.innerHTML = options.text;\n        sr.innerHTML = options.text;\n      }\n\n      /* iOS does not use click events */\n      var buttonEvent = this._detectIOS() ? 'touchstart' : 'click';\n\n      L.DomEvent.on(link, 'click', L.DomEvent.stopPropagation)\n        .on(link, 'mousedown', L.DomEvent.stopPropagation)\n        .on(link, 'dblclick', L.DomEvent.stopPropagation)\n        .on(link, 'touchstart', L.DomEvent.stopPropagation)\n        .on(link, 'click', L.DomEvent.preventDefault)\n        .on(link, buttonEvent, options.callback, options.context);\n\n      return link;\n    },\n\n    _disposeButton: function(button, callback) {\n      /* iOS does not use click events */\n      var buttonEvent = this._detectIOS() ? 'touchstart' : 'click';\n\n      L.DomEvent.off(button, 'click', L.DomEvent.stopPropagation)\n        .off(button, 'mousedown', L.DomEvent.stopPropagation)\n        .off(button, 'dblclick', L.DomEvent.stopPropagation)\n        .off(button, 'touchstart', L.DomEvent.stopPropagation)\n        .off(button, 'click', L.DomEvent.preventDefault)\n        .off(button, buttonEvent, callback);\n    },\n\n    _handlerActivated: function(e) {\n      // Disable active mode (if present)\n      this.disable();\n\n      // Cache new active feature\n      this._activeMode = this._modes[e.handler];\n\n      L.DomUtil.addClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\n\n      this._showActionsToolbar();\n\n      this.fire('enable');\n    },\n\n    _handlerDeactivated: function() {\n      this._hideActionsToolbar();\n\n      L.DomUtil.removeClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\n\n      this._activeMode = null;\n\n      this.fire('disable');\n    },\n\n    _createActions: function(handler) {\n      var container = this._actionsContainer,\n        buttons = this.getActions(handler),\n        l = buttons.length,\n        li,\n        di,\n        dl,\n        button;\n\n      // Dispose the actions toolbar (todo: dispose only not used buttons)\n      for (di = 0, dl = this._actionButtons.length; di < dl; di++) {\n        this._disposeButton(this._actionButtons[di].button, this._actionButtons[di].callback);\n      }\n      this._actionButtons = [];\n\n      // Remove all old buttons\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n\n      for (var i = 0; i < l; i++) {\n        if ('enabled' in buttons[i] && !buttons[i].enabled) {\n          continue;\n        }\n\n        li = L.DomUtil.create('li', '', container);\n\n        button = this._createButton({\n          title: buttons[i].title,\n          text: buttons[i].text,\n          container: li,\n          callback: buttons[i].callback,\n          context: buttons[i].context,\n        });\n\n        this._actionButtons.push({\n          button: button,\n          callback: buttons[i].callback,\n        });\n      }\n    },\n\n    _showActionsToolbar: function() {\n      var buttonIndex = this._activeMode.buttonIndex,\n        lastButtonIndex = this._lastButtonIndex,\n        toolbarPosition = this._activeMode.button.offsetTop - 1;\n\n      // Recreate action buttons on every click\n      this._createActions(this._activeMode.handler);\n\n      // Correctly position the cancel button\n      this._actionsContainer.style.top = toolbarPosition + 'px';\n\n      if (buttonIndex === 0) {\n        L.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\n        L.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-top');\n      }\n\n      if (buttonIndex === lastButtonIndex) {\n        L.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\n        L.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\n      }\n\n      this._actionsContainer.style.display = 'block';\n      this._map.fire(L.Draw.Event.TOOLBAROPENED);\n    },\n\n    _hideActionsToolbar: function() {\n      this._actionsContainer.style.display = 'none';\n\n      L.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\n      L.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\n      L.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-top');\n      L.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\n      this._map.fire(L.Draw.Event.TOOLBARCLOSED);\n    },\n  });\n\n  L.Draw = L.Draw || {};\n  /**\n   * @class L.Draw.Tooltip\n   * @aka Tooltip\n   *\n   * The tooltip class — it is used to display the tooltip while drawing\n   * This will be depreciated\n   *\n   * @example\n   *\n   * ```js\n   *    var tooltip = L.Draw.Tooltip();\n   * ```\n   *\n   */\n  L.Draw.Tooltip = L.Class.extend({\n    // @section Methods for modifying draw state\n\n    // @method initialize(map): void\n    // Tooltip constructor\n    initialize: function(map) {\n      this._map = map;\n      this._popupPane = map._panes.popupPane;\n      this._visible = false;\n\n      this._container = map.options.drawControlTooltips\n        ? L.DomUtil.create('div', 'leaflet-draw-tooltip', this._popupPane)\n        : null;\n      this._singleLineLabel = false;\n\n      this._map.on('mouseout', this._onMouseOut, this);\n    },\n\n    // @method dispose(): void\n    // Remove Tooltip DOM and unbind events\n    dispose: function() {\n      this._map.off('mouseout', this._onMouseOut, this);\n\n      if (this._container) {\n        this._popupPane.removeChild(this._container);\n        this._container = null;\n      }\n    },\n\n    // @method updateContent(labelText): this\n    // Changes the tooltip text to string in function call\n    updateContent: function(labelText) {\n      if (!this._container) {\n        return this;\n      }\n      labelText.subtext = labelText.subtext || '';\n\n      // update the vertical position (only if changed)\n      if (labelText.subtext.length === 0 && !this._singleLineLabel) {\n        L.DomUtil.addClass(this._container, 'leaflet-draw-tooltip-single');\n        this._singleLineLabel = true;\n      } else if (labelText.subtext.length > 0 && this._singleLineLabel) {\n        L.DomUtil.removeClass(this._container, 'leaflet-draw-tooltip-single');\n        this._singleLineLabel = false;\n      }\n\n      this._container.innerHTML =\n        (labelText.subtext.length > 0\n          ? '<span class=\"leaflet-draw-tooltip-subtext\">' + labelText.subtext + '</span>' + '<br />'\n          : '') +\n        '<span>' +\n        labelText.text +\n        '</span>';\n\n      if (!labelText.text && !labelText.subtext) {\n        this._visible = false;\n        this._container.style.visibility = 'hidden';\n      } else {\n        this._visible = true;\n        this._container.style.visibility = 'inherit';\n      }\n\n      return this;\n    },\n\n    // @method updatePosition(latlng): this\n    // Changes the location of the tooltip\n    updatePosition: function(latlng) {\n      var pos = this._map.latLngToLayerPoint(latlng),\n        tooltipContainer = this._container;\n\n      if (this._container) {\n        if (this._visible) {\n          tooltipContainer.style.visibility = 'inherit';\n        }\n        L.DomUtil.setPosition(tooltipContainer, pos);\n      }\n\n      return this;\n    },\n\n    // @method showAsError(): this\n    // Applies error class to tooltip\n    showAsError: function() {\n      if (this._container) {\n        L.DomUtil.addClass(this._container, 'leaflet-error-draw-tooltip');\n      }\n      return this;\n    },\n\n    // @method removeError(): this\n    // Removes the error class from the tooltip\n    removeError: function() {\n      if (this._container) {\n        L.DomUtil.removeClass(this._container, 'leaflet-error-draw-tooltip');\n      }\n      return this;\n    },\n\n    _onMouseOut: function() {\n      if (this._container) {\n        this._container.style.visibility = 'hidden';\n      }\n    },\n  });\n\n  /**\n   * @class L.DrawToolbar\n   * @aka Toolbar\n   */\n  L.DrawToolbar = L.Toolbar.extend({\n    statics: {\n      TYPE: 'draw',\n    },\n\n    options: {\n      circlemarker: {},\n      polyline: {},\n      polygon: {},\n      rectangle: {},\n      circle: {},\n      marker: {},\n    },\n\n    // @method initialize(): void\n    initialize: function(options) {\n      // Ensure that the options are merged correctly since L.extend is only shallow\n      for (var type in this.options) {\n        if (this.options.hasOwnProperty(type)) {\n          if (options[type]) {\n            options[type] = L.extend({}, this.options[type], options[type]);\n          }\n        }\n      }\n\n      this._toolbarClass = 'leaflet-draw-draw';\n      L.Toolbar.prototype.initialize.call(this, options);\n    },\n\n    // @method getModeHandlers(): object\n    // Get mode handlers information\n    getModeHandlers: function(map) {\n      return [\n        {\n          enabled: this.options.circlemarker,\n          handler: new L.Draw.CircleMarker(map, this.options.circlemarker),\n          title: L.drawLocal.draw.toolbar.buttons.circlemarker,\n        },\n        {\n          enabled: this.options.polyline,\n          handler: new L.Draw.Polyline(map, this.options.polyline),\n          title: L.drawLocal.draw.toolbar.buttons.polyline,\n        },\n        {\n          enabled: this.options.polygon,\n          handler: new L.Draw.Polygon(map, this.options.polygon),\n          title: L.drawLocal.draw.toolbar.buttons.polygon,\n        },\n        {\n          enabled: this.options.rectangle,\n          handler: new L.Draw.Rectangle(map, this.options.rectangle),\n          title: L.drawLocal.draw.toolbar.buttons.rectangle,\n        },\n        {\n          enabled: this.options.circle,\n          handler: new L.Draw.Circle(map, this.options.circle),\n          title: L.drawLocal.draw.toolbar.buttons.circle,\n        },\n        {\n          enabled: this.options.marker,\n          handler: new L.Draw.Marker(map, this.options.marker),\n          title: L.drawLocal.draw.toolbar.buttons.marker,\n        },\n      ];\n    },\n\n    // @method getActions(): object\n    // Get action information\n    getActions: function(handler) {\n      return [\n        {\n          enabled: handler.completeShape,\n          title: L.drawLocal.draw.toolbar.finish.title,\n          text: L.drawLocal.draw.toolbar.finish.text,\n          callback: handler.completeShape,\n          context: handler,\n        },\n        {\n          enabled: handler.deleteLastVertex,\n          title: L.drawLocal.draw.toolbar.undo.title,\n          text: L.drawLocal.draw.toolbar.undo.text,\n          callback: handler.deleteLastVertex,\n          context: handler,\n        },\n        {\n          title: L.drawLocal.draw.toolbar.actions.title,\n          text: L.drawLocal.draw.toolbar.actions.text,\n          callback: this.disable,\n          context: this,\n        },\n      ];\n    },\n\n    // @method setOptions(): void\n    // Sets the options to the toolbar\n    setOptions: function(options) {\n      L.setOptions(this, options);\n\n      for (var type in this._modes) {\n        if (this._modes.hasOwnProperty(type) && options.hasOwnProperty(type)) {\n          this._modes[type].handler.setOptions(options[type]);\n        }\n      }\n    },\n  });\n\n  /*L.Map.mergeOptions({\n editControl: true\n });*/\n  /**\n   * @class L.EditToolbar\n   * @aka EditToolbar\n   */\n  L.EditToolbar = L.Toolbar.extend({\n    statics: {\n      TYPE: 'edit',\n    },\n\n    options: {\n      edit: {\n        selectedPathOptions: {\n          dashArray: '10, 10',\n\n          fill: true,\n          fillColor: '#fe57a1',\n          fillOpacity: 0.1,\n\n          // Whether to user the existing layers color\n          maintainColor: false,\n        },\n      },\n      remove: {},\n      poly: null,\n      featureGroup: null /* REQUIRED! TODO: perhaps if not set then all layers on the map are selectable? */,\n    },\n\n    // @method intialize(): void\n    initialize: function(options) {\n      // Need to set this manually since null is an acceptable value here\n      if (options.edit) {\n        if (typeof options.edit.selectedPathOptions === 'undefined') {\n          options.edit.selectedPathOptions = this.options.edit.selectedPathOptions;\n        }\n        options.edit.selectedPathOptions = L.extend(\n          {},\n          this.options.edit.selectedPathOptions,\n          options.edit.selectedPathOptions\n        );\n      }\n\n      if (options.remove) {\n        options.remove = L.extend({}, this.options.remove, options.remove);\n      }\n\n      if (options.poly) {\n        options.poly = L.extend({}, this.options.poly, options.poly);\n      }\n\n      this._toolbarClass = 'leaflet-draw-edit';\n      L.Toolbar.prototype.initialize.call(this, options);\n\n      this._selectedFeatureCount = 0;\n    },\n\n    // @method getModeHandlers(): object\n    // Get mode handlers information\n    getModeHandlers: function(map) {\n      var featureGroup = this.options.featureGroup;\n      return [\n        {\n          enabled: this.options.edit,\n          handler: new L.EditToolbar.Edit(map, {\n            featureGroup: featureGroup,\n            selectedPathOptions: this.options.edit.selectedPathOptions,\n            poly: this.options.poly,\n          }),\n          title: L.drawLocal.edit.toolbar.buttons.edit,\n        },\n        {\n          enabled: this.options.remove,\n          handler: new L.EditToolbar.Delete(map, {\n            featureGroup: featureGroup,\n          }),\n          title: L.drawLocal.edit.toolbar.buttons.remove,\n        },\n      ];\n    },\n\n    // @method getActions(): object\n    // Get actions information\n    getActions: function(handler) {\n      var actions = [\n        {\n          title: L.drawLocal.edit.toolbar.actions.save.title,\n          text: L.drawLocal.edit.toolbar.actions.save.text,\n          callback: this._save,\n          context: this,\n        },\n        {\n          title: L.drawLocal.edit.toolbar.actions.cancel.title,\n          text: L.drawLocal.edit.toolbar.actions.cancel.text,\n          callback: this.disable,\n          context: this,\n        },\n      ];\n\n      if (handler.removeAllLayers) {\n        actions.push({\n          title: L.drawLocal.edit.toolbar.actions.clearAll.title,\n          text: L.drawLocal.edit.toolbar.actions.clearAll.text,\n          callback: this._clearAllLayers,\n          context: this,\n        });\n      }\n\n      return actions;\n    },\n\n    // @method addToolbar(map): L.DomUtil\n    // Adds the toolbar to the map\n    addToolbar: function(map) {\n      var container = L.Toolbar.prototype.addToolbar.call(this, map);\n\n      this._checkDisabled();\n\n      this.options.featureGroup.on('layeradd layerremove', this._checkDisabled, this);\n\n      return container;\n    },\n\n    // @method removeToolbar(): void\n    // Removes the toolbar from the map\n    removeToolbar: function() {\n      this.options.featureGroup.off('layeradd layerremove', this._checkDisabled, this);\n\n      L.Toolbar.prototype.removeToolbar.call(this);\n    },\n\n    // @method disable(): void\n    // Disables the toolbar\n    disable: function() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      this._activeMode.handler.revertLayers();\n\n      L.Toolbar.prototype.disable.call(this);\n    },\n\n    _save: function() {\n      this._activeMode.handler.save();\n      if (this._activeMode) {\n        this._activeMode.handler.disable();\n      }\n    },\n\n    _clearAllLayers: function() {\n      this._activeMode.handler.removeAllLayers();\n      if (this._activeMode) {\n        this._activeMode.handler.disable();\n      }\n    },\n\n    _checkDisabled: function() {\n      var featureGroup = this.options.featureGroup,\n        hasLayers = featureGroup.getLayers().length !== 0,\n        button;\n\n      if (this.options.edit) {\n        button = this._modes[L.EditToolbar.Edit.TYPE].button;\n\n        if (hasLayers) {\n          L.DomUtil.removeClass(button, 'leaflet-disabled');\n        } else {\n          L.DomUtil.addClass(button, 'leaflet-disabled');\n        }\n\n        button.setAttribute(\n          'title',\n          hasLayers\n            ? L.drawLocal.edit.toolbar.buttons.edit\n            : L.drawLocal.edit.toolbar.buttons.editDisabled\n        );\n      }\n\n      if (this.options.remove) {\n        button = this._modes[L.EditToolbar.Delete.TYPE].button;\n\n        if (hasLayers) {\n          L.DomUtil.removeClass(button, 'leaflet-disabled');\n        } else {\n          L.DomUtil.addClass(button, 'leaflet-disabled');\n        }\n\n        button.setAttribute(\n          'title',\n          hasLayers\n            ? L.drawLocal.edit.toolbar.buttons.remove\n            : L.drawLocal.edit.toolbar.buttons.removeDisabled\n        );\n      }\n    },\n  });\n\n  /**\n   * @class L.EditToolbar.Edit\n   * @aka EditToolbar.Edit\n   */\n  L.EditToolbar.Edit = L.Handler.extend({\n    statics: {\n      TYPE: 'edit',\n    },\n\n    // @method intialize(): void\n    initialize: function(map, options) {\n      L.Handler.prototype.initialize.call(this, map);\n\n      L.setOptions(this, options);\n\n      // Store the selectable layer group for ease of access\n      this._featureGroup = options.featureGroup;\n\n      if (!(this._featureGroup instanceof L.FeatureGroup)) {\n        throw new Error('options.featureGroup must be a L.FeatureGroup');\n      }\n\n      this._uneditedLayerProps = {};\n\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.EditToolbar.Edit.TYPE;\n\n      var version = L.version.split('.');\n      //If Version is >= 1.2.0\n      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n        L.EditToolbar.Edit.include(L.Evented.prototype);\n      } else {\n        L.EditToolbar.Edit.include(L.Mixin.Events);\n      }\n    },\n\n    // @method enable(): void\n    // Enable the edit toolbar\n    enable: function() {\n      if (this._enabled || !this._hasAvailableLayers()) {\n        return;\n      }\n      this.fire('enabled', {\n        handler: this.type,\n      });\n      //this disable other handlers\n\n      this._map.fire(L.Draw.Event.EDITSTART, {\n        handler: this.type,\n      });\n      //allow drawLayer to be updated before beginning edition.\n\n      L.Handler.prototype.enable.call(this);\n      this._featureGroup\n        .on('layeradd', this._enableLayerEdit, this)\n        .on('layerremove', this._disableLayerEdit, this);\n    },\n\n    // @method disable(): void\n    // Disable the edit toolbar\n    disable: function() {\n      if (!this._enabled) {\n        return;\n      }\n      this._featureGroup\n        .off('layeradd', this._enableLayerEdit, this)\n        .off('layerremove', this._disableLayerEdit, this);\n      L.Handler.prototype.disable.call(this);\n      this._map.fire(L.Draw.Event.EDITSTOP, {\n        handler: this.type,\n      });\n      this.fire('disabled', {\n        handler: this.type,\n      });\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks for this handler\n    addHooks: function() {\n      var map = this._map;\n\n      if (map) {\n        map.getContainer().focus();\n\n        this._featureGroup.eachLayer(this._enableLayerEdit, this);\n\n        this._tooltip = new L.Draw.Tooltip(this._map);\n        this._tooltip.updateContent({\n          text: L.drawLocal.edit.handlers.edit.tooltip.text,\n          subtext: L.drawLocal.edit.handlers.edit.tooltip.subtext,\n        });\n\n        // Quickly access the tooltip to update for intersection checking\n        map._editTooltip = this._tooltip;\n\n        this._updateTooltip();\n\n        this._map\n          .on('mousemove', this._onMouseMove, this)\n          .on('touchmove', this._onMouseMove, this)\n          .on('MSPointerMove', this._onMouseMove, this)\n          .on(L.Draw.Event.EDITVERTEX, this._updateTooltip, this);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks for this handler\n    removeHooks: function() {\n      if (this._map) {\n        // Clean up selected layers.\n        this._featureGroup.eachLayer(this._disableLayerEdit, this);\n\n        // Clear the backups of the original layers\n        this._uneditedLayerProps = {};\n\n        this._tooltip.dispose();\n        this._tooltip = null;\n\n        this._map\n          .off('mousemove', this._onMouseMove, this)\n          .off('touchmove', this._onMouseMove, this)\n          .off('MSPointerMove', this._onMouseMove, this)\n          .off(L.Draw.Event.EDITVERTEX, this._updateTooltip, this);\n      }\n    },\n\n    // @method revertLayers(): void\n    // Revert each layer's geometry changes\n    revertLayers: function() {\n      this._featureGroup.eachLayer(function(layer) {\n        this._revertLayer(layer);\n      }, this);\n    },\n\n    // @method save(): void\n    // Save the layer geometries\n    save: function() {\n      var editedLayers = new L.LayerGroup();\n      this._featureGroup.eachLayer(function(layer) {\n        if (layer.edited) {\n          editedLayers.addLayer(layer);\n          layer.edited = false;\n        }\n      });\n      this._map.fire(L.Draw.Event.EDITED, {\n        layers: editedLayers,\n      });\n    },\n\n    _backupLayer: function(layer) {\n      var id = L.Util.stamp(layer);\n\n      if (!this._uneditedLayerProps[id]) {\n        // Polyline, Polygon or Rectangle\n        if (\n          layer instanceof L.Polyline ||\n          layer instanceof L.Polygon ||\n          layer instanceof L.Rectangle\n        ) {\n          this._uneditedLayerProps[id] = {\n            latlngs: L.LatLngUtil.cloneLatLngs(layer.getLatLngs()),\n          };\n        } else if (layer instanceof L.Circle) {\n          this._uneditedLayerProps[id] = {\n            latlng: L.LatLngUtil.cloneLatLng(layer.getLatLng()),\n            radius: layer.getRadius(),\n          };\n        } else if (layer instanceof L.Marker || layer instanceof L.CircleMarker) {\n          // Marker\n          this._uneditedLayerProps[id] = {\n            latlng: L.LatLngUtil.cloneLatLng(layer.getLatLng()),\n          };\n        }\n      }\n    },\n\n    _getTooltipText: function() {\n      return {\n        text: L.drawLocal.edit.handlers.edit.tooltip.text,\n        subtext: L.drawLocal.edit.handlers.edit.tooltip.subtext,\n      };\n    },\n\n    _updateTooltip: function() {\n      this._tooltip.updateContent(this._getTooltipText());\n    },\n\n    _revertLayer: function(layer) {\n      var id = L.Util.stamp(layer);\n      layer.edited = false;\n      if (this._uneditedLayerProps.hasOwnProperty(id)) {\n        // Polyline, Polygon or Rectangle\n        if (\n          layer instanceof L.Polyline ||\n          layer instanceof L.Polygon ||\n          layer instanceof L.Rectangle\n        ) {\n          layer.setLatLngs(this._uneditedLayerProps[id].latlngs);\n        } else if (layer instanceof L.Circle) {\n          layer.setLatLng(this._uneditedLayerProps[id].latlng);\n          layer.setRadius(this._uneditedLayerProps[id].radius);\n        } else if (layer instanceof L.Marker || layer instanceof L.CircleMarker) {\n          // Marker or CircleMarker\n          layer.setLatLng(this._uneditedLayerProps[id].latlng);\n        }\n\n        layer.fire('revert-edited', {\n          layer: layer,\n        });\n      }\n    },\n\n    _enableLayerEdit: function(e) {\n      var layer = e.layer || e.target || e,\n        pathOptions,\n        poly;\n\n      // Back up this layer (if haven't before)\n      this._backupLayer(layer);\n\n      if (this.options.poly) {\n        poly = L.Util.extend({}, this.options.poly);\n        layer.options.poly = poly;\n      }\n\n      // Set different style for editing mode\n      if (this.options.selectedPathOptions) {\n        pathOptions = L.Util.extend({}, this.options.selectedPathOptions);\n\n        // Use the existing color of the layer\n        if (pathOptions.maintainColor) {\n          pathOptions.color = layer.options.color;\n          pathOptions.fillColor = layer.options.fillColor;\n        }\n\n        layer.options.original = L.extend({}, layer.options);\n        layer.options.editing = pathOptions;\n      }\n\n      if (layer instanceof L.Marker) {\n        if (layer.editing) {\n          layer.editing.enable();\n        }\n        layer.dragging.enable();\n        layer\n          .on('dragend', this._onMarkerDragEnd)\n          // #TODO: remove when leaflet finally fixes their draggable so it's touch friendly again.\n          .on('touchmove', this._onTouchMove, this)\n          .on('MSPointerMove', this._onTouchMove, this)\n          .on('touchend', this._onMarkerDragEnd, this)\n          .on('MSPointerUp', this._onMarkerDragEnd, this);\n      } else {\n        layer.editing.enable();\n      }\n    },\n\n    _disableLayerEdit: function(e) {\n      var layer = e.layer || e.target || e;\n\n      layer.edited = false;\n      if (layer.editing) {\n        layer.editing.disable();\n      }\n\n      delete layer.options.editing;\n      delete layer.options.original;\n      // Reset layer styles to that of before select\n      if (this._selectedPathOptions) {\n        if (layer instanceof L.Marker) {\n          this._toggleMarkerHighlight(layer);\n        } else {\n          // reset the layer style to what is was before being selected\n          layer.setStyle(layer.options.previousOptions);\n          // remove the cached options for the layer object\n          delete layer.options.previousOptions;\n        }\n      }\n\n      if (layer instanceof L.Marker) {\n        layer.dragging.disable();\n        layer\n          .off('dragend', this._onMarkerDragEnd, this)\n          .off('touchmove', this._onTouchMove, this)\n          .off('MSPointerMove', this._onTouchMove, this)\n          .off('touchend', this._onMarkerDragEnd, this)\n          .off('MSPointerUp', this._onMarkerDragEnd, this);\n      } else {\n        layer.editing.disable();\n      }\n    },\n\n    _onMouseMove: function(e) {\n      this._tooltip.updatePosition(e.latlng);\n    },\n\n    _onMarkerDragEnd: function(e) {\n      var layer = e.target;\n      layer.edited = true;\n      this._map.fire(L.Draw.Event.EDITMOVE, {\n        layer: layer,\n      });\n    },\n\n    _onTouchMove: function(e) {\n      var touchEvent = e.originalEvent.changedTouches[0],\n        layerPoint = this._map.mouseEventToLayerPoint(touchEvent),\n        latlng = this._map.layerPointToLatLng(layerPoint);\n      e.target.setLatLng(latlng);\n    },\n\n    _hasAvailableLayers: function() {\n      return this._featureGroup.getLayers().length !== 0;\n    },\n  });\n\n  /**\n   * @class L.EditToolbar.Delete\n   * @aka EditToolbar.Delete\n   */\n  L.EditToolbar.Delete = L.Handler.extend({\n    statics: {\n      TYPE: 'remove', // not delete as delete is reserved in js\n    },\n\n    // @method intialize(): void\n    initialize: function(map, options) {\n      L.Handler.prototype.initialize.call(this, map);\n\n      L.Util.setOptions(this, options);\n\n      // Store the selectable layer group for ease of access\n      this._deletableLayers = this.options.featureGroup;\n\n      if (!(this._deletableLayers instanceof L.FeatureGroup)) {\n        throw new Error('options.featureGroup must be a L.FeatureGroup');\n      }\n\n      // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n      this.type = L.EditToolbar.Delete.TYPE;\n\n      var version = L.version.split('.');\n      //If Version is >= 1.2.0\n      if (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n        L.EditToolbar.Delete.include(L.Evented.prototype);\n      } else {\n        L.EditToolbar.Delete.include(L.Mixin.Events);\n      }\n    },\n\n    // @method enable(): void\n    // Enable the delete toolbar\n    enable: function() {\n      if (this._enabled || !this._hasAvailableLayers()) {\n        return;\n      }\n      this.fire('enabled', {\n        handler: this.type,\n      });\n\n      this._map.fire(L.Draw.Event.DELETESTART, {\n        handler: this.type,\n      });\n\n      L.Handler.prototype.enable.call(this);\n\n      this._deletableLayers\n        .on('layeradd', this._enableLayerDelete, this)\n        .on('layerremove', this._disableLayerDelete, this);\n    },\n\n    // @method disable(): void\n    // Disable the delete toolbar\n    disable: function() {\n      if (!this._enabled) {\n        return;\n      }\n\n      this._deletableLayers\n        .off('layeradd', this._enableLayerDelete, this)\n        .off('layerremove', this._disableLayerDelete, this);\n\n      L.Handler.prototype.disable.call(this);\n\n      this._map.fire(L.Draw.Event.DELETESTOP, {\n        handler: this.type,\n      });\n\n      this.fire('disabled', {\n        handler: this.type,\n      });\n    },\n\n    // @method addHooks(): void\n    // Add listener hooks to this handler\n    addHooks: function() {\n      var map = this._map;\n\n      if (map) {\n        map.getContainer().focus();\n\n        this._deletableLayers.eachLayer(this._enableLayerDelete, this);\n        this._deletedLayers = new L.LayerGroup();\n\n        this._tooltip = new L.Draw.Tooltip(this._map);\n        this._tooltip.updateContent({\n          text: L.drawLocal.edit.handlers.remove.tooltip.text,\n        });\n\n        this._map.on('mousemove', this._onMouseMove, this);\n      }\n    },\n\n    // @method removeHooks(): void\n    // Remove listener hooks from this handler\n    removeHooks: function() {\n      if (this._map) {\n        this._deletableLayers.eachLayer(this._disableLayerDelete, this);\n        this._deletedLayers = null;\n\n        this._tooltip.dispose();\n        this._tooltip = null;\n\n        this._map.off('mousemove', this._onMouseMove, this);\n      }\n    },\n\n    // @method revertLayers(): void\n    // Revert the deleted layers back to their prior state.\n    revertLayers: function() {\n      // Iterate of the deleted layers and add them back into the featureGroup\n      this._deletedLayers.eachLayer(function(layer) {\n        this._deletableLayers.addLayer(layer);\n        layer.fire('revert-deleted', {\n          layer: layer,\n        });\n      }, this);\n    },\n\n    // @method save(): void\n    // Save deleted layers\n    save: function() {\n      this._map.fire(L.Draw.Event.DELETED, {\n        layers: this._deletedLayers,\n      });\n    },\n\n    // @method removeAllLayers(): void\n    // Remove all delateable layers\n    removeAllLayers: function() {\n      // Iterate of the delateable layers and add remove them\n      this._deletableLayers.eachLayer(function(layer) {\n        this._removeLayer({\n          layer: layer,\n        });\n      }, this);\n      this.save();\n    },\n\n    _enableLayerDelete: function(e) {\n      var layer = e.layer || e.target || e;\n\n      layer.on('click', this._removeLayer, this);\n    },\n\n    _disableLayerDelete: function(e) {\n      var layer = e.layer || e.target || e;\n\n      layer.off('click', this._removeLayer, this);\n\n      // Remove from the deleted layers so we can't accidentally revert if the user presses cancel\n      this._deletedLayers.removeLayer(layer);\n    },\n\n    _removeLayer: function(e) {\n      var layer = e.layer || e.target || e;\n\n      this._deletableLayers.removeLayer(layer);\n\n      this._deletedLayers.addLayer(layer);\n\n      layer.fire('deleted');\n    },\n\n    _onMouseMove: function(e) {\n      this._tooltip.updatePosition(e.latlng);\n    },\n\n    _hasAvailableLayers: function() {\n      return this._deletableLayers.getLayers().length !== 0;\n    },\n  });\n})(window, document);\n//# sourceMappingURL=leaflet.draw-src.map\n\n\n\n// WEBPACK FOOTER //\n// ./E:/node-prj/geoviewer2/src/leaflet/leaflet.draw-src.js","L.drawLocal = {\n  draw: {\n    toolbar: {\n      actions: {\n        title: \"Annulla disegno\",\n        text: \"Annulla\"\n      },\n      finish: {\n        title: \"Termina disegno\",\n        text: \"Termina\"\n      },\n      undo: {\n        title: \"Cancella ultimo punto\",\n        text: \"Cancella ultimo punto\"\n      },\n      buttons: {\n        polyline: \"Disegna linea\",\n        polygon: \"Disegna poligono\",\n        rectangle: \"Disegna rettangolo\",\n        circle: \"Disegna cerchio\",\n        marker: \"Disegna punto\",\n        circlemarker: \"Disegna punto\"\n      }\n    },\n    handlers: {\n      circle: {\n        tooltip: {\n          start: \"Seleziona e trascina per disegnare il cerchio.\"\n        },\n        radius: \"Radius\"\n      },\n      circlemarker: {\n        tooltip: {\n          start: \"Seleziona la mappa per disegnare il punto.\"\n        }\n      },\n      marker: {\n        tooltip: {\n          start: \"Seleziona la mappa per disegnare il punto.\"\n        }\n      },\n      polygon: {\n        tooltip: {\n          start: \"Seleziona per iniziare il disegno del poligono.\",\n          cont: \"Seleziona per continuare il disegno del poligono.\",\n          end:\n            \"Seleziona il primo vertice oppure effettua <br>un doppio click per completare il poligono.\"\n        }\n      },\n      polyline: {\n        error: \"<strong>Errore:</strong> intersezione non ammessa!\",\n        tooltip: {\n          start: \"Seleziona per iniziare il disegno della linea.\",\n          cont:\n            \"Seleziona per continuare o doppio click per completare la linea.\",\n          end:\n            \"Seleziona per continuare o doppio click per completare la linea.\"\n        }\n      },\n      rectangle: {\n        tooltip: {\n          start: \"Seleziona e trascina per disegnare il rettangolo.\"\n        }\n      },\n      simpleshape: {\n        tooltip: {\n          end: \"Rilascia il bottone del mouse per terminare il disegno.\"\n        }\n      }\n    }\n  },\n  edit: {\n    toolbar: {\n      actions: {\n        save: {\n          title: \"Salva i cambiamenti\",\n          text: \"Salva\"\n        },\n        cancel: {\n          title: \"Annulla modifiche\",\n          text: \"Annulla\"\n        },\n        clearAll: {\n          title: \"Cancella tutte le geometrie\",\n          text: \"Cancella Tutto\"\n        }\n      },\n      buttons: {\n        edit: \"Modifica Geometrie\",\n        editDisabled: \"Nessuna geometria da modificare\",\n        remove: \"Cancella Geometrie\",\n        removeDisabled: \"Nessuna geometria da cacellare\"\n      }\n    },\n    handlers: {\n      edit: {\n        tooltip: {\n          text: \"Trascina il punto o i vertici per modificare le geometrie.\",\n          subtext: 'Seleziona \"Annulla\" per annulare le modifiche.'\n        }\n      },\n      remove: {\n        tooltip: {\n          text: \"Seleziona una geometria per rimuoverla.\"\n        }\n      }\n    }\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./E:/node-prj/geoviewer2/src/leaflet/leaflet.drawlocal.js","<template>\r\n    <div id=\"gv-measure-panel\" class=\"gv-measure-panel\">\r\n        <gv-title :title=\"title\" :divId=\"'gv-measure-panel'\" :noClose=\"true\"></gv-title>\r\n        <div class=\"gv-measure-panel-body gv-inverted-color-scheme\">\r\n          <el-button id=\"gv-measure-point\" title=\"Misure Puntuali (Coordinate)\" @click=\"measurePoint\" class=\"gv-color-scheme ms ms-select-hand\" size=\"mini\" />\r\n          <el-button id=\"gv-measure-line\" title=\"Misure Lineari\" @click=\"measureLine\" class=\"gv-color-scheme ms ms-measure-distance\" size=\"mini\" />\r\n          <el-button id=\"gv-measure-area\" title=\"Misure Areali\" @click=\"measureArea\" class=\"gv-color-scheme ms ms-measure-area\" size=\"mini\" />\r\n          <div v-show=\"showInfo\" id=\"gv-measure-panel-info\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n              <p>Seleziona il bottone relativo<br></p>\r\n              <table width=\"90%\">\r\n                <tr>\r\n                  <td>\r\n                    <el-button id=\"gv-measure-point\" title=\"Misure Puntuali (Coordinate)\" @click=\"measurePoint\" class=\"gv-color-scheme ms ms-select-hand\" size=\"mini\" /> Misure Puntuali (Coordinate)\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <el-button id=\"gv-measure-line\" title=\"Misure Lineari\" @click=\"measureLine\" class=\"gv-color-scheme ms ms-measure-distance\" size=\"mini\" /> Misure Lineari (Lunghezza)\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <el-button id=\"gv-measure-area\" title=\"Misure Areali\" @click=\"measureArea\" class=\"gv-color-scheme ms ms-measure-area\" size=\"mini\" /> Misure Poligonali (Aree)\r\n                  </td>\r\n                </tr>\r\n              </table> \r\n              <br>\r\n          </div>\r\n          <div v-show=\"showInfoPoint\" id=\"gv-measure-panel-info\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n              <p>Disegna il punto sulla mappa<br></p>\r\n              <br>\r\n          </div>\r\n          <div v-show=\"showInfoLine\" id=\"gv-measure-panel-info\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n              <p>Disegna la linea sulla mappa<br></p>\r\n              <br>\r\n          </div>\r\n          <div v-show=\"showInfoArea\" id=\"gv-measure-panel-info\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n              <p>Disegna il poligono sulla mappa<br></p>\r\n              <br>\r\n          </div>\r\n          <div v-show=\"showResultPoint\" id=\"gv-measure-panel-result-point\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n            <p>Coordinate:</p>\r\n            <p>\r\n              <table width=\"90%\">\r\n                <tr>\r\n                  <td>\r\n                    WGS84\r\n                  </td>\r\n                  <td>\r\n                    {{resultPointWGS84}}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    GAUSS-BOAGA\r\n                  </td>\r\n                  <td>\r\n                    {{resultPointGB}}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    ETRS89/UTM32N\r\n                  </td>\r\n                  <td>\r\n                    {{resultPointETRF89}}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    QUOTA\r\n                  </td>\r\n                  <td>\r\n                    {{resultPointHeight}}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </p>\r\n          </div>\r\n          <div v-show=\"showResultLine\" id=\"gv-measure-panel-result-line\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n              <p>Lunghezza:<br></p>\r\n              <table width=\"90%\">\r\n                <tr>\r\n                  <td>\r\n                    {{resultLine}} \r\n                  </td>\r\n                </tr>\r\n              </table>              \r\n              <br>\r\n          </div>\r\n          <div v-show=\"showResultArea\" id=\"gv-measure-panel-result-area\" class=\"gv-measure-panel-result gv-inverted-color-scheme\">\r\n              <p><span>Area:</span></p>\r\n              <p>\r\n              <table width=\"90%\">\r\n                <tr>\r\n                  <td>\r\n                    {{resultArea/10000}} ha\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    {{resultArea}} m<SUP>2</SUP>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    {{resultArea/1000000}} km<SUP>2</SUP>\r\n                  </td>\r\n                </tr>\r\n              </table>   \r\n              </p>         \r\n          </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nrequire('../leaflet/leaflet.draw-src.js')\r\nrequire(\"../leaflet/leaflet.drawlocal.js\");\r\n\r\nimport Vue from 'vue'\r\nimport getCoordTransform from '../services/getCoordTransform'\r\nimport getElevation from '../services/getElevation'\r\n\r\nimport { Button } from 'element-ui'\r\nVue.use(Button)\r\n\r\nexport default {\r\n  name: 'gv-coordinate-panel',\r\n  data() {\r\n    const options = GV.config.getToolOptions(\"gv-measure-button\");\r\n\r\n    return {\r\n      options: options,\r\n      title: options.title || \"Misurazioni\",\r\n      buttonDisabled: true,\r\n      pointClass: 'el-button--default el-button--mini el-button gv-color-scheme ms ms-select-hand',\r\n      lineClass: 'el-button--default el-button--mini el-button gv-color-scheme ms ms-measure-distance',\r\n      areaClass: 'el-button--default el-button--mini el-button gv-color-scheme ms ms-measure-area',\r\n      activeHandler: null,\r\n      layer: null,\r\n      type: null,\r\n      resultPointWGS84: null,\r\n      resultPointGB: null,\r\n      resultPointHeight: null,\r\n      resultPointETRF89: null,\r\n      resultLine: null,\r\n      resultArea: 0,\r\n      showInfo: true,\r\n      showInfoPoint: false,\r\n      showInfoLine: false,\r\n      showInfoArea: false,\r\n      showResultPoint: false,\r\n      showResultLine: false,\r\n      showResultArea: false,\r\n      pointHandler: new L.Draw.Marker(GV.app.map, {\r\n        icon: L.icon({\r\n          iconUrl: '/geoservices/apps/viewer/dist/static/img/marker-icon.png',\r\n          iconSize: [12, 20],\r\n          iconAnchor: [6, 20],\r\n        }),\r\n      }),\r\n      lineHandler: new L.Draw.Polyline(GV.app.map, {\r\n        shapeOptions: {\r\n          color: '#FF9900',\r\n        },\r\n      }),\r\n      areaHandler: new L.Draw.Polygon(GV.app.map, {\r\n        allowIntersection: false,\r\n        showArea: true,\r\n        metric: true,\r\n        shapeOptions: {\r\n          color: '#FF9900',\r\n        },\r\n      }),\r\n    }\r\n  },\r\n  methods: {\r\n    measurePoint() {\r\n      this.clear()\r\n      this.setClass('point')\r\n      this.pointHandler.enable()\r\n    },\r\n    measureLine() {\r\n      this.clear()\r\n      this.setClass('line')\r\n      this.lineHandler.enable()\r\n    },\r\n    measureArea() {\r\n      this.clear()\r\n      this.setClass('area')\r\n      this.areaHandler.enable()\r\n    },\r\n    setClass(type) {\r\n      document.getElementById('gv-measure-point').className = this.pointClass\r\n      document.getElementById('gv-measure-line').className = this.lineClass\r\n      document.getElementById('gv-measure-area').className = this.areaClass\r\n      this.showInfo=(type)? false : true\r\n      switch (type) {\r\n        case 'point':\r\n          document.getElementById('gv-measure-point').className = this.pointClass + ' gv-button-selected'\r\n          this.showInfoPoint=true\r\n          break\r\n        case 'line':\r\n          document.getElementById('gv-measure-line').className = this.lineClass + ' gv-button-selected'\r\n          this.showInfoLine=true\r\n          break\r\n        case 'area':\r\n          document.getElementById('gv-measure-area').className = this.areaClass + ' gv-button-selected'\r\n          this.showInfoArea=true\r\n          break\r\n      }\r\n    },\r\n    clear() {\r\n      this.pointHandler.disable()\r\n      this.lineHandler.disable()\r\n      this.areaHandler.disable()\r\n\r\n      this.showInfoPoint=false\r\n      this.showInfoLine=false\r\n      this.showInfoArea=false\r\n\r\n      this.showResultPoint = false\r\n      this.showResultLine = false\r\n      this.showResultArea = false\r\n\r\n      this.resultPointWGS84 = null\r\n      this.resultPointGB = null\r\n      this.resultPointETRF89 = null\r\n      this.resultLine = null\r\n      this.resultArea = null\r\n\r\n      this.setClass(null)\r\n      if (this.layer) {\r\n        GV.app.map.removeLayer(this.layer)\r\n      }\r\n    },\r\n    handleMarker(latlng) {\r\n      this.resultPointHeight = null\r\n      this.resultPointWGS84 = latlng.lng.toFixed(6) + ',' + latlng.lat.toFixed(6)\r\n      getCoordTransform('4326', '3003', latlng.lng, latlng.lat).then(response => {\r\n        if (response.data.points) {\r\n          const coords = response.data.points[0].split(',')\r\n          this.resultPointGB = parseInt(coords[0]) + ',' + parseInt(coords[1])\r\n        }\r\n      })\r\n      getCoordTransform('4326', '25832', latlng.lng, latlng.lat).then(response => {\r\n        if (response.data.points) {\r\n          const coords = response.data.points[0].split(',')\r\n          this.resultPointETRF89 = parseInt(coords[0]) + ',' + parseInt(coords[1])\r\n        }\r\n      })\r\n      getElevation('4326', latlng.lng, latlng.lat).then(response => {\r\n        if (response.data.status === \"OK\" && response.data.elevation) {\r\n          this.resultPointHeight = response.data.elevation[0]\r\n        } else {\r\n          this.resultPointHeight = null\r\n        }\r\n      })\r\n      this.showResultPoint = true\r\n    },\r\n    handleLine(data) {\r\n      const length = parseInt(this.lineHandler._measurementRunningTotal) //in metri\r\n      if (length < 1000) {\r\n        this.resultLine = length + ' m'\r\n      } else {\r\n        this.resultLine = length / 1000 + ' km' \r\n      }\r\n      this.showResultLine = true\r\n    },\r\n    handleArea(data) {\r\n\r\n      this.resultArea = parseInt(this.areaHandler._area)\r\n      this.showResultArea = true\r\n    },\r\n    drawCreated(e) {\r\n      this.type = e.layerType\r\n      this.layer = e.layer\r\n      this.layer.addTo(GV.app.map)\r\n      // console.log(e)\r\n      switch (this.type) {\r\n        case 'marker':\r\n          this.handleMarker(this.layer.editing._marker._latlng)\r\n          break\r\n        case 'polyline':\r\n          this.handleLine(this.layer.editing)\r\n          break\r\n        case 'polygon':\r\n          this.handleArea(this.layer.editing)\r\n          break\r\n      }\r\n      // label.setLatLng(layer.getBounds().getCenter())\r\n    }    \r\n  },\r\n  mounted: function() {\r\n    GV.eventBus.$on(\"gv-control-measure-activate\", ev => {\r\n      GV.app.map.on(\"draw:created\", e => {\r\n        this.drawCreated(e);\r\n      });\r\n    });\r\n    GV.eventBus.$on('gv-control-measure-deactivate', ev => {\r\n      this.clear()\r\n      GV.app.map.off('draw:created')\r\n    })\r\n    GV.app.map.on('draw:created', e => {\r\n      this.drawCreated(e);\r\n    })\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.gv-measure-panel {\r\n  position: absolute;\r\n  width: 350px;\r\n  left: 0px;\r\n  top: 0px;\r\n  margin-left: 10px;\r\n  margin-top: 50px;\r\n  z-index: 800;\r\n}\r\n\r\n.gv-measure-panel-body {\r\n  position: absolute;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  width: 330px;\r\n  height: 200px;\r\n}\r\n\r\n.gv-measure-panel-result {\r\n  position: absolute;\r\n  background-color: #fff;\r\n  padding-left: 15px;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  margin: 0px;\r\n  margin-top: 10px;\r\n  width: 310px;\r\n}\r\n\r\n/* .gv-measure-panel-body span {\r\n  background-color: #fff;\r\n  padding-left: 15px;\r\n  padding-top: 5px;\r\n  margin: 0px;\r\n} */\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Measure.vue?c8f14fb2","import axios from 'axios'\r\nimport globals from '../globals'\r\n\r\nexport default function getElevation(srs, x, y) {\r\n  let url = `${globals.RL_ELEVATION}${srs}/${x},${y}`\r\n  return axios.get(url, {})\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./E:/node-prj/geoviewer2/src/services/getElevation.js","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gv-measure-panel{position:absolute;width:350px;left:0;top:0;margin-left:10px;margin-top:50px;z-index:800}.gv-measure-panel-body{position:absolute;padding:10px;overflow-y:auto;width:330px;height:200px}.gv-measure-panel-result{position:absolute;background-color:#fff;padding-left:15px;padding-top:5px;padding-bottom:5px;margin:0;margin-top:10px;width:310px}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/Measure.vue\"],\"names\":[],\"mappings\":\"AACA,kBACE,kBAAmB,AACnB,YAAa,AACb,OAAU,AACV,MAAS,AACT,iBAAkB,AAClB,gBAAiB,AACjB,WAAa,CACd,AACD,uBACE,kBAAmB,AACnB,aAAc,AACd,gBAAiB,AACjB,YAAa,AACb,YAAc,CACf,AACD,yBACE,kBAAmB,AACnB,sBAAuB,AACvB,kBAAmB,AACnB,gBAAiB,AACjB,mBAAoB,AACpB,SAAY,AACZ,gBAAiB,AACjB,WAAa,CACd\",\"file\":\"Measure.vue\",\"sourcesContent\":[\"\\n.gv-measure-panel {\\r\\n  position: absolute;\\r\\n  width: 350px;\\r\\n  left: 0px;\\r\\n  top: 0px;\\r\\n  margin-left: 10px;\\r\\n  margin-top: 50px;\\r\\n  z-index: 800;\\n}\\n.gv-measure-panel-body {\\r\\n  position: absolute;\\r\\n  padding: 10px;\\r\\n  overflow-y: auto;\\r\\n  width: 330px;\\r\\n  height: 200px;\\n}\\n.gv-measure-panel-result {\\r\\n  position: absolute;\\r\\n  background-color: #fff;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 5px;\\r\\n  padding-bottom: 5px;\\r\\n  margin: 0px;\\r\\n  margin-top: 10px;\\r\\n  width: 310px;\\n}\\r\\n\\r\\n/* .gv-measure-panel-body span {\\r\\n  background-color: #fff;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 5px;\\r\\n  margin: 0px;\\r\\n} */\\r\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Measure.vue\n// module id = 456\n// module chunks = 13","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Measure.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Measure.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Measure.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-e26c6272!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Measure.vue\n// module id = 570\n// module chunks = 13","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-e26c6272!vue-loader/lib/selector?type=styles&index=0!./Measure.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./Measure.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-e26c6272!vue-loader/lib/selector?type=template&index=0!./Measure.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Measure.vue\n// module id = 655\n// module chunks = 13","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('div', {\n    staticClass: \"gv-measure-panel\",\n    attrs: {\n      \"id\": \"gv-measure-panel\"\n    }\n  }, [_vm._c('gv-title', {\n    attrs: {\n      \"title\": _vm.title,\n      \"divId\": 'gv-measure-panel',\n      \"noClose\": true\n    }\n  }), _vm._v(\" \"), _vm._c('div', {\n    staticClass: \"gv-measure-panel-body gv-inverted-color-scheme\"\n  }, [_vm._c('el-button', {\n    staticClass: \"gv-color-scheme ms ms-select-hand\",\n    attrs: {\n      \"id\": \"gv-measure-point\",\n      \"title\": \"Misure Puntuali (Coordinate)\",\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": _vm.measurePoint\n    }\n  }), _vm._v(\" \"), _vm._c('el-button', {\n    staticClass: \"gv-color-scheme ms ms-measure-distance\",\n    attrs: {\n      \"id\": \"gv-measure-line\",\n      \"title\": \"Misure Lineari\",\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": _vm.measureLine\n    }\n  }), _vm._v(\" \"), _vm._c('el-button', {\n    staticClass: \"gv-color-scheme ms ms-measure-area\",\n    attrs: {\n      \"id\": \"gv-measure-area\",\n      \"title\": \"Misure Areali\",\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": _vm.measureArea\n    }\n  }), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showInfo),\n      expression: \"showInfo\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-info\"\n    }\n  }, [_vm._m(0), _vm._v(\" \"), _vm._c('table', {\n    attrs: {\n      \"width\": \"90%\"\n    }\n  }, [_vm._c('tr', [_vm._c('td', [_vm._c('el-button', {\n    staticClass: \"gv-color-scheme ms ms-select-hand\",\n    attrs: {\n      \"id\": \"gv-measure-point\",\n      \"title\": \"Misure Puntuali (Coordinate)\",\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": _vm.measurePoint\n    }\n  }), _vm._v(\" Misure Puntuali (Coordinate)\\n              \")], 1)]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._c('el-button', {\n    staticClass: \"gv-color-scheme ms ms-measure-distance\",\n    attrs: {\n      \"id\": \"gv-measure-line\",\n      \"title\": \"Misure Lineari\",\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": _vm.measureLine\n    }\n  }), _vm._v(\" Misure Lineari (Lunghezza)\\n              \")], 1)]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._c('el-button', {\n    staticClass: \"gv-color-scheme ms ms-measure-area\",\n    attrs: {\n      \"id\": \"gv-measure-area\",\n      \"title\": \"Misure Areali\",\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": _vm.measureArea\n    }\n  }), _vm._v(\" Misure Poligonali (Aree)\\n              \")], 1)])]), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showInfoPoint),\n      expression: \"showInfoPoint\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-info\"\n    }\n  }, [_vm._m(1), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showInfoLine),\n      expression: \"showInfoLine\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-info\"\n    }\n  }, [_vm._m(2), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showInfoArea),\n      expression: \"showInfoArea\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-info\"\n    }\n  }, [_vm._m(3), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showResultPoint),\n      expression: \"showResultPoint\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-result-point\"\n    }\n  }, [_vm._c('p', [_vm._v(\"Coordinate:\")]), _vm._v(\" \"), _vm._c('p', [_vm._c('table', {\n    attrs: {\n      \"width\": \"90%\"\n    }\n  }, [_vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                WGS84\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointWGS84) + \"\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                GAUSS-BOAGA\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointGB) + \"\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                ETRS89/UTM32N\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointETRF89) + \"\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                QUOTA\\n              \")]), _vm._v(\" \"), _vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultPointHeight) + \"\\n              \")])])])])]), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showResultLine),\n      expression: \"showResultLine\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-result-line\"\n    }\n  }, [_vm._m(4), _vm._v(\" \"), _vm._c('table', {\n    attrs: {\n      \"width\": \"90%\"\n    }\n  }, [_vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultLine) + \" \\n              \")])])]), _vm._v(\" \"), _vm._c('br')]), _vm._v(\" \"), _vm._c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.showResultArea),\n      expression: \"showResultArea\"\n    }],\n    staticClass: \"gv-measure-panel-result gv-inverted-color-scheme\",\n    attrs: {\n      \"id\": \"gv-measure-panel-result-area\"\n    }\n  }, [_vm._m(5), _vm._v(\" \"), _vm._c('p', [_vm._c('table', {\n    attrs: {\n      \"width\": \"90%\"\n    }\n  }, [_vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultArea / 10000) + \" ha\\n              \")])]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultArea) + \" m\"), _vm._c('SUP', [_vm._v(\"2\")])], 1)]), _vm._v(\" \"), _vm._c('tr', [_vm._c('td', [_vm._v(\"\\n                \" + _vm._s(_vm.resultArea / 1000000) + \" km\"), _vm._c('SUP', [_vm._v(\"2\")])], 1)])])])])], 1)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('p', [_vm._v(\"Seleziona il bottone relativo\"), _vm._c('br')])\n},function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('p', [_vm._v(\"Disegna il punto sulla mappa\"), _vm._c('br')])\n},function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('p', [_vm._v(\"Disegna la linea sulla mappa\"), _vm._c('br')])\n},function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('p', [_vm._v(\"Disegna il poligono sulla mappa\"), _vm._c('br')])\n},function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('p', [_vm._v(\"Lunghezza:\"), _vm._c('br')])\n},function (){var _vm=this;var _h=_vm.$createElement;\n  return _vm._c('p', [_vm._c('span', [_vm._v(\"Area:\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-e26c6272!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Measure.vue\n// module id = 756\n// module chunks = 13"],"sourceRoot":""}
/**
 * Created by parodi on 02/08/2016.
 */




GV.App = Mn.Application.extend({

    region: '#gv-container',

    initialize: function (options) {
        'use strict';
        var self = this;

        // Creo variabile globale GV.app
        GV.app = this;

        GV.debug = options.debug;
        this.proxy = options.proxy || GV.Globals.DEFAULT_PROXY;

        GV.Util.log('GV.App.initialize');
        GV.Util.log(options);

        if (!options) {
            GV.debug = true;
            GV.Util.log('GV.App: Mancano opzioni di configurazione', 2);
            return;
        }

        // inizializzo collection rlMaps
        GV.rlMaps = new GV.Models.RlMaps();

        // inizializzo layerFactory
        GV.layerFactory = new GV.LayerFactory();

        //istanzio Layout Base
        this.layout = new GV.Views.Layout(options);
        this.layout.render(options);
        GV.map = this.map = this.layout.map;

        // Gestione caricamento mappe/livelli da configurazione (options.config.maps)
        if (options.config && options.config.maps && options.config.maps.length > 0) {
            _.each(options.config.maps, function (mapConfig) {
                GV.rlMaps.add(new GV.Models.RlMap(mapConfig));
            });
        }

        // Gestione caricamento mappe RL da servizio
        if (options.idMap) {
            this.addRlMap(options.idMap, options);
        } else {
            if (options && options.callback) {
                options.callback(self);
            }
        }

        // avvio automatico applicazione
        this.start(options);
    },

    addRlMap: function (idMap, options) {
        'use strict';
        var self = this;
        $.ajax({
            url: GV.Globals.RL_MAP_CONFIG_SERVICE + idMap,
            //url: '/geoservices/REST/config/map/' + idMap,
            dataType: 'jsonp'
        }).done(function (response) {
            if (!response.success) {
                GV.Util.log('Errore Caricamento Configurazione Mappa: ' + response.message, 2);
                return;
            }
            var mapConfig = response.data;
            GV.rlMaps.add(new GV.Models.RlMap(mapConfig));
            if (options && options.callback) {
                options.callback(self);
            }
            //gestione extent
            if (mapConfig.extent_3857) {
                self.map.setInitialExtent(mapConfig.extent_3857);
            }
            //gestione titolo
            if (options.setMapTitle && !GV.Globals.SMALL_SCREEN) {
                GV.app.getContainer().append("<div id='gv-title' title='" + mapConfig.name + "'>" + mapConfig.name + "</div>");
            }
            //TODO: gestione find
        }).fail(function (jqXHR, textStatus, errorThrown) {
            GV.Util.log(errorThrown,2);
        });
    },

    getContainer: function() {
        "use strict";
        return this.getRegion().$el;
    }

});
